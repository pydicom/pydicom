name: Test GDCM builds

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version:  [3.6] #, 3.7, 3.8, 3.9]
        include:
          - os: ubuntu-latest
            python-version: 3.6

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Get pip cache dir
      id: pip-cache
      run: |
        python -m pip install -U pip # to ensure version > 20 to have cache dir
        echo "::set-output name=dir::$(pip cache dir)"
    - name: pip cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: py${{ matrix.python-version }}-${{ matrix.os }}-pip
    - name: Cache pydicom test data
      id: cache-testdata
      uses: actions/cache@v2
      with:
        path: ${{ env.HOME }}/.pydicom
        key: pydicom-testdata
    - name: Initial test environment setup
      run: |
        python -m pip install -e .
        python -m pip install wheel
        python -m pip install pytest pytest-cov
        python -m pip install numpy
    #- name: Cache GDCM
    #  id: cache-gdcm
    #  uses: actions/cache@v2
    #  with:
    #    path: gdcmbin
    #    key: GDCM-${{ matrix.os }}-python${{ matrix.python-version }}
    - name: Build GDCM (if not in cache)
      #if: ${{ steps.cache-gdcm.outputs.cache-hit != 'true' }}
      run: |
        sudo apt-get install -y --no-install-recommends build-essential swig python3-dev
        sudo apt-get install -y ninja-build cmake
        git clone --branch release https://github.com/malaterre/GDCM.git
        mkdir gdcmbin
        cd gdcmbin
        cmake -GNinja -DGDCM_WRAP_PYTHON=ON -DGDCM_BUILD_SHARED_LIBS=ON  ../GDCM
        ninja
        cd ..
    - name: Archive build dir
      if: ${{ always() }}
      run: |
        tar czf gdcmbin.tar.gz gdcmbin
    - name: Upload build dir
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: gdcmbin
        path: gdcmbin.tar.gz
    - name: Test with GDCM
      run: |
        # Create super-simple setup.py for python -m pip install
        echo 'from setuptools import setup; setup(name="gdcm.py")' > gdcmbin/bin/setup.py
        python -m pip install -e gdcmbin/bin/
        python -c 'import gdcm; print(f"Using gdcm {gdcm.GDCM_VERSION}")'
        pytest
