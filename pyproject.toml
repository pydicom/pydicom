[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
authors = [
    {name = "Darcy Mason and contributors", email = "darcymason@gmail.com"}
]
classifiers=[
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Science/Research",
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Software Development :: Libraries"
]
dependencies = []
description = "A pure Python package for reading and writing DICOM data"
# dynamic = ["version"]
keywords = ["dicom, python, medical, imaging"]
license = {text = "MIT"}
name = "pydicom"
readme = "README.md"
requires-python = ">=3.10"
version = "3.0.0.dev0"


[project.optional-dependencies]
docs = [
        "numpy",
        "numpydoc",
        "matplotlib",
        "pillow",
        "sphinx",
        "sphinx_rtd_theme",
        "sphinx-gallery",
        "sphinxcontrib-napoleon",
        "sphinx-copybutton"
]

[project.urls]
documentation = "https://pydicom.github.io/pydicom"
download = "https://github.com/pydicom/pydicom/archive/master.zip"
homepage = "https://github.com/pydicom/pydicom"
repository = "https://github.com/pydicom/pydicom"



[project.scripts]
pydicom = "pydicom.cli.main:main"


[project.entry-points.pydicom_subcommands]
codify = "pydicom.cli.codify:add_subparser"
show = "pydicom.cli.show:add_subparser"


[tool.ruff]
select = [
    "UP",
    "C9",
    "E",
    "F",
    "PL",
    "W",
]
ignore = [
    "E402",
    "F401",
    "F403",
    "F405",
    "F541",
    "F601",
    "F811",
    "F841",
    "PLR5501",
    "PLC1901",
    "PLR2004",
    "PLW0603",
    "PLW2901",
]
line-length = 214
target-version = "py37"

[tool.ruff.mccabe]
max-complexity = 32

[tool.ruff.pylint]
max-args = 17
max-branches = 39
max-returns = 9
max-statements = 106

[tool.ruff.per-file-ignores]
"*/__init__.py" = ["F401"]
"src/pydicom/config.py" = ["PLW0602"]

[tool.mypy]
python_version = "3.10"
files = "src/"
exclude = ["src/pydicom/benchmarks/", "src/pydicom/pixel_data_handlers/pillow_handler.py"]
show_error_codes = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = false
ignore_missing_imports = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
# 2023-06: mypy complains for a line in this file if ignore used or not.
# Override unused ignores for that one file
module = "pydicom.encoders.base"
warn_unused_ignores = false