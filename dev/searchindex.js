Search.setIndex({"alltitles": {"(Optional) Install required libraries": [[624, "optional-install-required-libraries"]], "A simple example": [[24, "a-simple-example"], [26, "a-simple-example"]], "API Reference": [[55, "api-reference"], [588, null]], "Add items to the private DICOM dictionary": [[16, null]], "Adding Plugins to a Decoder": [[30, "adding-plugins-to-a-decoder"]], "Adding Plugins to an Encoder": [[35, "adding-plugins-to-an-encoder"]], "Adding SOP instances": [[628, "adding-sop-instances"]], "Adding elements": [[626, "adding-elements"]], "Adding new entries to the DICOM dictionary": [[48, "adding-new-entries-to-the-dicom-dictionary"]], "Additional type hints": [[630, "additional-type-hints"]], "Analyse differences between DICOM files": [[20, null]], "Anonymize DICOM data": [[17, null]], "Anonymize a single file": [[17, "anonymize-a-single-file"]], "Any category": [[626, "any-category"]], "Applying the changes": [[628, "applying-the-changes"]], "Available Plugins": [[33, "available-plugins"], [37, "available-plugins"], [38, "available-plugins"], [39, "available-plugins"]], "Best Practices": [[44, null]], "Bits Stored": [[37, "bits-stored"]], "Bufferable O* VRs": [[32, "bufferable-o-vrs"]], "Bug Fixes": [[599, "id47"], [599, "id51"], [600, "bug-fixes"], [601, "bug-fixes"]], "Bug fixes": [[599, "bug-fixes"], [599, "id39"], [599, "id42"], [604, "bug-fixes"], [605, "bug-fixes"], [606, "bug-fixes"]], "Build and preview the documentation": [[625, "build-and-preview-the-documentation"]], "Bulk Data Encapsulation Utilities (pydicom.encaps)": [[68, null]], "Bulk Data Handlers": [[585, null]], "Changelog": [[599, "changelog"], [614, "changelog"]], "Changes": [[599, "changes"], [599, "id1"], [599, "id4"], [599, "id8"], [599, "id11"], [599, "id16"], [599, "id21"], [599, "id24"], [599, "id25"], [599, "id28"], [610, "changes"], [611, "changes"], [612, "changes"], [613, "changes"], [615, "changes"], [617, "changes"], [618, "changes"], [619, "changes"], [620, "changes"], [621, "changes"]], "Character Encoding and Decoding (pydicom.charset)": [[56, null]], "Codifying a part of a DICOM file": [[24, "codifying-a-part-of-a-dicom-file"], [26, "codifying-a-part-of-a-dicom-file"]], "Color space": [[51, "color-space"]], "Combining with other CLIs": [[26, "combining-with-other-clis"], [27, "combining-with-other-clis"]], "Command options": [[24, "command-options"], [26, "command-options"]], "Command-line Interface Guide": [[26, null]], "Commit your changes and make a pull request": [[624, "commit-your-changes-and-make-a-pull-request"], [625, "commit-your-changes-and-make-a-pull-request"]], "Compressed transfer syntaxes": [[634, "compressed-transfer-syntaxes"]], "Compressing Pixel Data": [[45, null]], "Compressing a dataset (with RLE Lossless)": [[631, "compressing-a-dataset-with-rle-lossless"]], "Compressing using pydicom": [[45, "compressing-using-pydicom"]], "Compressing using third-party packages": [[45, "compressing-using-third-party-packages"]], "Compressing with Dataset.compress()": [[45, "compressing-with-dataset-compress"]], "Compressing with Deflated Image Frame Compression": [[631, "compressing-with-deflated-image-frame-compression"]], "Compressing with JPEG 2000": [[631, "compressing-with-jpeg-2000"]], "Compressing with JPEG-LS": [[631, "compressing-with-jpeg-ls"]], "Compression of Pixel Data": [[631, "compression-of-pixel-data"]], "Computation times": [[5, null], [13, null], [19, null], [21, null], [622, null]], "Concepts and Context Groups (pydicom.sr)": [[596, null]], "Conclusion": [[628, "conclusion"], [631, "conclusion"]], "Conclusion and next steps": [[632, "conclusion-and-next-steps"], [634, "conclusion-and-next-steps"]], "Configuration Options (pydicom.config)": [[57, null]], "Contrib file changes": [[599, "contrib-file-changes"], [599, "id37"], [606, "contrib-file-changes"], [607, "contrib-file-changes"]], "Contributing a documentation change": [[625, null]], "Contributing a source code change": [[624, null]], "Contributing to pydicom": [[623, null]], "Controlling decoding": [[634, "controlling-decoding"]], "Converting a dataset into JSON format": [[627, "converting-a-dataset-into-json-format"]], "Converting to an ndarray": [[634, "converting-to-an-ndarray"]], "Converting to an ndarray with metadata": [[634, "converting-to-an-ndarray-with-metadata"]], "Core elements in pydicom": [[43, null]], "Create a new branch": [[624, "create-a-new-branch"], [625, "create-a-new-branch"]], "Creating Encapsulated Data": [[68, "creating-encapsulated-data"]], "Creating Float Pixel Data and Double Float Pixel Data": [[632, "creating-float-pixel-data-and-double-float-pixel-data"]], "Creating Pixel Data": [[632, "creating-pixel-data"]], "Creating a dataset from JSON": [[627, "creating-a-dataset-from-json"]], "Creating a new File-set": [[628, "creating-a-new-file-set"]], "DICOM Data Dictionary": [[59, "dicom-data-dictionary"]], "DICOM File-sets (pydicom.fileset)": [[76, null]], "DICOM File-sets and DICOMDIR": [[628, null]], "Data Dictionary Utilities (pydicom.datadict)": [[59, null]], "Data Elements (pydicom.dataelem)": [[62, null]], "DataElement": [[43, "dataelement"]], "Dataset": [[43, "dataset"]], "Dataset IO": [[71, null]], "Dataset Reading (pydicom.filereader)": [[73, null]], "Dataset Writing (pydicom.filewriter)": [[75, null]], "Dataset basics: read, access, modify, write": [[626, null]], "Dataset.overlay_array()": [[50, "dataset-overlay-array"]], "Dataset.pixel_array": [[51, "dataset-pixel-array"]], "Dataset.waveform_array()": [[52, "dataset-waveform-array"]], "Decode and plot Waveform Data": [[3, null]], "Decoding Plugin Options": [[29, "decoding-plugin-options"]], "Decoding Waveform Data": [[636, "decoding-waveform-data"]], "Decompression of Pixel Data": [[631, "decompression-of-pixel-data"]], "Deflated Image Frame Compression": [[33, null]], "Deleting elements": [[626, "deleting-elements"]], "Deprecations": [[599, "deprecations"], [620, "deprecations"]], "Display unicode person names": [[22, null]], "Displaying Private Data Elements in pydicom": [[48, "displaying-private-data-elements-in-pydicom"]], "Documentation": [[599, "documentation"], [611, "documentation"]], "Download the current source code": [[624, "download-the-current-source-code"]], "Download the documentation": [[625, "download-the-documentation"]], "Downloading example/test DICOM files": [[630, "downloading-example-test-dicom-files"]], "Downsize MRI image using pydicom": [[2, null]], "Element Multi-value Representation (pydicom.multival)": [[63, null]], "Element Tags (pydicom.tag)": [[65, null]], "Element VRs and Python types": [[32, null]], "Element Value Decoding (pydicom.values)": [[67, null]], "Elements": [[626, "elements"]], "Encapsulating data compressed by third-party packages": [[631, "encapsulating-data-compressed-by-third-party-packages"]], "Encoder Plugins Options": [[34, null]], "Encoding Waveform Data": [[636, "encoding-waveform-data"]], "Enforcing Valid DICOM": [[44, "enforcing-valid-dicom"]], "Enhancements": [[599, "enhancements"], [599, "id2"], [599, "id5"], [599, "id9"], [599, "id12"], [599, "id15"], [599, "id18"], [599, "id23"], [599, "id26"], [599, "id29"], [599, "id31"], [599, "id34"], [599, "id36"], [606, "enhancements"], [607, "enhancements"], [609, "enhancements"], [610, "enhancements"], [611, "enhancements"], [612, "enhancements"], [614, "enhancements"], [615, "enhancements"], [617, "enhancements"], [618, "enhancements"], [619, "enhancements"], [620, "enhancements"], [621, "enhancements"]], "Example Datasets (pydicom.examples)": [[70, null]], "Examples": [[33, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [55, "examples"]], "Exceptions (pydicom.errors)": [[69, null]], "Extending the CLI": [[25, null], [26, "extending-the-cli"]], "File Meta Information": [[40, "file-meta-information"]], "FileSet": [[628, "fileset"]], "FileSet and staging": [[628, "fileset-and-staging"]], "Fixes": [[599, "fixes"], [599, "id3"], [599, "id6"], [599, "id10"], [599, "id13"], [599, "id14"], [599, "id17"], [599, "id19"], [599, "id20"], [599, "id22"], [599, "id27"], [599, "id30"], [599, "id32"], [599, "id33"], [608, "fixes"], [609, "fixes"], [610, "fixes"], [611, "fixes"], [612, "fixes"], [613, "fixes"], [614, "fixes"], [615, "fixes"], [616, "fixes"], [617, "fixes"], [618, "fixes"], [619, "fixes"], [620, "fixes"], [621, "fixes"]], "Format the output of the data set printing": [[8, null]], "Frequently asked questions": [[23, null]], "Future-proofing your code": [[44, "future-proofing-your-code"]], "GDCM": [[29, "gdcm"]], "General": [[23, "general"]], "General examples": [[6, null]], "General style guidelines": [[54, "general-style-guidelines"]], "Getting Included Datasets (pydicom.data)": [[58, null]], "Getting Started": [[55, "getting-started"]], "Getting the path to the example dataset": [[626, "getting-the-path-to-the-example-dataset"]], "Glossary": [[40, null]], "Grayscale with 12-bit signed integers": [[632, "grayscale-with-12-bit-signed-integers"]], "Grayscale with 8-bit unsigned integers": [[632, "grayscale-with-8-bit-unsigned-integers"]], "Guidelines for reStructuredText": [[54, "guidelines-for-restructuredtext"]], "Guides": [[41, null]], "Handling of compressed pixel data": [[46, null]], "How do I cite pydicom?": [[23, "how-do-i-cite-pydicom"]], "How to install pydicom": [[630, null]], "IO Base Classes (pydicom.filebase)": [[72, null]], "IO Utilities (pydicom.fileutil)": [[74, null]], "Image Pixel Module": [[40, "image-pixel-module"]], "Image Pixel Options": [[29, "image-pixel-options"]], "Image Processing Options": [[29, "image-processing-options"]], "Image processing": [[1, null], [6, "image-processing"]], "Infrastructure": [[599, "infrastructure"], [608, "infrastructure"]], "Input-output": [[6, "input-output"], [7, null]], "Install pytest and run the test suite": [[624, "install-pytest-and-run-the-test-suite"]], "Install the development version": [[630, "install-the-development-version"]], "Install the official release": [[630, "install-the-official-release"]], "Install the optional libraries": [[630, "install-the-optional-libraries"]], "Install using conda": [[630, "install-using-conda"]], "Install using pip": [[630, "install-using-pip"]], "Installation": [[23, "installation"]], "Installing GDCM": [[630, "installing-gdcm"]], "Installing Pillow": [[630, "installing-pillow"]], "Installing pyjpegls": [[630, "installing-pyjpegls"]], "Installing pylibjpeg": [[630, "installing-pylibjpeg"]], "Installing the pydicom CLI": [[26, "installing-the-pydicom-cli"], [27, "installing-the-pydicom-cli"]], "Introduction": [[26, "introduction"], [27, null], [44, "introduction"], [48, "introduction"], [49, "introduction"], [50, "introduction"], [51, "introduction"], [52, "introduction"], [53, "introduction"], [634, "introduction"]], "Introduction to JSON support": [[627, null]], "JPEG 2000": [[37, "jpeg-2000"]], "JPEG 2000 Encoding": [[37, null]], "JPEG 2000 Lossless": [[37, "jpeg-2000-lossless"]], "JPEG-LS Encoding": [[38, null]], "JPEG-LS Lossless": [[38, "jpeg-ls-lossless"]], "JPEG-LS Near-lossless": [[38, "jpeg-ls-near-lossless"]], "Limiting the pydicom major version in your package": [[44, "limiting-the-pydicom-major-version-in-your-package"]], "Load CT slices and plot axial, sagittal and coronal images": [[4, null]], "Loading existing File-sets": [[628, "loading-existing-file-sets"]], "Major changes": [[599, "major-changes"], [599, "id35"], [599, "id38"], [599, "id41"], [599, "id45"], [599, "id49"], [600, "major-changes"], [601, "major-changes"], [604, "major-changes"], [605, "major-changes"], [606, "major-changes"], [608, "major-changes"]], "Major changes/additions in this version": [[599, "major-changes-additions-in-this-version"], [602, "major-changes-additions-in-this-version"]], "Major fixes in this release": [[599, "major-fixes-in-this-release"], [603, "major-fixes-in-this-release"]], "Make a change to the documentation": [[625, "make-a-change-to-the-documentation"]], "Make a code change and document it": [[624, "make-a-code-change-and-document-it"]], "Metadata processing": [[6, "metadata-processing"], [15, null]], "Minimizing memory usage": [[634, "minimizing-memory-usage"]], "Miscellaneous (pydicom.misc)": [[589, null]], "Miscellaneous Options": [[29, "miscellaneous-options"]], "Modality LUT or Rescale Operation": [[51, "modality-lut-or-rescale-operation"]], "Modifying": [[626, "modifying"]], "Modifying a File-set": [[628, "modifying-a-file-set"]], "Modifying elements": [[626, "modifying-elements"]], "Multi-frame RGB with 8-bit unsigned integers": [[632, "multi-frame-rgb-with-8-bit-unsigned-integers"]], "New \u2018Contrib\u2019 files": [[599, "new-contrib-files"], [603, "new-contrib-files"]], "Next steps": [[626, "next-steps"]], "Optional": [[23, "optional"]], "Other": [[599, "other"], [599, "id43"], [599, "id44"], [599, "id48"], [599, "id52"], [600, "other"], [601, "other"], [603, "other"], [604, "other"], [609, "other"]], "Other Contributors": [[599, "other-contributors"], [607, "other-contributors"]], "Other Enhancements": [[599, "id40"], [599, "id46"], [599, "id50"], [600, "other-enhancements"], [601, "other-enhancements"], [605, "other-enhancements"]], "Other changes and bug fixes": [[599, "other-changes-and-bug-fixes"], [602, "other-changes-and-bug-fixes"]], "Other enhancements": [[599, "other-enhancements"], [608, "other-enhancements"]], "Other fixes in this release": [[599, "other-fixes-in-this-release"], [603, "other-fixes-in-this-release"]], "Overlay Data Handling (pydicom.overlays)": [[590, null]], "Palette Color": [[51, "palette-color"]], "Parsing Encapsulated Data": [[68, "parsing-encapsulated-data"]], "Photometric Interpretation": [[37, "photometric-interpretation"], [38, "photometric-interpretation"]], "Pixel Data": [[633, null]], "Pixel Data (pydicom.pixels)": [[591, null]], "Pixel Data - Part 1: Introduction and accessing": [[634, null]], "Pixel Data - Part 2: Creation of pixel data": [[632, null]], "Pixel Data - Part 3: Compression and decompression": [[631, null]], "Pixel Data Decoder Options": [[29, null]], "Pixel Data Decoder Plugins": [[30, null]], "Pixel Data Decoders (pydicom.pixels.decoders)": [[592, null]], "Pixel Data Decoding": [[31, null]], "Pixel Data Encoder Plugins": [[35, null]], "Pixel Data Encoders (pydicom.pixels.encoders)": [[593, null]], "Pixel Data Encoding": [[36, null]], "Pixel Data Handlers (pydicom.pixel_data_handlers)": [[586, null]], "Pixel Data Processing (pydicom.pixels.processing)": [[594, null]], "Pixel Data Utilities (pydicom.pixels.utils)": [[595, null]], "Pixel Representation": [[38, "pixel-representation"]], "Planar Configuration": [[38, "planar-configuration"]], "Plugin Requirements": [[30, "plugin-requirements"], [35, "plugin-requirements"]], "Plugins": [[42, "plugins"], [42, "id5"]], "Plugins for Compression": [[42, "plugins-for-compression"]], "Plugins for Decompression": [[42, "plugins-for-decompression"]], "Plugins for Pixel Data Compression and Decompression": [[42, null]], "Prerequisites": [[46, "prerequisites"]], "Preview your changes": [[624, "preview-your-changes"]], "Private Data Dictionary": [[59, "private-data-dictionary"]], "Private Data Elements": [[48, null]], "Pydicom Internals": [[599, "pydicom-internals"], [599, "id7"], [619, "pydicom-internals"], [620, "pydicom-internals"]], "RLE Lossless": [[29, "rle-lossless"]], "RLE Lossless Encoding": [[39, null]], "Read RTPLAN DICOM and list information": [[11, null]], "Read a DICOM File-set": [[10, null]], "Read a Dataset and plot Pixel Data": [[9, null]], "Reading": [[626, "reading"]], "Release notes": [[599, null]], "Removals": [[599, "removals"], [620, "removals"]], "Removing All Private Data Elements": [[48, "removing-all-private-data-elements"]], "Removing instances": [[628, "removing-instances"]], "Representation of Data Elements": [[61, null]], "Representation of Datasets (pydicom.dataset)": [[60, null]], "Required": [[23, "required"]], "Sequence": [[43, "sequence"]], "Sequence Element Value Representation (pydicom.sequence)": [[64, null]], "Sequences": [[626, "sequences"], [626, "id1"]], "Setting Private Data Elements with pydicom": [[48, "setting-private-data-elements-with-pydicom"]], "Show a dicom file using hierarchical tree": [[0, null]], "Show working with memory-based dataset": [[14, null]], "Specialized Element Value Representation (pydicom.valuerep)": [[66, null]], "Standard elements": [[626, "standard-elements"]], "Storage SOP Class UIDs": [[597, "storage-sop-class-uids"]], "Structured Reporting": [[635, null]], "Sub-modules": [[591, "sub-modules"]], "Supported Transfer Syntaxes": [[45, "supported-transfer-syntaxes"], [46, "supported-transfer-syntaxes"]], "Tag": [[43, "tag"]], "The DICOM File-set": [[628, "the-dicom-file-set"]], "The DICOMDIR file": [[628, "the-dicomdir-file"]], "Transfer Syntax Lists": [[597, "transfer-syntax-lists"]], "Transfer Syntax UIDs": [[597, "transfer-syntax-uids"]], "Tutorials": [[629, null]], "Types of documentation": [[54, "types-of-documentation"]], "UID Definitions and Utilities (pydicom.uid)": [[597, null]], "UID Utilities": [[597, "uid-utilities"]], "Usage": [[46, "usage"], [70, "usage"], [596, "usage"]], "User Guide": [[55, "user-guide"]], "User Hooks (pydicom.hooks)": [[587, null]], "Using codify": [[53, "using-codify"]], "Using pydicom with matplotlib": [[49, "using-pydicom-with-matplotlib"]], "VOI LUT or Windowing Operation": [[51, "voi-lut-or-windowing-operation"]], "Valid Image Pixel Parameters": [[33, "valid-image-pixel-parameters"], [37, "valid-image-pixel-parameters"], [38, "valid-image-pixel-parameters"], [39, "valid-image-pixel-parameters"]], "Version 0.9.2": [[599, "version-0-9-2"], [600, null]], "Version 0.9.3": [[599, "version-0-9-3"], [601, null]], "Version 0.9.4": [[599, "version-0-9-4"], [602, null]], "Version 0.9.5": [[599, "version-0-9-5"], [603, null]], "Version 0.9.6": [[599, "version-0-9-6"], [604, null]], "Version 0.9.7": [[599, "version-0-9-7"], [605, null]], "Version 0.9.8": [[599, "version-0-9-8"], [606, null]], "Version 0.9.9": [[599, "version-0-9-9"], [607, null]], "Version 1.0.0": [[599, "version-1-0-0"], [608, null]], "Version 1.1.0": [[599, "version-1-1-0"], [609, null]], "Version 1.2.0": [[599, "version-1-2-0"], [610, null]], "Version 1.3.0": [[599, "version-1-3-0"], [611, null]], "Version 1.4.0": [[599, "version-1-4-0"], [612, null]], "Version 1.4.1": [[599, "version-1-4-1"], [613, null]], "Version 2.0.0": [[599, "version-2-0-0"], [614, null]], "Version 2.1.0": [[599, "version-2-1-0"], [615, null]], "Version 2.1.1": [[599, "version-2-1-1"], [616, null]], "Version 2.2.0": [[599, "version-2-2-0"], [617, null]], "Version 2.3.0": [[599, "version-2-3-0"], [618, null]], "Version 2.4.0": [[599, "version-2-4-0"], [619, null]], "Version 3.0.0": [[599, "version-3-0-0"], [620, null]], "Version 3.1.0": [[599, "version-3-1-0"], [621, null]], "Viewing Images": [[49, null]], "Viewing and accessing": [[626, "viewing-and-accessing"]], "Waveform Data Handlers (pydicom.waveforms)": [[598, null]], "Waveforms": [[636, null]], "Waveforms in DICOM": [[636, "waveforms-in-dicom"]], "What are pydicom\u2019s prerequisites?": [[23, "what-are-pydicom-s-prerequisites"]], "What happens next?": [[624, "what-happens-next"], [625, "what-happens-next"]], "What license does pydicom use?": [[23, "what-license-does-pydicom-use"]], "What version of Python can I use?": [[23, "what-version-of-python-can-i-use"]], "Working with Overlay Data": [[50, null]], "Working with Pixel Data": [[51, null]], "Working with Waveform Data": [[52, null]], "Working with large binary data": [[627, "working-with-large-binary-data"]], "Working with sequences": [[18, null]], "Write DICOM data": [[12, null]], "Write tests for your changes": [[624, "write-tests-for-your-changes"]], "Writing": [[626, "writing"]], "Writing DICOM Files": [[53, null]], "Writing a file from scratch": [[53, "writing-a-file-from-scratch"]], "Writing documentation": [[54, null]], "file_meta": [[626, "file-meta"]], "gdcm": [[34, "gdcm"], [42, "gdcm"]], "pillow": [[42, "pillow"]], "pydicom": [[34, "pydicom"], [42, "pydicom"], [42, "id12"]], "pydicom User Guide": [[47, null]], "pydicom codify command": [[24, null], [26, "pydicom-codify-command"]], "pydicom documentation": [[55, null]], "pydicom show command": [[26, "pydicom-show-command"], [28, null]], "pydicom.charset.convert_encodings": [[77, null]], "pydicom.charset.decode_bytes": [[78, null]], "pydicom.charset.decode_element": [[79, null]], "pydicom.charset.encode_string": [[80, null]], "pydicom.config.APPLY_J2K_CORRECTIONS": [[81, null]], "pydicom.config.DS_decimal": [[82, null]], "pydicom.config.DS_numpy": [[83, null]], "pydicom.config.IGNORE": [[84, null]], "pydicom.config.INVALID_KEYWORD_BEHAVIOR": [[85, null]], "pydicom.config.INVALID_KEY_BEHAVIOR": [[86, null]], "pydicom.config.RAISE": [[87, null]], "pydicom.config.WARN": [[88, null]], "pydicom.config.allow_DS_float": [[89, null]], "pydicom.config.assume_implicit_vr_switch": [[90, null]], "pydicom.config.convert_wrong_length_to_UN": [[91, null]], "pydicom.config.data_element_callback": [[92, null]], "pydicom.config.data_element_callback_kwargs": [[93, null]], "pydicom.config.datetime_conversion": [[94, null]], "pydicom.config.debug": [[95, null]], "pydicom.config.enforce_valid_values": [[96, null]], "pydicom.config.future_behavior": [[97, null]], "pydicom.config.pixel_data_handlers": [[98, null]], "pydicom.config.reset_data_element_callback": [[99, null]], "pydicom.config.settings": [[100, null]], "pydicom.config.show_file_meta": [[101, null]], "pydicom.config.use_DS_decimal": [[102, null]], "pydicom.config.use_DS_numpy": [[103, null]], "pydicom.config.use_IS_numpy": [[104, null]], "pydicom.data.get_charset_files": [[105, null]], "pydicom.data.get_palette_files": [[106, null]], "pydicom.data.get_testdata_file": [[107, null]], "pydicom.data.get_testdata_files": [[108, null]], "pydicom.datadict.add_dict_entries": [[109, null]], "pydicom.datadict.add_dict_entry": [[110, null]], "pydicom.datadict.add_private_dict_entries": [[111, null]], "pydicom.datadict.add_private_dict_entry": [[112, null]], "pydicom.datadict.dictionary_VM": [[113, null]], "pydicom.datadict.dictionary_VR": [[114, null]], "pydicom.datadict.dictionary_description": [[115, null]], "pydicom.datadict.dictionary_has_tag": [[116, null]], "pydicom.datadict.dictionary_is_retired": [[117, null]], "pydicom.datadict.dictionary_keyword": [[118, null]], "pydicom.datadict.get_entry": [[119, null]], "pydicom.datadict.get_private_entry": [[120, null]], "pydicom.datadict.keyword_for_tag": [[121, null]], "pydicom.datadict.mask_match": [[122, null]], "pydicom.datadict.private_dictionary_VM": [[123, null]], "pydicom.datadict.private_dictionary_VR": [[124, null]], "pydicom.datadict.private_dictionary_description": [[125, null]], "pydicom.datadict.repeater_has_keyword": [[126, null]], "pydicom.datadict.repeater_has_tag": [[127, null]], "pydicom.datadict.tag_for_keyword": [[128, null]], "pydicom.dataelem.DataElement": [[129, null]], "pydicom.dataelem.DataElement_from_raw": [[130, null]], "pydicom.dataelem.RawDataElement": [[131, null]], "pydicom.dataelem.convert_raw_data_element": [[132, null]], "pydicom.dataset.Dataset": [[133, null]], "pydicom.dataset.FileDataset": [[134, null]], "pydicom.dataset.FileMetaDataset": [[135, null]], "pydicom.dataset.PrivateBlock": [[136, null]], "pydicom.dataset.validate_file_meta": [[137, null]], "pydicom.encaps.decode_data_sequence": [[138, null]], "pydicom.encaps.defragment_data": [[139, null]], "pydicom.encaps.encapsulate": [[140, null]], "pydicom.encaps.encapsulate_buffer": [[141, null]], "pydicom.encaps.encapsulate_extended": [[142, null]], "pydicom.encaps.encapsulate_extended_buffer": [[143, null]], "pydicom.encaps.fragment_frame": [[144, null]], "pydicom.encaps.generate_fragmented_frames": [[145, null]], "pydicom.encaps.generate_fragments": [[146, null]], "pydicom.encaps.generate_frames": [[147, null]], "pydicom.encaps.generate_pixel_data": [[148, null]], "pydicom.encaps.generate_pixel_data_fragment": [[149, null]], "pydicom.encaps.generate_pixel_data_frame": [[150, null]], "pydicom.encaps.get_frame": [[151, null]], "pydicom.encaps.get_frame_offsets": [[152, null]], "pydicom.encaps.itemize_fragment": [[153, null]], "pydicom.encaps.itemize_frame": [[154, null]], "pydicom.encaps.parse_basic_offsets": [[155, null]], "pydicom.encaps.parse_fragments": [[156, null]], "pydicom.encaps.read_item": [[157, null]], "pydicom.errors.InvalidDicomError": [[158, null]], "pydicom.examples.get_path": [[159, null]], "pydicom.filebase.DicomBytesIO": [[160, null]], "pydicom.filebase.DicomFile": [[161, null]], "pydicom.filebase.DicomFileLike": [[162, null]], "pydicom.filebase.DicomIO": [[163, null]], "pydicom.filereader.data_element_generator": [[164, null]], "pydicom.filereader.data_element_offset_to_value": [[165, null]], "pydicom.filereader.dcmread": [[166, null]], "pydicom.filereader.read_dataset": [[167, null]], "pydicom.filereader.read_deferred_data_element": [[168, null]], "pydicom.filereader.read_file_meta_info": [[169, null]], "pydicom.filereader.read_partial": [[170, null]], "pydicom.filereader.read_preamble": [[171, null]], "pydicom.filereader.read_sequence": [[172, null]], "pydicom.filereader.read_sequence_item": [[173, null]], "pydicom.fileset.DIRECTORY_RECORDERS": [[174, null]], "pydicom.fileset.FileInstance": [[175, null]], "pydicom.fileset.FileSet": [[176, null]], "pydicom.fileset.RecordNode": [[177, null]], "pydicom.fileset.generate_filename": [[178, null]], "pydicom.fileset.is_conformant_file_id": [[179, null]], "pydicom.fileutil.absorb_delimiter_item": [[180, null]], "pydicom.fileutil.find_bytes": [[181, null]], "pydicom.fileutil.find_delimiter": [[182, null]], "pydicom.fileutil.length_of_undefined_length": [[183, null]], "pydicom.fileutil.read_undefined_length_value": [[184, null]], "pydicom.filewriter.correct_ambiguous_vr": [[185, null]], "pydicom.filewriter.correct_ambiguous_vr_element": [[186, null]], "pydicom.filewriter.dcmwrite": [[187, null]], "pydicom.filewriter.multi_string": [[188, null]], "pydicom.filewriter.write_ATvalue": [[189, null]], "pydicom.filewriter.write_DA": [[190, null]], "pydicom.filewriter.write_DT": [[191, null]], "pydicom.filewriter.write_OBvalue": [[192, null]], "pydicom.filewriter.write_OWvalue": [[193, null]], "pydicom.filewriter.write_PN": [[194, null]], "pydicom.filewriter.write_TM": [[195, null]], "pydicom.filewriter.write_UI": [[196, null]], "pydicom.filewriter.write_UN": [[197, null]], "pydicom.filewriter.write_data_element": [[198, null]], "pydicom.filewriter.write_dataset": [[199, null]], "pydicom.filewriter.write_file_meta_info": [[200, null]], "pydicom.filewriter.write_number_string": [[201, null]], "pydicom.filewriter.write_numbers": [[202, null]], "pydicom.filewriter.write_sequence": [[203, null]], "pydicom.filewriter.write_sequence_item": [[204, null]], "pydicom.filewriter.write_string": [[205, null]], "pydicom.filewriter.write_text": [[206, null]], "pydicom.hooks.Hooks": [[207, null]], "pydicom.hooks.hooks": [[208, null]], "pydicom.hooks.raw_element_value": [[209, null]], "pydicom.hooks.raw_element_value_fix_separator": [[210, null]], "pydicom.hooks.raw_element_value_retry": [[211, null]], "pydicom.hooks.raw_element_vr": [[212, null]], "pydicom.misc.is_dicom": [[213, null]], "pydicom.misc.size_in_bytes": [[214, null]], "pydicom.multival.MultiValue": [[215, null]], "pydicom.overlays.numpy_handler": [[216, null]], "pydicom.pixel_data_handlers.gdcm_handler": [[217, null]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[218, null]], "pydicom.pixel_data_handlers.numpy_handler": [[219, null]], "pydicom.pixel_data_handlers.pillow_handler": [[220, null]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[221, null]], "pydicom.pixel_data_handlers.rle_handler": [[222, null]], "pydicom.pixels.apply_color_lut": [[223, null]], "pydicom.pixels.apply_icc_profile": [[224, null]], "pydicom.pixels.apply_modality_lut": [[225, null]], "pydicom.pixels.apply_presentation_lut": [[226, null]], "pydicom.pixels.apply_rescale": [[227, null]], "pydicom.pixels.apply_voi": [[228, null]], "pydicom.pixels.apply_voi_lut": [[229, null]], "pydicom.pixels.apply_windowing": [[230, null]], "pydicom.pixels.as_pixel_options": [[231, null]], "pydicom.pixels.compress": [[232, null]], "pydicom.pixels.convert_color_space": [[233, null]], "pydicom.pixels.create_icc_transform": [[234, null]], "pydicom.pixels.decoders.DeflatedExplicitVRLittleEndianDecoder": [[235, null]], "pydicom.pixels.decoders.DeflatedImageFrameCompressionDecoder": [[236, null]], "pydicom.pixels.decoders.ExplicitVRBigEndianDecoder": [[237, null]], "pydicom.pixels.decoders.ExplicitVRLittleEndianDecoder": [[238, null]], "pydicom.pixels.decoders.HTJ2KDecoder": [[239, null]], "pydicom.pixels.decoders.HTJ2KLosslessDecoder": [[240, null]], "pydicom.pixels.decoders.HTJ2KLosslessRPCLDecoder": [[241, null]], "pydicom.pixels.decoders.ImplicitVRLittleEndianDecoder": [[242, null]], "pydicom.pixels.decoders.JPEG2000Decoder": [[243, null]], "pydicom.pixels.decoders.JPEG2000LosslessDecoder": [[244, null]], "pydicom.pixels.decoders.JPEGBaseline8BitDecoder": [[245, null]], "pydicom.pixels.decoders.JPEGExtended12BitDecoder": [[246, null]], "pydicom.pixels.decoders.JPEGLSLosslessDecoder": [[247, null]], "pydicom.pixels.decoders.JPEGLSNearLosslessDecoder": [[248, null]], "pydicom.pixels.decoders.JPEGLosslessDecoder": [[249, null]], "pydicom.pixels.decoders.JPEGLosslessSV1Decoder": [[250, null]], "pydicom.pixels.decoders.RLELosslessDecoder": [[251, null]], "pydicom.pixels.decoders.base.DecodeRunner": [[252, null]], "pydicom.pixels.decoders.base.Decoder": [[253, null]], "pydicom.pixels.decompress": [[254, null]], "pydicom.pixels.encoders.DeflatedImageFrameCompressionEncoder": [[255, null]], "pydicom.pixels.encoders.JPEG2000Encoder": [[256, null]], "pydicom.pixels.encoders.JPEG2000LosslessEncoder": [[257, null]], "pydicom.pixels.encoders.JPEGLSLosslessEncoder": [[258, null]], "pydicom.pixels.encoders.JPEGLSNearLosslessEncoder": [[259, null]], "pydicom.pixels.encoders.RLELosslessEncoder": [[260, null]], "pydicom.pixels.encoders.base.EncodeRunner": [[261, null]], "pydicom.pixels.encoders.base.Encoder": [[262, null]], "pydicom.pixels.get_decoder": [[263, null]], "pydicom.pixels.get_encoder": [[264, null]], "pydicom.pixels.iter_pixels": [[265, null]], "pydicom.pixels.pack_bits": [[266, null]], "pydicom.pixels.pixel_array": [[267, null]], "pydicom.pixels.processing.apply_color_lut": [[268, null]], "pydicom.pixels.processing.apply_icc_profile": [[269, null]], "pydicom.pixels.processing.apply_modality_lut": [[270, null]], "pydicom.pixels.processing.apply_presentation_lut": [[271, null]], "pydicom.pixels.processing.apply_rescale": [[272, null]], "pydicom.pixels.processing.apply_voi": [[273, null]], "pydicom.pixels.processing.apply_voi_lut": [[274, null]], "pydicom.pixels.processing.apply_windowing": [[275, null]], "pydicom.pixels.processing.convert_color_space": [[276, null]], "pydicom.pixels.processing.create_icc_transform": [[277, null]], "pydicom.pixels.set_pixel_data": [[278, null]], "pydicom.pixels.unpack_bits": [[279, null]], "pydicom.pixels.utils.as_pixel_options": [[280, null]], "pydicom.pixels.utils.compress": [[281, null]], "pydicom.pixels.utils.decompress": [[282, null]], "pydicom.pixels.utils.expand_ybr422": [[283, null]], "pydicom.pixels.utils.get_expected_length": [[284, null]], "pydicom.pixels.utils.get_image_pixel_ids": [[285, null]], "pydicom.pixels.utils.get_j2k_parameters": [[286, null]], "pydicom.pixels.utils.get_nr_frames": [[287, null]], "pydicom.pixels.utils.iter_pixels": [[288, null]], "pydicom.pixels.utils.pack_bits": [[289, null]], "pydicom.pixels.utils.pixel_array": [[290, null]], "pydicom.pixels.utils.pixel_dtype": [[291, null]], "pydicom.pixels.utils.reshape_pixel_array": [[292, null]], "pydicom.pixels.utils.set_pixel_data": [[293, null]], "pydicom.pixels.utils.unpack_bits": [[294, null]], "pydicom.sequence.Sequence": [[295, null]], "pydicom.sr.Code": [[296, null]], "pydicom.sr.Collection": [[297, null]], "pydicom.sr.Concepts": [[298, null]], "pydicom.tag.BaseTag": [[299, null]], "pydicom.tag.Tag": [[300, null]], "pydicom.tag.TupleTag": [[301, null]], "pydicom.tag.tag_in_exception": [[302, null]], "pydicom.uid.AcquisitionContextSRStorage": [[303, null]], "pydicom.uid.AdvancedBlendingPresentationStateStorage": [[304, null]], "pydicom.uid.AllTransferSyntaxes": [[305, null]], "pydicom.uid.AmbulatoryECGWaveformStorage": [[306, null]], "pydicom.uid.ArterialPulseWaveformStorage": [[307, null]], "pydicom.uid.AutorefractionMeasurementsStorage": [[308, null]], "pydicom.uid.BasicStructuredDisplayStorage": [[309, null]], "pydicom.uid.BasicTextSRStorage": [[310, null]], "pydicom.uid.BasicVoiceAudioWaveformStorage": [[311, null]], "pydicom.uid.BlendingSoftcopyPresentationStateStorage": [[312, null]], "pydicom.uid.BodyPositionWaveformStorage": [[313, null]], "pydicom.uid.BreastProjectionXRayImageStorageForPresentation": [[314, null]], "pydicom.uid.BreastProjectionXRayImageStorageForProcessing": [[315, null]], "pydicom.uid.BreastTomosynthesisImageStorage": [[316, null]], "pydicom.uid.CArmPhotonElectronRadiationRecordStorage": [[317, null]], "pydicom.uid.CArmPhotonElectronRadiationStorage": [[318, null]], "pydicom.uid.CTDefinedProcedureProtocolStorage": [[319, null]], "pydicom.uid.CTImageStorage": [[320, null]], "pydicom.uid.CTPerformedProcedureProtocolStorage": [[321, null]], "pydicom.uid.CardiacElectrophysiologyWaveformStorage": [[322, null]], "pydicom.uid.ChestCADSRStorage": [[323, null]], "pydicom.uid.ColonCADSRStorage": [[324, null]], "pydicom.uid.ColorPaletteStorage": [[325, null]], "pydicom.uid.ColorSoftcopyPresentationStateStorage": [[326, null]], "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage": [[327, null]], "pydicom.uid.Comprehensive3DSRStorage": [[328, null]], "pydicom.uid.ComprehensiveSRStorage": [[329, null]], "pydicom.uid.ComputedRadiographyImageStorage": [[330, null]], "pydicom.uid.ConfocalMicroscopyImageStorage": [[331, null]], "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage": [[332, null]], "pydicom.uid.ContentAssessmentResultsStorage": [[333, null]], "pydicom.uid.CornealTopographyMapStorage": [[334, null]], "pydicom.uid.DICOS2DAITStorage": [[335, null]], "pydicom.uid.DICOS3DAITStorage": [[336, null]], "pydicom.uid.DICOSCTImageStorage": [[337, null]], "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation": [[338, null]], "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing": [[339, null]], "pydicom.uid.DICOSQuadrupoleResonanceStorage": [[340, null]], "pydicom.uid.DICOSThreatDetectionReportStorage": [[341, null]], "pydicom.uid.DeflatedExplicitVRLittleEndian": [[342, null]], "pydicom.uid.DeflatedImageFrameCompression": [[343, null]], "pydicom.uid.DeformableSpatialRegistrationStorage": [[344, null]], "pydicom.uid.DermoscopicPhotographyImageStorage": [[345, null]], "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation": [[346, null]], "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing": [[347, null]], "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation": [[348, null]], "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing": [[349, null]], "pydicom.uid.DigitalXRayImageStorageForPresentation": [[350, null]], "pydicom.uid.DigitalXRayImageStorageForProcessing": [[351, null]], "pydicom.uid.EddyCurrentImageStorage": [[352, null]], "pydicom.uid.EddyCurrentMultiFrameImageStorage": [[353, null]], "pydicom.uid.ElectromyogramWaveformStorage": [[354, null]], "pydicom.uid.ElectrooculogramWaveformStorage": [[355, null]], "pydicom.uid.EncapsulatedCDAStorage": [[356, null]], "pydicom.uid.EncapsulatedMTLStorage": [[357, null]], "pydicom.uid.EncapsulatedOBJStorage": [[358, null]], "pydicom.uid.EncapsulatedPDFStorage": [[359, null]], "pydicom.uid.EncapsulatedSTLStorage": [[360, null]], "pydicom.uid.EnhancedCTImageStorage": [[361, null]], "pydicom.uid.EnhancedContinuousRTImageStorage": [[362, null]], "pydicom.uid.EnhancedMRColorImageStorage": [[363, null]], "pydicom.uid.EnhancedMRImageStorage": [[364, null]], "pydicom.uid.EnhancedPETImageStorage": [[365, null]], "pydicom.uid.EnhancedRTImageStorage": [[366, null]], "pydicom.uid.EnhancedSRStorage": [[367, null]], "pydicom.uid.EnhancedUSVolumeStorage": [[368, null]], "pydicom.uid.EnhancedXAImageStorage": [[369, null]], "pydicom.uid.EnhancedXRFImageStorage": [[370, null]], "pydicom.uid.EnhancedXRayRadiationDoseSRStorage": [[371, null]], "pydicom.uid.ExplicitVRBigEndian": [[372, null]], "pydicom.uid.ExplicitVRLittleEndian": [[373, null]], "pydicom.uid.ExtensibleSRStorage": [[374, null]], "pydicom.uid.General32bitECGWaveformStorage": [[375, null]], "pydicom.uid.GeneralAudioWaveformStorage": [[376, null]], "pydicom.uid.GeneralECGWaveformStorage": [[377, null]], "pydicom.uid.GenericImplantTemplateStorage": [[378, null]], "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage": [[379, null]], "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage": [[380, null]], "pydicom.uid.HEVCM10P51": [[381, null]], "pydicom.uid.HEVCMP51": [[382, null]], "pydicom.uid.HTJ2K": [[383, null]], "pydicom.uid.HTJ2KLossless": [[384, null]], "pydicom.uid.HTJ2KLosslessRPCL": [[385, null]], "pydicom.uid.HangingProtocolStorage": [[386, null]], "pydicom.uid.HeightMapSegmentationStorage": [[387, null]], "pydicom.uid.HemodynamicWaveformStorage": [[388, null]], "pydicom.uid.ImplantAssemblyTemplateStorage": [[389, null]], "pydicom.uid.ImplantTemplateGroupStorage": [[390, null]], "pydicom.uid.ImplantationPlanSRStorage": [[391, null]], "pydicom.uid.ImplicitVRLittleEndian": [[392, null]], "pydicom.uid.IntraocularLensCalculationsStorage": [[393, null]], "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation": [[394, null]], "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing": [[395, null]], "pydicom.uid.InventoryStorage": [[396, null]], "pydicom.uid.JPEG2000": [[397, null]], "pydicom.uid.JPEG2000Lossless": [[398, null]], "pydicom.uid.JPEG2000MC": [[399, null]], "pydicom.uid.JPEG2000MCLossless": [[400, null]], "pydicom.uid.JPEG2000TransferSyntaxes": [[401, null]], "pydicom.uid.JPEGBaseline8Bit": [[402, null]], "pydicom.uid.JPEGExtended12Bit": [[403, null]], "pydicom.uid.JPEGLSLossless": [[404, null]], "pydicom.uid.JPEGLSNearLossless": [[405, null]], "pydicom.uid.JPEGLSTransferSyntaxes": [[406, null]], "pydicom.uid.JPEGLossless": [[407, null]], "pydicom.uid.JPEGLosslessSV1": [[408, null]], "pydicom.uid.JPEGTransferSyntaxes": [[409, null]], "pydicom.uid.JPEGXL": [[410, null]], "pydicom.uid.JPEGXLJPEGRecompression": [[411, null]], "pydicom.uid.JPEGXLLossless": [[412, null]], "pydicom.uid.JPEGXLTransferSyntaxes": [[413, null]], "pydicom.uid.JPIPHTJ2KReferenced": [[414, null]], "pydicom.uid.JPIPHTJ2KReferencedDeflate": [[415, null]], "pydicom.uid.KeratometryMeasurementsStorage": [[416, null]], "pydicom.uid.KeyObjectSelectionDocumentStorage": [[417, null]], "pydicom.uid.LabelMapSegmentationStorage": [[418, null]], "pydicom.uid.LegacyConvertedEnhancedCTImageStorage": [[419, null]], "pydicom.uid.LegacyConvertedEnhancedMRImageStorage": [[420, null]], "pydicom.uid.LegacyConvertedEnhancedPETImageStorage": [[421, null]], "pydicom.uid.LensometryMeasurementsStorage": [[422, null]], "pydicom.uid.MPEG2MPHL": [[423, null]], "pydicom.uid.MPEG2MPHLF": [[424, null]], "pydicom.uid.MPEG2MPML": [[425, null]], "pydicom.uid.MPEG2MPMLF": [[426, null]], "pydicom.uid.MPEG4HP41": [[427, null]], "pydicom.uid.MPEG4HP41BD": [[428, null]], "pydicom.uid.MPEG4HP41BDF": [[429, null]], "pydicom.uid.MPEG4HP41F": [[430, null]], "pydicom.uid.MPEG4HP422D": [[431, null]], "pydicom.uid.MPEG4HP422DF": [[432, null]], "pydicom.uid.MPEG4HP423D": [[433, null]], "pydicom.uid.MPEG4HP423DF": [[434, null]], "pydicom.uid.MPEG4HP42STEREO": [[435, null]], "pydicom.uid.MPEG4HP42STEREOF": [[436, null]], "pydicom.uid.MPEGTransferSyntaxes": [[437, null]], "pydicom.uid.MRImageStorage": [[438, null]], "pydicom.uid.MRSpectroscopyStorage": [[439, null]], "pydicom.uid.MacularGridThicknessAndVolumeReportStorage": [[440, null]], "pydicom.uid.MammographyCADSRStorage": [[441, null]], "pydicom.uid.MediaStorageDirectoryStorage": [[442, null]], "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage": [[443, null]], "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage": [[444, null]], "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage": [[445, null]], "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage": [[446, null]], "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage": [[447, null]], "pydicom.uid.MultichannelRespiratoryWaveformStorage": [[448, null]], "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage": [[449, null]], "pydicom.uid.NuclearMedicineImageStorage": [[450, null]], "pydicom.uid.OphthalmicAxialMeasurementsStorage": [[451, null]], "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage": [[452, null]], "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage": [[453, null]], "pydicom.uid.OphthalmicPhotography16BitImageStorage": [[454, null]], "pydicom.uid.OphthalmicPhotography8BitImageStorage": [[455, null]], "pydicom.uid.OphthalmicThicknessMapStorage": [[456, null]], "pydicom.uid.OphthalmicTomographyImageStorage": [[457, null]], "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage": [[458, null]], "pydicom.uid.PYDICOM_IMPLEMENTATION_UID": [[459, null]], "pydicom.uid.PYDICOM_ROOT_UID": [[460, null]], "pydicom.uid.ParametricMapStorage": [[461, null]], "pydicom.uid.PatientRadiationDoseSRStorage": [[462, null]], "pydicom.uid.PerformedImagingAgentAdministrationSRStorage": [[463, null]], "pydicom.uid.PhotoacousticImageStorage": [[464, null]], "pydicom.uid.PlannedImagingAgentAdministrationSRStorage": [[465, null]], "pydicom.uid.PositronEmissionTomographyImageStorage": [[466, null]], "pydicom.uid.PrivateTransferSyntaxes": [[467, null]], "pydicom.uid.ProcedureLogStorage": [[468, null]], "pydicom.uid.ProtocolApprovalStorage": [[469, null]], "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage": [[470, null]], "pydicom.uid.RE_VALID_UID": [[471, null]], "pydicom.uid.RE_VALID_UID_PREFIX": [[472, null]], "pydicom.uid.RLELossless": [[473, null]], "pydicom.uid.RLETransferSyntaxes": [[474, null]], "pydicom.uid.RTBeamsDeliveryInstructionStorage": [[475, null]], "pydicom.uid.RTBeamsTreatmentRecordStorage": [[476, null]], "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage": [[477, null]], "pydicom.uid.RTBrachyTreatmentRecordStorage": [[478, null]], "pydicom.uid.RTDoseStorage": [[479, null]], "pydicom.uid.RTImageStorage": [[480, null]], "pydicom.uid.RTIonBeamsTreatmentRecordStorage": [[481, null]], "pydicom.uid.RTIonPlanStorage": [[482, null]], "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage": [[483, null]], "pydicom.uid.RTPhysicianIntentStorage": [[484, null]], "pydicom.uid.RTPlanStorage": [[485, null]], "pydicom.uid.RTRadiationRecordSetStorage": [[486, null]], "pydicom.uid.RTRadiationSalvageRecordStorage": [[487, null]], "pydicom.uid.RTRadiationSetDeliveryInstructionStorage": [[488, null]], "pydicom.uid.RTRadiationSetStorage": [[489, null]], "pydicom.uid.RTSegmentAnnotationStorage": [[490, null]], "pydicom.uid.RTStructureSetStorage": [[491, null]], "pydicom.uid.RTTreatmentPreparationStorage": [[492, null]], "pydicom.uid.RTTreatmentSummaryRecordStorage": [[493, null]], "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage": [[494, null]], "pydicom.uid.RawDataStorage": [[495, null]], "pydicom.uid.RealWorldValueMappingStorage": [[496, null]], "pydicom.uid.RespiratoryWaveformStorage": [[497, null]], "pydicom.uid.RoboticArmRadiationStorage": [[498, null]], "pydicom.uid.RoboticRadiationRecordStorage": [[499, null]], "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage": [[500, null]], "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo": [[501, null]], "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo": [[502, null]], "pydicom.uid.SMPTEST211030PCMDigitalAudio": [[503, null]], "pydicom.uid.SecondaryCaptureImageStorage": [[504, null]], "pydicom.uid.SegmentationStorage": [[505, null]], "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage": [[506, null]], "pydicom.uid.SimplifiedAdultEchoSRStorage": [[507, null]], "pydicom.uid.SleepElectroencephalogramWaveformStorage": [[508, null]], "pydicom.uid.SpatialFiducialsStorage": [[509, null]], "pydicom.uid.SpatialRegistrationStorage": [[510, null]], "pydicom.uid.SpectaclePrescriptionReportStorage": [[511, null]], "pydicom.uid.StereometricRelationshipStorage": [[512, null]], "pydicom.uid.SubjectiveRefractionMeasurementsStorage": [[513, null]], "pydicom.uid.SurfaceScanMeshStorage": [[514, null]], "pydicom.uid.SurfaceScanPointCloudStorage": [[515, null]], "pydicom.uid.SurfaceSegmentationStorage": [[516, null]], "pydicom.uid.ThermographyImageStorage": [[517, null]], "pydicom.uid.ThermographyMultiFrameImageStorage": [[518, null]], "pydicom.uid.TomotherapeuticRadiationRecordStorage": [[519, null]], "pydicom.uid.TomotherapeuticRadiationStorage": [[520, null]], "pydicom.uid.TractographyResultsStorage": [[521, null]], "pydicom.uid.TwelveLeadECGWaveformStorage": [[522, null]], "pydicom.uid.UID": [[523, null]], "pydicom.uid.UltrasoundImageStorage": [[524, null]], "pydicom.uid.UltrasoundMultiFrameImageStorage": [[525, null]], "pydicom.uid.UncompressedTransferSyntaxes": [[526, null]], "pydicom.uid.VLEndoscopicImageStorage": [[527, null]], "pydicom.uid.VLMicroscopicImageStorage": [[528, null]], "pydicom.uid.VLPhotographicImageStorage": [[529, null]], "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage": [[530, null]], "pydicom.uid.VLWholeSlideMicroscopyImageStorage": [[531, null]], "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage": [[532, null]], "pydicom.uid.VideoEndoscopicImageStorage": [[533, null]], "pydicom.uid.VideoMicroscopicImageStorage": [[534, null]], "pydicom.uid.VideoPhotographicImageStorage": [[535, null]], "pydicom.uid.VisualAcuityMeasurementsStorage": [[536, null]], "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage": [[537, null]], "pydicom.uid.WaveformAnnotationSRStorage": [[538, null]], "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage": [[539, null]], "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage": [[540, null]], "pydicom.uid.XADefinedProcedureProtocolStorage": [[541, null]], "pydicom.uid.XAPerformedProcedureProtocolStorage": [[542, null]], "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage": [[543, null]], "pydicom.uid.XRay3DAngiographicImageStorage": [[544, null]], "pydicom.uid.XRay3DCraniofacialImageStorage": [[545, null]], "pydicom.uid.XRayAngiographicImageStorage": [[546, null]], "pydicom.uid.XRayRadiationDoseSRStorage": [[547, null]], "pydicom.uid.XRayRadiofluoroscopicImageStorage": [[548, null]], "pydicom.uid.generate_uid": [[549, null]], "pydicom.uid.register_transfer_syntax": [[550, null]], "pydicom.valuerep.DA": [[551, null]], "pydicom.valuerep.DS": [[552, null]], "pydicom.valuerep.DSdecimal": [[553, null]], "pydicom.valuerep.DSfloat": [[554, null]], "pydicom.valuerep.DT": [[555, null]], "pydicom.valuerep.IS": [[556, null]], "pydicom.valuerep.ISfloat": [[557, null]], "pydicom.valuerep.PersonName": [[558, null]], "pydicom.valuerep.TM": [[559, null]], "pydicom.valuerep.VR": [[560, null]], "pydicom.valuerep.format_number_as_ds": [[561, null]], "pydicom.valuerep.is_valid_ds": [[562, null]], "pydicom.values.convert_AE_string": [[563, null]], "pydicom.values.convert_ATvalue": [[564, null]], "pydicom.values.convert_DA_string": [[565, null]], "pydicom.values.convert_DS_string": [[566, null]], "pydicom.values.convert_DT_string": [[567, null]], "pydicom.values.convert_IS_string": [[568, null]], "pydicom.values.convert_OBvalue": [[569, null]], "pydicom.values.convert_OWvalue": [[570, null]], "pydicom.values.convert_PN": [[571, null]], "pydicom.values.convert_SQ": [[572, null]], "pydicom.values.convert_TM_string": [[573, null]], "pydicom.values.convert_UI": [[574, null]], "pydicom.values.convert_UN": [[575, null]], "pydicom.values.convert_UR_string": [[576, null]], "pydicom.values.convert_numbers": [[577, null]], "pydicom.values.convert_single_string": [[578, null]], "pydicom.values.convert_string": [[579, null]], "pydicom.values.convert_tag": [[580, null]], "pydicom.values.convert_text": [[581, null]], "pydicom.values.convert_value": [[582, null]], "pydicom.values.multi_string": [[583, null]], "pydicom.waveforms.numpy_handler": [[584, null]], "pyjpegls": [[34, "pyjpegls"], [42, "pyjpegls"], [42, "id6"]], "pylibjpeg": [[34, "pylibjpeg"], [37, "pylibjpeg"], [42, "pylibjpeg"], [42, "id8"]]}, "docnames": ["auto_examples/dicomtree", "auto_examples/image_processing/index", "auto_examples/image_processing/plot_downsize_image", "auto_examples/image_processing/plot_waveforms", "auto_examples/image_processing/reslice", "auto_examples/image_processing/sg_execution_times", "auto_examples/index", "auto_examples/input_output/index", "auto_examples/input_output/plot_printing_dataset", "auto_examples/input_output/plot_read_dicom", "auto_examples/input_output/plot_read_fileset", "auto_examples/input_output/plot_read_rtplan", "auto_examples/input_output/plot_write_dicom", "auto_examples/input_output/sg_execution_times", "auto_examples/memory_dataset", "auto_examples/metadata_processing/index", "auto_examples/metadata_processing/plot_add_dict_entries", "auto_examples/metadata_processing/plot_anonymize", "auto_examples/metadata_processing/plot_sequences", "auto_examples/metadata_processing/sg_execution_times", "auto_examples/plot_dicom_difference", "auto_examples/sg_execution_times", "auto_examples/show_charset_name", "faq/index", "guides/cli/cli_codify", "guides/cli/cli_dev", "guides/cli/cli_guide", "guides/cli/cli_intro", "guides/cli/cli_show", "guides/decoding/decoder_options", "guides/decoding/decoder_plugins", "guides/decoding/index", "guides/element_value_types", "guides/encoding/defl_image", "guides/encoding/encoder_plugin_options", "guides/encoding/encoder_plugins", "guides/encoding/index", "guides/encoding/jpeg_2k", "guides/encoding/jpeg_ls", "guides/encoding/rle_lossless", "guides/glossary", "guides/index", "guides/plugin_table", "guides/user/base_element", "guides/user/best_practices", "guides/user/image_data_compression", "guides/user/image_data_handlers", "guides/user/index", "guides/user/private_data_elements", "guides/user/viewing_images", "guides/user/working_with_overlays", "guides/user/working_with_pixel_data", "guides/user/working_with_waveforms", "guides/user/writing_files", "guides/writing_documentation", "index", "reference/charset", "reference/config", "reference/data", "reference/datadict", "reference/dataset", "reference/elem", "reference/elem.dataelem", "reference/elem.multival", "reference/elem.sequence", "reference/elem.tag", "reference/elem.valuerep", "reference/elem.values", "reference/encaps", "reference/errors", "reference/examples", "reference/fileio", "reference/fileio.base", "reference/fileio.read", "reference/fileio.util", "reference/fileio.write", "reference/fileset", "reference/generated/pydicom.charset.convert_encodings", "reference/generated/pydicom.charset.decode_bytes", "reference/generated/pydicom.charset.decode_element", "reference/generated/pydicom.charset.encode_string", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS", "reference/generated/pydicom.config.DS_decimal", "reference/generated/pydicom.config.DS_numpy", "reference/generated/pydicom.config.IGNORE", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR", "reference/generated/pydicom.config.RAISE", "reference/generated/pydicom.config.WARN", "reference/generated/pydicom.config.allow_DS_float", "reference/generated/pydicom.config.assume_implicit_vr_switch", "reference/generated/pydicom.config.convert_wrong_length_to_UN", "reference/generated/pydicom.config.data_element_callback", "reference/generated/pydicom.config.data_element_callback_kwargs", "reference/generated/pydicom.config.datetime_conversion", "reference/generated/pydicom.config.debug", "reference/generated/pydicom.config.enforce_valid_values", "reference/generated/pydicom.config.future_behavior", "reference/generated/pydicom.config.pixel_data_handlers", "reference/generated/pydicom.config.reset_data_element_callback", "reference/generated/pydicom.config.settings", "reference/generated/pydicom.config.show_file_meta", "reference/generated/pydicom.config.use_DS_decimal", "reference/generated/pydicom.config.use_DS_numpy", "reference/generated/pydicom.config.use_IS_numpy", "reference/generated/pydicom.data.get_charset_files", "reference/generated/pydicom.data.get_palette_files", "reference/generated/pydicom.data.get_testdata_file", "reference/generated/pydicom.data.get_testdata_files", "reference/generated/pydicom.datadict.add_dict_entries", "reference/generated/pydicom.datadict.add_dict_entry", "reference/generated/pydicom.datadict.add_private_dict_entries", "reference/generated/pydicom.datadict.add_private_dict_entry", "reference/generated/pydicom.datadict.dictionary_VM", "reference/generated/pydicom.datadict.dictionary_VR", "reference/generated/pydicom.datadict.dictionary_description", "reference/generated/pydicom.datadict.dictionary_has_tag", "reference/generated/pydicom.datadict.dictionary_is_retired", "reference/generated/pydicom.datadict.dictionary_keyword", "reference/generated/pydicom.datadict.get_entry", "reference/generated/pydicom.datadict.get_private_entry", "reference/generated/pydicom.datadict.keyword_for_tag", "reference/generated/pydicom.datadict.mask_match", "reference/generated/pydicom.datadict.private_dictionary_VM", "reference/generated/pydicom.datadict.private_dictionary_VR", "reference/generated/pydicom.datadict.private_dictionary_description", "reference/generated/pydicom.datadict.repeater_has_keyword", "reference/generated/pydicom.datadict.repeater_has_tag", "reference/generated/pydicom.datadict.tag_for_keyword", "reference/generated/pydicom.dataelem.DataElement", "reference/generated/pydicom.dataelem.DataElement_from_raw", "reference/generated/pydicom.dataelem.RawDataElement", "reference/generated/pydicom.dataelem.convert_raw_data_element", "reference/generated/pydicom.dataset.Dataset", "reference/generated/pydicom.dataset.FileDataset", "reference/generated/pydicom.dataset.FileMetaDataset", "reference/generated/pydicom.dataset.PrivateBlock", "reference/generated/pydicom.dataset.validate_file_meta", "reference/generated/pydicom.encaps.decode_data_sequence", "reference/generated/pydicom.encaps.defragment_data", "reference/generated/pydicom.encaps.encapsulate", "reference/generated/pydicom.encaps.encapsulate_buffer", "reference/generated/pydicom.encaps.encapsulate_extended", "reference/generated/pydicom.encaps.encapsulate_extended_buffer", "reference/generated/pydicom.encaps.fragment_frame", "reference/generated/pydicom.encaps.generate_fragmented_frames", "reference/generated/pydicom.encaps.generate_fragments", "reference/generated/pydicom.encaps.generate_frames", "reference/generated/pydicom.encaps.generate_pixel_data", "reference/generated/pydicom.encaps.generate_pixel_data_fragment", "reference/generated/pydicom.encaps.generate_pixel_data_frame", "reference/generated/pydicom.encaps.get_frame", "reference/generated/pydicom.encaps.get_frame_offsets", "reference/generated/pydicom.encaps.itemize_fragment", "reference/generated/pydicom.encaps.itemize_frame", "reference/generated/pydicom.encaps.parse_basic_offsets", "reference/generated/pydicom.encaps.parse_fragments", "reference/generated/pydicom.encaps.read_item", "reference/generated/pydicom.errors.InvalidDicomError", "reference/generated/pydicom.examples.get_path", "reference/generated/pydicom.filebase.DicomBytesIO", "reference/generated/pydicom.filebase.DicomFile", "reference/generated/pydicom.filebase.DicomFileLike", "reference/generated/pydicom.filebase.DicomIO", "reference/generated/pydicom.filereader.data_element_generator", "reference/generated/pydicom.filereader.data_element_offset_to_value", "reference/generated/pydicom.filereader.dcmread", "reference/generated/pydicom.filereader.read_dataset", "reference/generated/pydicom.filereader.read_deferred_data_element", "reference/generated/pydicom.filereader.read_file_meta_info", "reference/generated/pydicom.filereader.read_partial", "reference/generated/pydicom.filereader.read_preamble", "reference/generated/pydicom.filereader.read_sequence", "reference/generated/pydicom.filereader.read_sequence_item", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS", "reference/generated/pydicom.fileset.FileInstance", "reference/generated/pydicom.fileset.FileSet", "reference/generated/pydicom.fileset.RecordNode", "reference/generated/pydicom.fileset.generate_filename", "reference/generated/pydicom.fileset.is_conformant_file_id", "reference/generated/pydicom.fileutil.absorb_delimiter_item", "reference/generated/pydicom.fileutil.find_bytes", "reference/generated/pydicom.fileutil.find_delimiter", "reference/generated/pydicom.fileutil.length_of_undefined_length", "reference/generated/pydicom.fileutil.read_undefined_length_value", "reference/generated/pydicom.filewriter.correct_ambiguous_vr", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element", "reference/generated/pydicom.filewriter.dcmwrite", "reference/generated/pydicom.filewriter.multi_string", "reference/generated/pydicom.filewriter.write_ATvalue", "reference/generated/pydicom.filewriter.write_DA", "reference/generated/pydicom.filewriter.write_DT", "reference/generated/pydicom.filewriter.write_OBvalue", "reference/generated/pydicom.filewriter.write_OWvalue", "reference/generated/pydicom.filewriter.write_PN", "reference/generated/pydicom.filewriter.write_TM", "reference/generated/pydicom.filewriter.write_UI", "reference/generated/pydicom.filewriter.write_UN", "reference/generated/pydicom.filewriter.write_data_element", "reference/generated/pydicom.filewriter.write_dataset", "reference/generated/pydicom.filewriter.write_file_meta_info", "reference/generated/pydicom.filewriter.write_number_string", "reference/generated/pydicom.filewriter.write_numbers", "reference/generated/pydicom.filewriter.write_sequence", "reference/generated/pydicom.filewriter.write_sequence_item", "reference/generated/pydicom.filewriter.write_string", "reference/generated/pydicom.filewriter.write_text", "reference/generated/pydicom.hooks.Hooks", "reference/generated/pydicom.hooks.hooks", "reference/generated/pydicom.hooks.raw_element_value", "reference/generated/pydicom.hooks.raw_element_value_fix_separator", "reference/generated/pydicom.hooks.raw_element_value_retry", "reference/generated/pydicom.hooks.raw_element_vr", "reference/generated/pydicom.misc.is_dicom", "reference/generated/pydicom.misc.size_in_bytes", "reference/generated/pydicom.multival.MultiValue", "reference/generated/pydicom.overlays.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler", "reference/generated/pydicom.pixel_data_handlers.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.pillow_handler", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler", "reference/generated/pydicom.pixel_data_handlers.rle_handler", "reference/generated/pydicom.pixels.apply_color_lut", "reference/generated/pydicom.pixels.apply_icc_profile", "reference/generated/pydicom.pixels.apply_modality_lut", "reference/generated/pydicom.pixels.apply_presentation_lut", "reference/generated/pydicom.pixels.apply_rescale", "reference/generated/pydicom.pixels.apply_voi", "reference/generated/pydicom.pixels.apply_voi_lut", "reference/generated/pydicom.pixels.apply_windowing", "reference/generated/pydicom.pixels.as_pixel_options", "reference/generated/pydicom.pixels.compress", "reference/generated/pydicom.pixels.convert_color_space", "reference/generated/pydicom.pixels.create_icc_transform", "reference/generated/pydicom.pixels.decoders.DeflatedExplicitVRLittleEndianDecoder", "reference/generated/pydicom.pixels.decoders.DeflatedImageFrameCompressionDecoder", "reference/generated/pydicom.pixels.decoders.ExplicitVRBigEndianDecoder", "reference/generated/pydicom.pixels.decoders.ExplicitVRLittleEndianDecoder", "reference/generated/pydicom.pixels.decoders.HTJ2KDecoder", "reference/generated/pydicom.pixels.decoders.HTJ2KLosslessDecoder", "reference/generated/pydicom.pixels.decoders.HTJ2KLosslessRPCLDecoder", "reference/generated/pydicom.pixels.decoders.ImplicitVRLittleEndianDecoder", "reference/generated/pydicom.pixels.decoders.JPEG2000Decoder", "reference/generated/pydicom.pixels.decoders.JPEG2000LosslessDecoder", "reference/generated/pydicom.pixels.decoders.JPEGBaseline8BitDecoder", "reference/generated/pydicom.pixels.decoders.JPEGExtended12BitDecoder", "reference/generated/pydicom.pixels.decoders.JPEGLSLosslessDecoder", "reference/generated/pydicom.pixels.decoders.JPEGLSNearLosslessDecoder", "reference/generated/pydicom.pixels.decoders.JPEGLosslessDecoder", "reference/generated/pydicom.pixels.decoders.JPEGLosslessSV1Decoder", "reference/generated/pydicom.pixels.decoders.RLELosslessDecoder", "reference/generated/pydicom.pixels.decoders.base.DecodeRunner", "reference/generated/pydicom.pixels.decoders.base.Decoder", "reference/generated/pydicom.pixels.decompress", "reference/generated/pydicom.pixels.encoders.DeflatedImageFrameCompressionEncoder", "reference/generated/pydicom.pixels.encoders.JPEG2000Encoder", "reference/generated/pydicom.pixels.encoders.JPEG2000LosslessEncoder", "reference/generated/pydicom.pixels.encoders.JPEGLSLosslessEncoder", "reference/generated/pydicom.pixels.encoders.JPEGLSNearLosslessEncoder", "reference/generated/pydicom.pixels.encoders.RLELosslessEncoder", "reference/generated/pydicom.pixels.encoders.base.EncodeRunner", "reference/generated/pydicom.pixels.encoders.base.Encoder", "reference/generated/pydicom.pixels.get_decoder", "reference/generated/pydicom.pixels.get_encoder", "reference/generated/pydicom.pixels.iter_pixels", "reference/generated/pydicom.pixels.pack_bits", "reference/generated/pydicom.pixels.pixel_array", "reference/generated/pydicom.pixels.processing.apply_color_lut", "reference/generated/pydicom.pixels.processing.apply_icc_profile", "reference/generated/pydicom.pixels.processing.apply_modality_lut", "reference/generated/pydicom.pixels.processing.apply_presentation_lut", "reference/generated/pydicom.pixels.processing.apply_rescale", "reference/generated/pydicom.pixels.processing.apply_voi", "reference/generated/pydicom.pixels.processing.apply_voi_lut", "reference/generated/pydicom.pixels.processing.apply_windowing", "reference/generated/pydicom.pixels.processing.convert_color_space", "reference/generated/pydicom.pixels.processing.create_icc_transform", "reference/generated/pydicom.pixels.set_pixel_data", "reference/generated/pydicom.pixels.unpack_bits", "reference/generated/pydicom.pixels.utils.as_pixel_options", "reference/generated/pydicom.pixels.utils.compress", "reference/generated/pydicom.pixels.utils.decompress", "reference/generated/pydicom.pixels.utils.expand_ybr422", "reference/generated/pydicom.pixels.utils.get_expected_length", "reference/generated/pydicom.pixels.utils.get_image_pixel_ids", "reference/generated/pydicom.pixels.utils.get_j2k_parameters", "reference/generated/pydicom.pixels.utils.get_nr_frames", "reference/generated/pydicom.pixels.utils.iter_pixels", "reference/generated/pydicom.pixels.utils.pack_bits", "reference/generated/pydicom.pixels.utils.pixel_array", "reference/generated/pydicom.pixels.utils.pixel_dtype", "reference/generated/pydicom.pixels.utils.reshape_pixel_array", "reference/generated/pydicom.pixels.utils.set_pixel_data", "reference/generated/pydicom.pixels.utils.unpack_bits", "reference/generated/pydicom.sequence.Sequence", "reference/generated/pydicom.sr.Code", "reference/generated/pydicom.sr.Collection", "reference/generated/pydicom.sr.Concepts", "reference/generated/pydicom.tag.BaseTag", "reference/generated/pydicom.tag.Tag", "reference/generated/pydicom.tag.TupleTag", "reference/generated/pydicom.tag.tag_in_exception", "reference/generated/pydicom.uid.AcquisitionContextSRStorage", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage", "reference/generated/pydicom.uid.AllTransferSyntaxes", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage", "reference/generated/pydicom.uid.BasicTextSRStorage", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.BodyPositionWaveformStorage", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.CTImageStorage", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage", "reference/generated/pydicom.uid.ChestCADSRStorage", "reference/generated/pydicom.uid.ColonCADSRStorage", "reference/generated/pydicom.uid.ColorPaletteStorage", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.Comprehensive3DSRStorage", "reference/generated/pydicom.uid.ComprehensiveSRStorage", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage", "reference/generated/pydicom.uid.ConfocalMicroscopyImageStorage", "reference/generated/pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage", "reference/generated/pydicom.uid.CornealTopographyMapStorage", "reference/generated/pydicom.uid.DICOS2DAITStorage", "reference/generated/pydicom.uid.DICOS3DAITStorage", "reference/generated/pydicom.uid.DICOSCTImageStorage", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian", "reference/generated/pydicom.uid.DeflatedImageFrameCompression", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.EddyCurrentImageStorage", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage", "reference/generated/pydicom.uid.EncapsulatedCDAStorage", "reference/generated/pydicom.uid.EncapsulatedMTLStorage", "reference/generated/pydicom.uid.EncapsulatedOBJStorage", "reference/generated/pydicom.uid.EncapsulatedPDFStorage", "reference/generated/pydicom.uid.EncapsulatedSTLStorage", "reference/generated/pydicom.uid.EnhancedCTImageStorage", "reference/generated/pydicom.uid.EnhancedContinuousRTImageStorage", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage", "reference/generated/pydicom.uid.EnhancedMRImageStorage", "reference/generated/pydicom.uid.EnhancedPETImageStorage", "reference/generated/pydicom.uid.EnhancedRTImageStorage", "reference/generated/pydicom.uid.EnhancedSRStorage", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage", "reference/generated/pydicom.uid.EnhancedXAImageStorage", "reference/generated/pydicom.uid.EnhancedXRFImageStorage", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.ExplicitVRBigEndian", "reference/generated/pydicom.uid.ExplicitVRLittleEndian", "reference/generated/pydicom.uid.ExtensibleSRStorage", "reference/generated/pydicom.uid.General32bitECGWaveformStorage", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage", "reference/generated/pydicom.uid.GeneralECGWaveformStorage", "reference/generated/pydicom.uid.GenericImplantTemplateStorage", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.HEVCM10P51", "reference/generated/pydicom.uid.HEVCMP51", "reference/generated/pydicom.uid.HTJ2K", "reference/generated/pydicom.uid.HTJ2KLossless", "reference/generated/pydicom.uid.HTJ2KLosslessRPCL", "reference/generated/pydicom.uid.HangingProtocolStorage", "reference/generated/pydicom.uid.HeightMapSegmentationStorage", "reference/generated/pydicom.uid.HemodynamicWaveformStorage", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage", "reference/generated/pydicom.uid.ImplantationPlanSRStorage", "reference/generated/pydicom.uid.ImplicitVRLittleEndian", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "reference/generated/pydicom.uid.InventoryStorage", "reference/generated/pydicom.uid.JPEG2000", "reference/generated/pydicom.uid.JPEG2000Lossless", "reference/generated/pydicom.uid.JPEG2000MC", "reference/generated/pydicom.uid.JPEG2000MCLossless", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes", "reference/generated/pydicom.uid.JPEGBaseline8Bit", "reference/generated/pydicom.uid.JPEGExtended12Bit", "reference/generated/pydicom.uid.JPEGLSLossless", "reference/generated/pydicom.uid.JPEGLSNearLossless", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes", "reference/generated/pydicom.uid.JPEGLossless", "reference/generated/pydicom.uid.JPEGLosslessSV1", "reference/generated/pydicom.uid.JPEGTransferSyntaxes", "reference/generated/pydicom.uid.JPEGXL", "reference/generated/pydicom.uid.JPEGXLJPEGRecompression", "reference/generated/pydicom.uid.JPEGXLLossless", "reference/generated/pydicom.uid.JPEGXLTransferSyntaxes", "reference/generated/pydicom.uid.JPIPHTJ2KReferenced", "reference/generated/pydicom.uid.JPIPHTJ2KReferencedDeflate", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage", "reference/generated/pydicom.uid.LabelMapSegmentationStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "reference/generated/pydicom.uid.LensometryMeasurementsStorage", "reference/generated/pydicom.uid.MPEG2MPHL", "reference/generated/pydicom.uid.MPEG2MPHLF", "reference/generated/pydicom.uid.MPEG2MPML", "reference/generated/pydicom.uid.MPEG2MPMLF", "reference/generated/pydicom.uid.MPEG4HP41", "reference/generated/pydicom.uid.MPEG4HP41BD", "reference/generated/pydicom.uid.MPEG4HP41BDF", "reference/generated/pydicom.uid.MPEG4HP41F", "reference/generated/pydicom.uid.MPEG4HP422D", "reference/generated/pydicom.uid.MPEG4HP422DF", "reference/generated/pydicom.uid.MPEG4HP423D", "reference/generated/pydicom.uid.MPEG4HP423DF", "reference/generated/pydicom.uid.MPEG4HP42STEREO", "reference/generated/pydicom.uid.MPEG4HP42STEREOF", "reference/generated/pydicom.uid.MPEGTransferSyntaxes", "reference/generated/pydicom.uid.MRImageStorage", "reference/generated/pydicom.uid.MRSpectroscopyStorage", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "reference/generated/pydicom.uid.MammographyCADSRStorage", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.NuclearMedicineImageStorage", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID", "reference/generated/pydicom.uid.ParametricMapStorage", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PhotoacousticImageStorage", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage", "reference/generated/pydicom.uid.PrivateTransferSyntaxes", "reference/generated/pydicom.uid.ProcedureLogStorage", "reference/generated/pydicom.uid.ProtocolApprovalStorage", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.RE_VALID_UID", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX", "reference/generated/pydicom.uid.RLELossless", "reference/generated/pydicom.uid.RLETransferSyntaxes", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage", "reference/generated/pydicom.uid.RTDoseStorage", "reference/generated/pydicom.uid.RTImageStorage", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTIonPlanStorage", "reference/generated/pydicom.uid.RTPatientPositionAcquisitionInstructionStorage", "reference/generated/pydicom.uid.RTPhysicianIntentStorage", "reference/generated/pydicom.uid.RTPlanStorage", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTRadiationSetStorage", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage", "reference/generated/pydicom.uid.RTStructureSetStorage", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "reference/generated/pydicom.uid.RawDataStorage", "reference/generated/pydicom.uid.RealWorldValueMappingStorage", "reference/generated/pydicom.uid.RespiratoryWaveformStorage", "reference/generated/pydicom.uid.RoboticArmRadiationStorage", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", "reference/generated/pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", "reference/generated/pydicom.uid.SMPTEST211030PCMDigitalAudio", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage", "reference/generated/pydicom.uid.SegmentationStorage", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SpatialFiducialsStorage", "reference/generated/pydicom.uid.SpatialRegistrationStorage", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage", "reference/generated/pydicom.uid.StereometricRelationshipStorage", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage", "reference/generated/pydicom.uid.SurfaceScanMeshStorage", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage", "reference/generated/pydicom.uid.SurfaceSegmentationStorage", "reference/generated/pydicom.uid.ThermographyImageStorage", "reference/generated/pydicom.uid.ThermographyMultiFrameImageStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage", "reference/generated/pydicom.uid.TractographyResultsStorage", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage", "reference/generated/pydicom.uid.UID", "reference/generated/pydicom.uid.UltrasoundImageStorage", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes", "reference/generated/pydicom.uid.VLEndoscopicImageStorage", "reference/generated/pydicom.uid.VLMicroscopicImageStorage", "reference/generated/pydicom.uid.VLPhotographicImageStorage", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage", "reference/generated/pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage", "reference/generated/pydicom.uid.VideoPhotographicImageStorage", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.WaveformAnnotationSRStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage", "reference/generated/pydicom.uid.XRayAngiographicImageStorage", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage", "reference/generated/pydicom.uid.generate_uid", "reference/generated/pydicom.uid.register_transfer_syntax", "reference/generated/pydicom.valuerep.DA", "reference/generated/pydicom.valuerep.DS", "reference/generated/pydicom.valuerep.DSdecimal", "reference/generated/pydicom.valuerep.DSfloat", "reference/generated/pydicom.valuerep.DT", "reference/generated/pydicom.valuerep.IS", "reference/generated/pydicom.valuerep.ISfloat", "reference/generated/pydicom.valuerep.PersonName", "reference/generated/pydicom.valuerep.TM", "reference/generated/pydicom.valuerep.VR", "reference/generated/pydicom.valuerep.format_number_as_ds", "reference/generated/pydicom.valuerep.is_valid_ds", "reference/generated/pydicom.values.convert_AE_string", "reference/generated/pydicom.values.convert_ATvalue", "reference/generated/pydicom.values.convert_DA_string", "reference/generated/pydicom.values.convert_DS_string", "reference/generated/pydicom.values.convert_DT_string", "reference/generated/pydicom.values.convert_IS_string", "reference/generated/pydicom.values.convert_OBvalue", "reference/generated/pydicom.values.convert_OWvalue", "reference/generated/pydicom.values.convert_PN", "reference/generated/pydicom.values.convert_SQ", "reference/generated/pydicom.values.convert_TM_string", "reference/generated/pydicom.values.convert_UI", "reference/generated/pydicom.values.convert_UN", "reference/generated/pydicom.values.convert_UR_string", "reference/generated/pydicom.values.convert_numbers", "reference/generated/pydicom.values.convert_single_string", "reference/generated/pydicom.values.convert_string", "reference/generated/pydicom.values.convert_tag", "reference/generated/pydicom.values.convert_text", "reference/generated/pydicom.values.convert_value", "reference/generated/pydicom.values.multi_string", "reference/generated/pydicom.waveforms.numpy_handler", "reference/handlers", "reference/handlers.pixel_data", "reference/hooks", "reference/index", "reference/misc", "reference/overlays", "reference/pixels", "reference/pixels.decoders", "reference/pixels.encoders", "reference/pixels.processing", "reference/pixels.utils", "reference/sr", "reference/uid", "reference/waveforms", "release_notes/index", "release_notes/v0.9.2", "release_notes/v0.9.3", "release_notes/v0.9.4", "release_notes/v0.9.5", "release_notes/v0.9.6", "release_notes/v0.9.7", "release_notes/v0.9.8", "release_notes/v0.9.9", "release_notes/v1.0.0", "release_notes/v1.1.0", "release_notes/v1.2.0", "release_notes/v1.3.0", "release_notes/v1.4.0", "release_notes/v1.4.1", "release_notes/v2.0.0", "release_notes/v2.1.0", "release_notes/v2.1.1", "release_notes/v2.2.0", "release_notes/v2.3.0", "release_notes/v2.4.0", "release_notes/v3.0.0", "release_notes/v3.1.0", "sg_execution_times", "tutorials/contributing", "tutorials/contributing_code", "tutorials/contributing_docs", "tutorials/dataset_basics", "tutorials/dicom_json", "tutorials/filesets", "tutorials/index", "tutorials/installation", "tutorials/pixel_data/compressing", "tutorials/pixel_data/creation", "tutorials/pixel_data/index", "tutorials/pixel_data/introduction", "tutorials/sr_basics", "tutorials/waveforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2}, "filenames": ["auto_examples/dicomtree.rst", "auto_examples/image_processing/index.rst", "auto_examples/image_processing/plot_downsize_image.rst", "auto_examples/image_processing/plot_waveforms.rst", "auto_examples/image_processing/reslice.rst", "auto_examples/image_processing/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/input_output/index.rst", "auto_examples/input_output/plot_printing_dataset.rst", "auto_examples/input_output/plot_read_dicom.rst", "auto_examples/input_output/plot_read_fileset.rst", "auto_examples/input_output/plot_read_rtplan.rst", "auto_examples/input_output/plot_write_dicom.rst", "auto_examples/input_output/sg_execution_times.rst", "auto_examples/memory_dataset.rst", "auto_examples/metadata_processing/index.rst", "auto_examples/metadata_processing/plot_add_dict_entries.rst", "auto_examples/metadata_processing/plot_anonymize.rst", "auto_examples/metadata_processing/plot_sequences.rst", "auto_examples/metadata_processing/sg_execution_times.rst", "auto_examples/plot_dicom_difference.rst", "auto_examples/sg_execution_times.rst", "auto_examples/show_charset_name.rst", "faq/index.rst", "guides/cli/cli_codify.rst", "guides/cli/cli_dev.rst", "guides/cli/cli_guide.rst", "guides/cli/cli_intro.rst", "guides/cli/cli_show.rst", "guides/decoding/decoder_options.rst", "guides/decoding/decoder_plugins.rst", "guides/decoding/index.rst", "guides/element_value_types.rst", "guides/encoding/defl_image.rst", "guides/encoding/encoder_plugin_options.rst", "guides/encoding/encoder_plugins.rst", "guides/encoding/index.rst", "guides/encoding/jpeg_2k.rst", "guides/encoding/jpeg_ls.rst", "guides/encoding/rle_lossless.rst", "guides/glossary.rst", "guides/index.rst", "guides/plugin_table.rst", "guides/user/base_element.rst", "guides/user/best_practices.rst", "guides/user/image_data_compression.rst", "guides/user/image_data_handlers.rst", "guides/user/index.rst", "guides/user/private_data_elements.rst", "guides/user/viewing_images.rst", "guides/user/working_with_overlays.rst", "guides/user/working_with_pixel_data.rst", "guides/user/working_with_waveforms.rst", "guides/user/writing_files.rst", "guides/writing_documentation.rst", "index.rst", "reference/charset.rst", "reference/config.rst", "reference/data.rst", "reference/datadict.rst", "reference/dataset.rst", "reference/elem.rst", "reference/elem.dataelem.rst", "reference/elem.multival.rst", "reference/elem.sequence.rst", "reference/elem.tag.rst", "reference/elem.valuerep.rst", "reference/elem.values.rst", "reference/encaps.rst", "reference/errors.rst", "reference/examples.rst", "reference/fileio.rst", "reference/fileio.base.rst", "reference/fileio.read.rst", "reference/fileio.util.rst", "reference/fileio.write.rst", "reference/fileset.rst", "reference/generated/pydicom.charset.convert_encodings.rst", "reference/generated/pydicom.charset.decode_bytes.rst", "reference/generated/pydicom.charset.decode_element.rst", "reference/generated/pydicom.charset.encode_string.rst", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS.rst", "reference/generated/pydicom.config.DS_decimal.rst", "reference/generated/pydicom.config.DS_numpy.rst", "reference/generated/pydicom.config.IGNORE.rst", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR.rst", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR.rst", "reference/generated/pydicom.config.RAISE.rst", "reference/generated/pydicom.config.WARN.rst", "reference/generated/pydicom.config.allow_DS_float.rst", "reference/generated/pydicom.config.assume_implicit_vr_switch.rst", "reference/generated/pydicom.config.convert_wrong_length_to_UN.rst", "reference/generated/pydicom.config.data_element_callback.rst", "reference/generated/pydicom.config.data_element_callback_kwargs.rst", "reference/generated/pydicom.config.datetime_conversion.rst", "reference/generated/pydicom.config.debug.rst", "reference/generated/pydicom.config.enforce_valid_values.rst", "reference/generated/pydicom.config.future_behavior.rst", "reference/generated/pydicom.config.pixel_data_handlers.rst", "reference/generated/pydicom.config.reset_data_element_callback.rst", "reference/generated/pydicom.config.settings.rst", "reference/generated/pydicom.config.show_file_meta.rst", "reference/generated/pydicom.config.use_DS_decimal.rst", "reference/generated/pydicom.config.use_DS_numpy.rst", "reference/generated/pydicom.config.use_IS_numpy.rst", "reference/generated/pydicom.data.get_charset_files.rst", "reference/generated/pydicom.data.get_palette_files.rst", "reference/generated/pydicom.data.get_testdata_file.rst", "reference/generated/pydicom.data.get_testdata_files.rst", "reference/generated/pydicom.datadict.add_dict_entries.rst", "reference/generated/pydicom.datadict.add_dict_entry.rst", "reference/generated/pydicom.datadict.add_private_dict_entries.rst", "reference/generated/pydicom.datadict.add_private_dict_entry.rst", "reference/generated/pydicom.datadict.dictionary_VM.rst", "reference/generated/pydicom.datadict.dictionary_VR.rst", "reference/generated/pydicom.datadict.dictionary_description.rst", "reference/generated/pydicom.datadict.dictionary_has_tag.rst", "reference/generated/pydicom.datadict.dictionary_is_retired.rst", "reference/generated/pydicom.datadict.dictionary_keyword.rst", "reference/generated/pydicom.datadict.get_entry.rst", "reference/generated/pydicom.datadict.get_private_entry.rst", "reference/generated/pydicom.datadict.keyword_for_tag.rst", "reference/generated/pydicom.datadict.mask_match.rst", "reference/generated/pydicom.datadict.private_dictionary_VM.rst", "reference/generated/pydicom.datadict.private_dictionary_VR.rst", "reference/generated/pydicom.datadict.private_dictionary_description.rst", "reference/generated/pydicom.datadict.repeater_has_keyword.rst", "reference/generated/pydicom.datadict.repeater_has_tag.rst", "reference/generated/pydicom.datadict.tag_for_keyword.rst", "reference/generated/pydicom.dataelem.DataElement.rst", "reference/generated/pydicom.dataelem.DataElement_from_raw.rst", "reference/generated/pydicom.dataelem.RawDataElement.rst", "reference/generated/pydicom.dataelem.convert_raw_data_element.rst", "reference/generated/pydicom.dataset.Dataset.rst", "reference/generated/pydicom.dataset.FileDataset.rst", "reference/generated/pydicom.dataset.FileMetaDataset.rst", "reference/generated/pydicom.dataset.PrivateBlock.rst", "reference/generated/pydicom.dataset.validate_file_meta.rst", "reference/generated/pydicom.encaps.decode_data_sequence.rst", "reference/generated/pydicom.encaps.defragment_data.rst", "reference/generated/pydicom.encaps.encapsulate.rst", "reference/generated/pydicom.encaps.encapsulate_buffer.rst", "reference/generated/pydicom.encaps.encapsulate_extended.rst", "reference/generated/pydicom.encaps.encapsulate_extended_buffer.rst", "reference/generated/pydicom.encaps.fragment_frame.rst", "reference/generated/pydicom.encaps.generate_fragmented_frames.rst", "reference/generated/pydicom.encaps.generate_fragments.rst", "reference/generated/pydicom.encaps.generate_frames.rst", "reference/generated/pydicom.encaps.generate_pixel_data.rst", "reference/generated/pydicom.encaps.generate_pixel_data_fragment.rst", "reference/generated/pydicom.encaps.generate_pixel_data_frame.rst", "reference/generated/pydicom.encaps.get_frame.rst", "reference/generated/pydicom.encaps.get_frame_offsets.rst", "reference/generated/pydicom.encaps.itemize_fragment.rst", "reference/generated/pydicom.encaps.itemize_frame.rst", "reference/generated/pydicom.encaps.parse_basic_offsets.rst", "reference/generated/pydicom.encaps.parse_fragments.rst", "reference/generated/pydicom.encaps.read_item.rst", "reference/generated/pydicom.errors.InvalidDicomError.rst", "reference/generated/pydicom.examples.get_path.rst", "reference/generated/pydicom.filebase.DicomBytesIO.rst", "reference/generated/pydicom.filebase.DicomFile.rst", "reference/generated/pydicom.filebase.DicomFileLike.rst", "reference/generated/pydicom.filebase.DicomIO.rst", "reference/generated/pydicom.filereader.data_element_generator.rst", "reference/generated/pydicom.filereader.data_element_offset_to_value.rst", "reference/generated/pydicom.filereader.dcmread.rst", "reference/generated/pydicom.filereader.read_dataset.rst", "reference/generated/pydicom.filereader.read_deferred_data_element.rst", "reference/generated/pydicom.filereader.read_file_meta_info.rst", "reference/generated/pydicom.filereader.read_partial.rst", "reference/generated/pydicom.filereader.read_preamble.rst", "reference/generated/pydicom.filereader.read_sequence.rst", "reference/generated/pydicom.filereader.read_sequence_item.rst", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS.rst", "reference/generated/pydicom.fileset.FileInstance.rst", "reference/generated/pydicom.fileset.FileSet.rst", "reference/generated/pydicom.fileset.RecordNode.rst", "reference/generated/pydicom.fileset.generate_filename.rst", "reference/generated/pydicom.fileset.is_conformant_file_id.rst", "reference/generated/pydicom.fileutil.absorb_delimiter_item.rst", "reference/generated/pydicom.fileutil.find_bytes.rst", "reference/generated/pydicom.fileutil.find_delimiter.rst", "reference/generated/pydicom.fileutil.length_of_undefined_length.rst", "reference/generated/pydicom.fileutil.read_undefined_length_value.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element.rst", "reference/generated/pydicom.filewriter.dcmwrite.rst", "reference/generated/pydicom.filewriter.multi_string.rst", "reference/generated/pydicom.filewriter.write_ATvalue.rst", "reference/generated/pydicom.filewriter.write_DA.rst", "reference/generated/pydicom.filewriter.write_DT.rst", "reference/generated/pydicom.filewriter.write_OBvalue.rst", "reference/generated/pydicom.filewriter.write_OWvalue.rst", "reference/generated/pydicom.filewriter.write_PN.rst", "reference/generated/pydicom.filewriter.write_TM.rst", "reference/generated/pydicom.filewriter.write_UI.rst", "reference/generated/pydicom.filewriter.write_UN.rst", "reference/generated/pydicom.filewriter.write_data_element.rst", "reference/generated/pydicom.filewriter.write_dataset.rst", "reference/generated/pydicom.filewriter.write_file_meta_info.rst", "reference/generated/pydicom.filewriter.write_number_string.rst", "reference/generated/pydicom.filewriter.write_numbers.rst", "reference/generated/pydicom.filewriter.write_sequence.rst", "reference/generated/pydicom.filewriter.write_sequence_item.rst", "reference/generated/pydicom.filewriter.write_string.rst", "reference/generated/pydicom.filewriter.write_text.rst", "reference/generated/pydicom.hooks.Hooks.rst", "reference/generated/pydicom.hooks.hooks.rst", "reference/generated/pydicom.hooks.raw_element_value.rst", "reference/generated/pydicom.hooks.raw_element_value_fix_separator.rst", "reference/generated/pydicom.hooks.raw_element_value_retry.rst", "reference/generated/pydicom.hooks.raw_element_vr.rst", "reference/generated/pydicom.misc.is_dicom.rst", "reference/generated/pydicom.misc.size_in_bytes.rst", "reference/generated/pydicom.multival.MultiValue.rst", "reference/generated/pydicom.overlays.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler.rst", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler.rst", "reference/generated/pydicom.pixel_data_handlers.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pillow_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler.rst", "reference/generated/pydicom.pixel_data_handlers.rle_handler.rst", "reference/generated/pydicom.pixels.apply_color_lut.rst", "reference/generated/pydicom.pixels.apply_icc_profile.rst", "reference/generated/pydicom.pixels.apply_modality_lut.rst", "reference/generated/pydicom.pixels.apply_presentation_lut.rst", "reference/generated/pydicom.pixels.apply_rescale.rst", "reference/generated/pydicom.pixels.apply_voi.rst", "reference/generated/pydicom.pixels.apply_voi_lut.rst", "reference/generated/pydicom.pixels.apply_windowing.rst", "reference/generated/pydicom.pixels.as_pixel_options.rst", "reference/generated/pydicom.pixels.compress.rst", "reference/generated/pydicom.pixels.convert_color_space.rst", "reference/generated/pydicom.pixels.create_icc_transform.rst", "reference/generated/pydicom.pixels.decoders.DeflatedExplicitVRLittleEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.DeflatedImageFrameCompressionDecoder.rst", "reference/generated/pydicom.pixels.decoders.ExplicitVRBigEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.ExplicitVRLittleEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.HTJ2KDecoder.rst", "reference/generated/pydicom.pixels.decoders.HTJ2KLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.HTJ2KLosslessRPCLDecoder.rst", "reference/generated/pydicom.pixels.decoders.ImplicitVRLittleEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEG2000Decoder.rst", "reference/generated/pydicom.pixels.decoders.JPEG2000LosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGBaseline8BitDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGExtended12BitDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGLSLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGLSNearLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGLosslessSV1Decoder.rst", "reference/generated/pydicom.pixels.decoders.RLELosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.DecodeRunner.rst", "reference/generated/pydicom.pixels.decoders.base.Decoder.rst", "reference/generated/pydicom.pixels.decompress.rst", "reference/generated/pydicom.pixels.encoders.DeflatedImageFrameCompressionEncoder.rst", "reference/generated/pydicom.pixels.encoders.JPEG2000Encoder.rst", "reference/generated/pydicom.pixels.encoders.JPEG2000LosslessEncoder.rst", "reference/generated/pydicom.pixels.encoders.JPEGLSLosslessEncoder.rst", "reference/generated/pydicom.pixels.encoders.JPEGLSNearLosslessEncoder.rst", "reference/generated/pydicom.pixels.encoders.RLELosslessEncoder.rst", "reference/generated/pydicom.pixels.encoders.base.EncodeRunner.rst", "reference/generated/pydicom.pixels.encoders.base.Encoder.rst", "reference/generated/pydicom.pixels.get_decoder.rst", "reference/generated/pydicom.pixels.get_encoder.rst", "reference/generated/pydicom.pixels.iter_pixels.rst", "reference/generated/pydicom.pixels.pack_bits.rst", "reference/generated/pydicom.pixels.pixel_array.rst", "reference/generated/pydicom.pixels.processing.apply_color_lut.rst", "reference/generated/pydicom.pixels.processing.apply_icc_profile.rst", "reference/generated/pydicom.pixels.processing.apply_modality_lut.rst", "reference/generated/pydicom.pixels.processing.apply_presentation_lut.rst", "reference/generated/pydicom.pixels.processing.apply_rescale.rst", "reference/generated/pydicom.pixels.processing.apply_voi.rst", "reference/generated/pydicom.pixels.processing.apply_voi_lut.rst", "reference/generated/pydicom.pixels.processing.apply_windowing.rst", "reference/generated/pydicom.pixels.processing.convert_color_space.rst", "reference/generated/pydicom.pixels.processing.create_icc_transform.rst", "reference/generated/pydicom.pixels.set_pixel_data.rst", "reference/generated/pydicom.pixels.unpack_bits.rst", "reference/generated/pydicom.pixels.utils.as_pixel_options.rst", "reference/generated/pydicom.pixels.utils.compress.rst", "reference/generated/pydicom.pixels.utils.decompress.rst", "reference/generated/pydicom.pixels.utils.expand_ybr422.rst", "reference/generated/pydicom.pixels.utils.get_expected_length.rst", "reference/generated/pydicom.pixels.utils.get_image_pixel_ids.rst", "reference/generated/pydicom.pixels.utils.get_j2k_parameters.rst", "reference/generated/pydicom.pixels.utils.get_nr_frames.rst", "reference/generated/pydicom.pixels.utils.iter_pixels.rst", "reference/generated/pydicom.pixels.utils.pack_bits.rst", "reference/generated/pydicom.pixels.utils.pixel_array.rst", "reference/generated/pydicom.pixels.utils.pixel_dtype.rst", "reference/generated/pydicom.pixels.utils.reshape_pixel_array.rst", "reference/generated/pydicom.pixels.utils.set_pixel_data.rst", "reference/generated/pydicom.pixels.utils.unpack_bits.rst", "reference/generated/pydicom.sequence.Sequence.rst", "reference/generated/pydicom.sr.Code.rst", "reference/generated/pydicom.sr.Collection.rst", "reference/generated/pydicom.sr.Concepts.rst", "reference/generated/pydicom.tag.BaseTag.rst", "reference/generated/pydicom.tag.Tag.rst", "reference/generated/pydicom.tag.TupleTag.rst", "reference/generated/pydicom.tag.tag_in_exception.rst", "reference/generated/pydicom.uid.AcquisitionContextSRStorage.rst", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage.rst", "reference/generated/pydicom.uid.AllTransferSyntaxes.rst", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage.rst", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage.rst", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage.rst", "reference/generated/pydicom.uid.BasicTextSRStorage.rst", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage.rst", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.BodyPositionWaveformStorage.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage.rst", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CTImageStorage.rst", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage.rst", "reference/generated/pydicom.uid.ChestCADSRStorage.rst", "reference/generated/pydicom.uid.ColonCADSRStorage.rst", "reference/generated/pydicom.uid.ColorPaletteStorage.rst", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.Comprehensive3DSRStorage.rst", "reference/generated/pydicom.uid.ComprehensiveSRStorage.rst", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage.rst", "reference/generated/pydicom.uid.ConfocalMicroscopyImageStorage.rst", "reference/generated/pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage.rst", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage.rst", "reference/generated/pydicom.uid.CornealTopographyMapStorage.rst", "reference/generated/pydicom.uid.DICOS2DAITStorage.rst", "reference/generated/pydicom.uid.DICOS3DAITStorage.rst", "reference/generated/pydicom.uid.DICOSCTImageStorage.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage.rst", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage.rst", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.DeflatedImageFrameCompression.rst", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.EddyCurrentImageStorage.rst", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage.rst", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage.rst", "reference/generated/pydicom.uid.EncapsulatedCDAStorage.rst", "reference/generated/pydicom.uid.EncapsulatedMTLStorage.rst", "reference/generated/pydicom.uid.EncapsulatedOBJStorage.rst", "reference/generated/pydicom.uid.EncapsulatedPDFStorage.rst", "reference/generated/pydicom.uid.EncapsulatedSTLStorage.rst", "reference/generated/pydicom.uid.EnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedContinuousRTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.EnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.EnhancedRTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedSRStorage.rst", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage.rst", "reference/generated/pydicom.uid.EnhancedXAImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRFImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.ExplicitVRBigEndian.rst", "reference/generated/pydicom.uid.ExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.ExtensibleSRStorage.rst", "reference/generated/pydicom.uid.General32bitECGWaveformStorage.rst", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage.rst", "reference/generated/pydicom.uid.GeneralECGWaveformStorage.rst", "reference/generated/pydicom.uid.GenericImplantTemplateStorage.rst", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.HEVCM10P51.rst", "reference/generated/pydicom.uid.HEVCMP51.rst", "reference/generated/pydicom.uid.HTJ2K.rst", "reference/generated/pydicom.uid.HTJ2KLossless.rst", "reference/generated/pydicom.uid.HTJ2KLosslessRPCL.rst", "reference/generated/pydicom.uid.HangingProtocolStorage.rst", "reference/generated/pydicom.uid.HeightMapSegmentationStorage.rst", "reference/generated/pydicom.uid.HemodynamicWaveformStorage.rst", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage.rst", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage.rst", "reference/generated/pydicom.uid.ImplantationPlanSRStorage.rst", "reference/generated/pydicom.uid.ImplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing.rst", "reference/generated/pydicom.uid.InventoryStorage.rst", "reference/generated/pydicom.uid.JPEG2000.rst", "reference/generated/pydicom.uid.JPEG2000Lossless.rst", "reference/generated/pydicom.uid.JPEG2000MC.rst", "reference/generated/pydicom.uid.JPEG2000MCLossless.rst", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGBaseline8Bit.rst", "reference/generated/pydicom.uid.JPEGExtended12Bit.rst", "reference/generated/pydicom.uid.JPEGLSLossless.rst", "reference/generated/pydicom.uid.JPEGLSNearLossless.rst", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGLossless.rst", "reference/generated/pydicom.uid.JPEGLosslessSV1.rst", "reference/generated/pydicom.uid.JPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGXL.rst", "reference/generated/pydicom.uid.JPEGXLJPEGRecompression.rst", "reference/generated/pydicom.uid.JPEGXLLossless.rst", "reference/generated/pydicom.uid.JPEGXLTransferSyntaxes.rst", "reference/generated/pydicom.uid.JPIPHTJ2KReferenced.rst", "reference/generated/pydicom.uid.JPIPHTJ2KReferencedDeflate.rst", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage.rst", "reference/generated/pydicom.uid.LabelMapSegmentationStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.LensometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.MPEG2MPHL.rst", "reference/generated/pydicom.uid.MPEG2MPHLF.rst", "reference/generated/pydicom.uid.MPEG2MPML.rst", "reference/generated/pydicom.uid.MPEG2MPMLF.rst", "reference/generated/pydicom.uid.MPEG4HP41.rst", "reference/generated/pydicom.uid.MPEG4HP41BD.rst", "reference/generated/pydicom.uid.MPEG4HP41BDF.rst", "reference/generated/pydicom.uid.MPEG4HP41F.rst", "reference/generated/pydicom.uid.MPEG4HP422D.rst", "reference/generated/pydicom.uid.MPEG4HP422DF.rst", "reference/generated/pydicom.uid.MPEG4HP423D.rst", "reference/generated/pydicom.uid.MPEG4HP423DF.rst", "reference/generated/pydicom.uid.MPEG4HP42STEREO.rst", "reference/generated/pydicom.uid.MPEG4HP42STEREOF.rst", "reference/generated/pydicom.uid.MPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.MRImageStorage.rst", "reference/generated/pydicom.uid.MRSpectroscopyStorage.rst", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage.rst", "reference/generated/pydicom.uid.MammographyCADSRStorage.rst", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage.rst", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.NuclearMedicineImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage.rst", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage.rst", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID.rst", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID.rst", "reference/generated/pydicom.uid.ParametricMapStorage.rst", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PhotoacousticImageStorage.rst", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage.rst", "reference/generated/pydicom.uid.PrivateTransferSyntaxes.rst", "reference/generated/pydicom.uid.ProcedureLogStorage.rst", "reference/generated/pydicom.uid.ProtocolApprovalStorage.rst", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.RE_VALID_UID.rst", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX.rst", "reference/generated/pydicom.uid.RLELossless.rst", "reference/generated/pydicom.uid.RLETransferSyntaxes.rst", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTDoseStorage.rst", "reference/generated/pydicom.uid.RTImageStorage.rst", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTIonPlanStorage.rst", "reference/generated/pydicom.uid.RTPatientPositionAcquisitionInstructionStorage.rst", "reference/generated/pydicom.uid.RTPhysicianIntentStorage.rst", "reference/generated/pydicom.uid.RTPlanStorage.rst", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage.rst", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetStorage.rst", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage.rst", "reference/generated/pydicom.uid.RTStructureSetStorage.rst", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage.rst", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage.rst", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.RawDataStorage.rst", "reference/generated/pydicom.uid.RealWorldValueMappingStorage.rst", "reference/generated/pydicom.uid.RespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.RoboticArmRadiationStorage.rst", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo.rst", "reference/generated/pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo.rst", "reference/generated/pydicom.uid.SMPTEST211030PCMDigitalAudio.rst", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.SegmentationStorage.rst", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage.rst", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SpatialFiducialsStorage.rst", "reference/generated/pydicom.uid.SpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage.rst", "reference/generated/pydicom.uid.StereometricRelationshipStorage.rst", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.SurfaceScanMeshStorage.rst", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage.rst", "reference/generated/pydicom.uid.SurfaceSegmentationStorage.rst", "reference/generated/pydicom.uid.ThermographyImageStorage.rst", "reference/generated/pydicom.uid.ThermographyMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage.rst", "reference/generated/pydicom.uid.TractographyResultsStorage.rst", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage.rst", "reference/generated/pydicom.uid.UID.rst", "reference/generated/pydicom.uid.UltrasoundImageStorage.rst", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes.rst", "reference/generated/pydicom.uid.VLEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VLMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage.rst", "reference/generated/pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage.rst", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.WaveformAnnotationSRStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage.rst", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage.rst", "reference/generated/pydicom.uid.XRayAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage.rst", "reference/generated/pydicom.uid.generate_uid.rst", "reference/generated/pydicom.uid.register_transfer_syntax.rst", "reference/generated/pydicom.valuerep.DA.rst", "reference/generated/pydicom.valuerep.DS.rst", "reference/generated/pydicom.valuerep.DSdecimal.rst", "reference/generated/pydicom.valuerep.DSfloat.rst", "reference/generated/pydicom.valuerep.DT.rst", "reference/generated/pydicom.valuerep.IS.rst", "reference/generated/pydicom.valuerep.ISfloat.rst", "reference/generated/pydicom.valuerep.PersonName.rst", "reference/generated/pydicom.valuerep.TM.rst", "reference/generated/pydicom.valuerep.VR.rst", "reference/generated/pydicom.valuerep.format_number_as_ds.rst", "reference/generated/pydicom.valuerep.is_valid_ds.rst", "reference/generated/pydicom.values.convert_AE_string.rst", "reference/generated/pydicom.values.convert_ATvalue.rst", "reference/generated/pydicom.values.convert_DA_string.rst", "reference/generated/pydicom.values.convert_DS_string.rst", "reference/generated/pydicom.values.convert_DT_string.rst", "reference/generated/pydicom.values.convert_IS_string.rst", "reference/generated/pydicom.values.convert_OBvalue.rst", "reference/generated/pydicom.values.convert_OWvalue.rst", "reference/generated/pydicom.values.convert_PN.rst", "reference/generated/pydicom.values.convert_SQ.rst", "reference/generated/pydicom.values.convert_TM_string.rst", "reference/generated/pydicom.values.convert_UI.rst", "reference/generated/pydicom.values.convert_UN.rst", "reference/generated/pydicom.values.convert_UR_string.rst", "reference/generated/pydicom.values.convert_numbers.rst", "reference/generated/pydicom.values.convert_single_string.rst", "reference/generated/pydicom.values.convert_string.rst", "reference/generated/pydicom.values.convert_tag.rst", "reference/generated/pydicom.values.convert_text.rst", "reference/generated/pydicom.values.convert_value.rst", "reference/generated/pydicom.values.multi_string.rst", "reference/generated/pydicom.waveforms.numpy_handler.rst", "reference/handlers.rst", "reference/handlers.pixel_data.rst", "reference/hooks.rst", "reference/index.rst", "reference/misc.rst", "reference/overlays.rst", "reference/pixels.rst", "reference/pixels.decoders.rst", "reference/pixels.encoders.rst", "reference/pixels.processing.rst", "reference/pixels.utils.rst", "reference/sr.rst", "reference/uid.rst", "reference/waveforms.rst", "release_notes/index.rst", "release_notes/v0.9.2.rst", "release_notes/v0.9.3.rst", "release_notes/v0.9.4.rst", "release_notes/v0.9.5.rst", "release_notes/v0.9.6.rst", "release_notes/v0.9.7.rst", "release_notes/v0.9.8.rst", "release_notes/v0.9.9.rst", "release_notes/v1.0.0.rst", "release_notes/v1.1.0.rst", "release_notes/v1.2.0.rst", "release_notes/v1.3.0.rst", "release_notes/v1.4.0.rst", "release_notes/v1.4.1.rst", "release_notes/v2.0.0.rst", "release_notes/v2.1.0.rst", "release_notes/v2.1.1.rst", "release_notes/v2.2.0.rst", "release_notes/v2.3.0.rst", "release_notes/v2.4.0.rst", "release_notes/v3.0.0.rst", "release_notes/v3.1.0.rst", "sg_execution_times.rst", "tutorials/contributing.rst", "tutorials/contributing_code.rst", "tutorials/contributing_docs.rst", "tutorials/dataset_basics.rst", "tutorials/dicom_json.rst", "tutorials/filesets.rst", "tutorials/index.rst", "tutorials/installation.rst", "tutorials/pixel_data/compressing.rst", "tutorials/pixel_data/creation.rst", "tutorials/pixel_data/index.rst", "tutorials/pixel_data/introduction.rst", "tutorials/sr_basics.rst", "tutorials/waveforms.rst"], "indexentries": {"__init__() (pydicom.dataelem.dataelement method)": [[129, "pydicom.dataelem.DataElement.__init__", false]], "__init__() (pydicom.dataelem.rawdataelement method)": [[131, "pydicom.dataelem.RawDataElement.__init__", false]], "__init__() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.__init__", false]], "__init__() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.__init__", false]], "__init__() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.__init__", false]], "__init__() (pydicom.dataset.privateblock method)": [[136, "pydicom.dataset.PrivateBlock.__init__", false]], "__init__() (pydicom.filebase.dicombytesio method)": [[160, "pydicom.filebase.DicomBytesIO.__init__", false]], "__init__() (pydicom.filebase.dicomfilelike method)": [[162, "pydicom.filebase.DicomFileLike.__init__", false]], "__init__() (pydicom.filebase.dicomio method)": [[163, "pydicom.filebase.DicomIO.__init__", false]], "__init__() (pydicom.fileset.fileinstance method)": [[175, "pydicom.fileset.FileInstance.__init__", false]], "__init__() (pydicom.fileset.fileset method)": [[176, "pydicom.fileset.FileSet.__init__", false]], "__init__() (pydicom.fileset.recordnode method)": [[177, "pydicom.fileset.RecordNode.__init__", false]], "__init__() (pydicom.hooks.hooks method)": [[207, "pydicom.hooks.Hooks.__init__", false]], "__init__() (pydicom.multival.multivalue method)": [[215, "pydicom.multival.MultiValue.__init__", false]], "__init__() (pydicom.pixels.decoders.base.decoder method)": [[253, "pydicom.pixels.decoders.base.Decoder.__init__", false]], "__init__() (pydicom.pixels.decoders.base.decoderunner method)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.__init__", false]], "__init__() (pydicom.pixels.encoders.base.encoder method)": [[262, "pydicom.pixels.encoders.base.Encoder.__init__", false]], "__init__() (pydicom.pixels.encoders.base.encoderunner method)": [[261, "pydicom.pixels.encoders.base.EncodeRunner.__init__", false]], "__init__() (pydicom.sequence.sequence method)": [[295, "pydicom.sequence.Sequence.__init__", false]], "__init__() (pydicom.sr.code method)": [[296, "pydicom.sr.Code.__init__", false]], "__init__() (pydicom.sr.collection method)": [[297, "pydicom.sr.Collection.__init__", false]], "__init__() (pydicom.sr.concepts method)": [[298, "pydicom.sr.Concepts.__init__", false]], "__init__() (pydicom.tag.basetag method)": [[299, "pydicom.tag.BaseTag.__init__", false]], "__init__() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.__init__", false]], "__init__() (pydicom.valuerep.da method)": [[551, "pydicom.valuerep.DA.__init__", false]], "__init__() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.__init__", false]], "__init__() (pydicom.valuerep.dsfloat method)": [[554, "pydicom.valuerep.DSfloat.__init__", false]], "__init__() (pydicom.valuerep.dt method)": [[555, "pydicom.valuerep.DT.__init__", false]], "__init__() (pydicom.valuerep.is method)": [[556, "pydicom.valuerep.IS.__init__", false]], "__init__() (pydicom.valuerep.isfloat method)": [[557, "pydicom.valuerep.ISfloat.__init__", false]], "__init__() (pydicom.valuerep.personname method)": [[558, "pydicom.valuerep.PersonName.__init__", false]], "__init__() (pydicom.valuerep.tm method)": [[559, "pydicom.valuerep.TM.__init__", false]], "__init__() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.__init__", false]], "absorb_delimiter_item() (in module pydicom.fileutil)": [[180, "pydicom.fileutil.absorb_delimiter_item", false]], "acquisitioncontextsrstorage (in module pydicom.uid)": [[303, "pydicom.uid.AcquisitionContextSRStorage", false]], "add() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.add", false]], "add() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.add", false]], "add() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.add", false]], "add() (pydicom.fileset.fileset method)": [[176, "pydicom.fileset.FileSet.add", false]], "add() (pydicom.fileset.recordnode method)": [[177, "pydicom.fileset.RecordNode.add", false]], "add_custom() (pydicom.fileset.fileset method)": [[176, "pydicom.fileset.FileSet.add_custom", false]], "add_dict_entries() (in module pydicom.datadict)": [[109, "pydicom.datadict.add_dict_entries", false]], "add_dict_entry() (in module pydicom.datadict)": [[110, "pydicom.datadict.add_dict_entry", false]], "add_new() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.add_new", false]], "add_new() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.add_new", false]], "add_new() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.add_new", false]], "add_new() (pydicom.dataset.privateblock method)": [[136, "pydicom.dataset.PrivateBlock.add_new", false]], "add_new_private() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.add_new_private", false]], "add_new_private() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.add_new_private", false]], "add_new_private() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.add_new_private", false]], "add_plugin() (pydicom.pixels.decoders.base.decoder method)": [[253, "pydicom.pixels.decoders.base.Decoder.add_plugin", false]], "add_plugin() (pydicom.pixels.encoders.base.encoder method)": [[262, "pydicom.pixels.encoders.base.Encoder.add_plugin", false]], "add_plugins() (pydicom.pixels.decoders.base.decoder method)": [[253, "pydicom.pixels.decoders.base.Decoder.add_plugins", false]], "add_plugins() (pydicom.pixels.encoders.base.encoder method)": [[262, "pydicom.pixels.encoders.base.Encoder.add_plugins", false]], "add_private_dict_entries() (in module pydicom.datadict)": [[111, "pydicom.datadict.add_private_dict_entries", false]], "add_private_dict_entry() (in module pydicom.datadict)": [[112, "pydicom.datadict.add_private_dict_entry", false]], "adjusted() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.adjusted", false]], "advancedblendingpresentationstatestorage (in module pydicom.uid)": [[304, "pydicom.uid.AdvancedBlendingPresentationStateStorage", false]], "allow_ds_float (in module pydicom.config)": [[89, "pydicom.config.allow_DS_float", false]], "alltransfersyntaxes (in module pydicom.uid)": [[305, "pydicom.uid.AllTransferSyntaxes", false]], "alphabetic (pydicom.valuerep.personname property)": [[558, "pydicom.valuerep.PersonName.alphabetic", false]], "ambulatoryecgwaveformstorage (in module pydicom.uid)": [[306, "pydicom.uid.AmbulatoryECGWaveformStorage", false]], "ancestors (pydicom.fileset.recordnode property)": [[177, "pydicom.fileset.RecordNode.ancestors", false]], "append() (pydicom.multival.multivalue method)": [[215, "pydicom.multival.MultiValue.append", false]], "append() (pydicom.sequence.sequence method)": [[295, "pydicom.sequence.Sequence.append", false]], "apply_color_lut() (in module pydicom.pixels)": [[223, "pydicom.pixels.apply_color_lut", false]], "apply_color_lut() (in module pydicom.pixels.processing)": [[268, "pydicom.pixels.processing.apply_color_lut", false]], "apply_icc_profile() (in module pydicom.pixels)": [[224, "pydicom.pixels.apply_icc_profile", false]], "apply_icc_profile() (in module pydicom.pixels.processing)": [[269, "pydicom.pixels.processing.apply_icc_profile", false]], "apply_j2k_corrections (in module pydicom.config)": [[81, "pydicom.config.APPLY_J2K_CORRECTIONS", false]], "apply_modality_lut() (in module pydicom.pixels)": [[225, "pydicom.pixels.apply_modality_lut", false]], "apply_modality_lut() (in module pydicom.pixels.processing)": [[270, "pydicom.pixels.processing.apply_modality_lut", false]], "apply_presentation_lut() (in module pydicom.pixels)": [[226, "pydicom.pixels.apply_presentation_lut", false]], "apply_presentation_lut() (in module pydicom.pixels.processing)": [[271, "pydicom.pixels.processing.apply_presentation_lut", false]], "apply_rescale() (in module pydicom.pixels)": [[227, "pydicom.pixels.apply_rescale", false]], "apply_rescale() (in module pydicom.pixels.processing)": [[272, "pydicom.pixels.processing.apply_rescale", false]], "apply_voi() (in module pydicom.pixels)": [[228, "pydicom.pixels.apply_voi", false]], "apply_voi() (in module pydicom.pixels.processing)": [[273, "pydicom.pixels.processing.apply_voi", false]], "apply_voi_lut() (in module pydicom.pixels)": [[229, "pydicom.pixels.apply_voi_lut", false]], "apply_voi_lut() (in module pydicom.pixels.processing)": [[274, "pydicom.pixels.processing.apply_voi_lut", false]], "apply_windowing() (in module pydicom.pixels)": [[230, "pydicom.pixels.apply_windowing", false]], "apply_windowing() (in module pydicom.pixels.processing)": [[275, "pydicom.pixels.processing.apply_windowing", false]], "arterialpulsewaveformstorage (in module pydicom.uid)": [[307, "pydicom.uid.ArterialPulseWaveformStorage", false]], "as_array() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[221, "pydicom.pixel_data_handlers.pylibjpeg_handler.as_array", false]], "as_array() (pydicom.pixels.decoders.base.decoder method)": [[253, "pydicom.pixels.decoders.base.Decoder.as_array", false]], "as_buffer() (pydicom.pixels.decoders.base.decoder method)": [[253, "pydicom.pixels.decoders.base.Decoder.as_buffer", false]], "as_integer_ratio() (pydicom.tag.basetag method)": [[299, "pydicom.tag.BaseTag.as_integer_ratio", false]], "as_integer_ratio() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.as_integer_ratio", false]], "as_integer_ratio() (pydicom.valuerep.dsfloat method)": [[554, "pydicom.valuerep.DSfloat.as_integer_ratio", false]], "as_integer_ratio() (pydicom.valuerep.is method)": [[556, "pydicom.valuerep.IS.as_integer_ratio", false]], "as_integer_ratio() (pydicom.valuerep.isfloat method)": [[557, "pydicom.valuerep.ISfloat.as_integer_ratio", false]], "as_pixel_options() (in module pydicom.pixels)": [[231, "pydicom.pixels.as_pixel_options", false]], "as_pixel_options() (in module pydicom.pixels.utils)": [[280, "pydicom.pixels.utils.as_pixel_options", false]], "as_tuple() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.as_tuple", false]], "assume_implicit_vr_switch (in module pydicom.config)": [[90, "pydicom.config.assume_implicit_vr_switch", false]], "astimezone() (pydicom.valuerep.dt method)": [[555, "pydicom.valuerep.DT.astimezone", false]], "autorefractionmeasurementsstorage (in module pydicom.uid)": [[308, "pydicom.uid.AutorefractionMeasurementsStorage", false]], "available_plugins (pydicom.pixels.decoders.base.decoder property)": [[253, "pydicom.pixels.decoders.base.Decoder.available_plugins", false]], "available_plugins (pydicom.pixels.encoders.base.encoder property)": [[262, "pydicom.pixels.encoders.base.Encoder.available_plugins", false]], "basetag (class in pydicom.tag)": [[299, "pydicom.tag.BaseTag", false]], "basic_offset_table (pydicom.encaps.encapsulatedbuffer property)": [[68, "pydicom.encaps.EncapsulatedBuffer.basic_offset_table", false]], "basicstructureddisplaystorage (in module pydicom.uid)": [[309, "pydicom.uid.BasicStructuredDisplayStorage", false]], "basictextsrstorage (in module pydicom.uid)": [[310, "pydicom.uid.BasicTextSRStorage", false]], "basicvoiceaudiowaveformstorage (in module pydicom.uid)": [[311, "pydicom.uid.BasicVoiceAudioWaveformStorage", false]], "bit_count() (pydicom.tag.basetag method)": [[299, "pydicom.tag.BaseTag.bit_count", false]], "bit_count() (pydicom.valuerep.is method)": [[556, "pydicom.valuerep.IS.bit_count", false]], "bit_length() (pydicom.tag.basetag method)": [[299, "pydicom.tag.BaseTag.bit_length", false]], "bit_length() (pydicom.valuerep.is method)": [[556, "pydicom.valuerep.IS.bit_length", false]], "bits_allocated (pydicom.pixels.decoders.base.decoderunner property)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.bits_allocated", false]], "bits_allocated (pydicom.pixels.encoders.base.encoderunner property)": [[261, "pydicom.pixels.encoders.base.EncodeRunner.bits_allocated", false]], "bits_stored (pydicom.pixels.decoders.base.decoderunner property)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.bits_stored", false]], "bits_stored (pydicom.pixels.encoders.base.encoderunner property)": [[261, "pydicom.pixels.encoders.base.EncodeRunner.bits_stored", false]], "blendingsoftcopypresentationstatestorage (in module pydicom.uid)": [[312, "pydicom.uid.BlendingSoftcopyPresentationStateStorage", false]], "block_start (pydicom.dataset.privateblock attribute)": [[136, "pydicom.dataset.PrivateBlock.block_start", false]], "bodypositionwaveformstorage (in module pydicom.uid)": [[313, "pydicom.uid.BodyPositionWaveformStorage", false]], "breastprojectionxrayimagestorageforpresentation (in module pydicom.uid)": [[314, "pydicom.uid.BreastProjectionXRayImageStorageForPresentation", false]], "breastprojectionxrayimagestorageforprocessing (in module pydicom.uid)": [[315, "pydicom.uid.BreastProjectionXRayImageStorageForProcessing", false]], "breasttomosynthesisimagestorage (in module pydicom.uid)": [[316, "pydicom.uid.BreastTomosynthesisImageStorage", false]], "buffer (pydicom.dataset.filedataset attribute)": [[134, "pydicom.dataset.FileDataset.buffer", false]], "buffered_read_size (pydicom.config.settings property)": [[57, "pydicom.config.Settings.buffered_read_size", false]], "canonical() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.canonical", false]], "capitalize() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.capitalize", false]], "capitalize() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.capitalize", false]], "cardiacelectrophysiologywaveformstorage (in module pydicom.uid)": [[322, "pydicom.uid.CardiacElectrophysiologyWaveformStorage", false]], "carmphotonelectronradiationrecordstorage (in module pydicom.uid)": [[317, "pydicom.uid.CArmPhotonElectronRadiationRecordStorage", false]], "carmphotonelectronradiationstorage (in module pydicom.uid)": [[318, "pydicom.uid.CArmPhotonElectronRadiationStorage", false]], "casefold() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.casefold", false]], "casefold() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.casefold", false]], "center() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.center", false]], "center() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.center", false]], "chestcadsrstorage (in module pydicom.uid)": [[323, "pydicom.uid.ChestCADSRStorage", false]], "children (pydicom.fileset.recordnode attribute)": [[177, "pydicom.fileset.RecordNode.children", false]], "cids() (pydicom.sr.concepts method)": [[298, "pydicom.sr.Concepts.CIDs", false]], "clear() (pydicom.dataelem.dataelement method)": [[129, "pydicom.dataelem.DataElement.clear", false]], "clear() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.clear", false]], "clear() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.clear", false]], "clear() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.clear", false]], "clear() (pydicom.fileset.fileset method)": [[176, "pydicom.fileset.FileSet.clear", false]], "clear() (pydicom.multival.multivalue method)": [[215, "pydicom.multival.MultiValue.clear", false]], "clear() (pydicom.sequence.sequence method)": [[295, "pydicom.sequence.Sequence.clear", false]], "close() (pydicom.filebase.dicombytesio method)": [[160, "pydicom.filebase.DicomBytesIO.close", false]], "close() (pydicom.filebase.dicomfilelike method)": [[162, "pydicom.filebase.DicomFileLike.close", false]], "close() (pydicom.filebase.dicomio method)": [[163, "pydicom.filebase.DicomIO.close", false]], "closed (pydicom.encaps.encapsulatedbuffer property)": [[68, "pydicom.encaps.EncapsulatedBuffer.closed", false]], "code (class in pydicom.sr)": [[296, "pydicom.sr.Code", false]], "collection (class in pydicom.sr)": [[297, "pydicom.sr.Collection", false]], "collections (pydicom.sr.concepts property)": [[298, "pydicom.sr.Concepts.collections", false]], "coloncadsrstorage (in module pydicom.uid)": [[324, "pydicom.uid.ColonCADSRStorage", false]], "colorpalettestorage (in module pydicom.uid)": [[325, "pydicom.uid.ColorPaletteStorage", false]], "colorsoftcopypresentationstatestorage (in module pydicom.uid)": [[326, "pydicom.uid.ColorSoftcopyPresentationStateStorage", false]], "columns (pydicom.pixels.decoders.base.decoderunner property)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.columns", false]], "columns (pydicom.pixels.encoders.base.encoderunner property)": [[261, "pydicom.pixels.encoders.base.EncodeRunner.columns", false]], "combine() (pydicom.valuerep.dt method)": [[555, "pydicom.valuerep.DT.combine", false]], "compare() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.compare", false]], "compare_signal() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.compare_signal", false]], "compare_total() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.compare_total", false]], "compare_total_mag() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.compare_total_mag", false]], "component (pydicom.fileset.recordnode property)": [[177, "pydicom.fileset.RecordNode.component", false]], "components (pydicom.valuerep.personname property)": [[558, "pydicom.valuerep.PersonName.components", false]], "compositingplanarmprvolumetricpresentationstatestorage (in module pydicom.uid)": [[327, "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", false]], "comprehensive3dsrstorage (in module pydicom.uid)": [[328, "pydicom.uid.Comprehensive3DSRStorage", false]], "comprehensivesrstorage (in module pydicom.uid)": [[329, "pydicom.uid.ComprehensiveSRStorage", false]], "compress() (in module pydicom.pixels)": [[232, "pydicom.pixels.compress", false]], "compress() (in module pydicom.pixels.utils)": [[281, "pydicom.pixels.utils.compress", false]], "compress() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.compress", false]], "compress() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.compress", false]], "compress() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.compress", false]], "computedradiographyimagestorage (in module pydicom.uid)": [[330, "pydicom.uid.ComputedRadiographyImageStorage", false]], "concepts (class in pydicom.sr)": [[298, "pydicom.sr.Concepts", false]], "concepts (pydicom.sr.collection property)": [[297, "pydicom.sr.Collection.concepts", false]], "confocalmicroscopyimagestorage (in module pydicom.uid)": [[331, "pydicom.uid.ConfocalMicroscopyImageStorage", false]], "confocalmicroscopytiledpyramidalimagestorage (in module pydicom.uid)": [[332, "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage", false]], "conjugate() (pydicom.tag.basetag method)": [[299, "pydicom.tag.BaseTag.conjugate", false]], "conjugate() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.conjugate", false]], "conjugate() (pydicom.valuerep.dsfloat method)": [[554, "pydicom.valuerep.DSfloat.conjugate", false]], "conjugate() (pydicom.valuerep.is method)": [[556, "pydicom.valuerep.IS.conjugate", false]], "conjugate() (pydicom.valuerep.isfloat method)": [[557, "pydicom.valuerep.ISfloat.conjugate", false]], "contentassessmentresultsstorage (in module pydicom.uid)": [[333, "pydicom.uid.ContentAssessmentResultsStorage", false]], "convert_ae_string() (in module pydicom.values)": [[563, "pydicom.values.convert_AE_string", false]], "convert_atvalue() (in module pydicom.values)": [[564, "pydicom.values.convert_ATvalue", false]], "convert_color_space() (in module pydicom.pixels)": [[233, "pydicom.pixels.convert_color_space", false]], "convert_color_space() (in module pydicom.pixels.processing)": [[276, "pydicom.pixels.processing.convert_color_space", false]], "convert_da_string() (in module pydicom.values)": [[565, "pydicom.values.convert_DA_string", false]], "convert_ds_string() (in module pydicom.values)": [[566, "pydicom.values.convert_DS_string", false]], "convert_dt_string() (in module pydicom.values)": [[567, "pydicom.values.convert_DT_string", false]], "convert_encodings() (in module pydicom.charset)": [[77, "pydicom.charset.convert_encodings", false]], "convert_is_string() (in module pydicom.values)": [[568, "pydicom.values.convert_IS_string", false]], "convert_numbers() (in module pydicom.values)": [[577, "pydicom.values.convert_numbers", false]], "convert_obvalue() (in module pydicom.values)": [[569, "pydicom.values.convert_OBvalue", false]], "convert_owvalue() (in module pydicom.values)": [[570, "pydicom.values.convert_OWvalue", false]], "convert_pixel_data() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.convert_pixel_data", false]], "convert_pixel_data() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.convert_pixel_data", false]], "convert_pixel_data() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.convert_pixel_data", false]], "convert_pn() (in module pydicom.values)": [[571, "pydicom.values.convert_PN", false]], "convert_raw_data_element() (in module pydicom.dataelem)": [[132, "pydicom.dataelem.convert_raw_data_element", false]], "convert_single_string() (in module pydicom.values)": [[578, "pydicom.values.convert_single_string", false]], "convert_sq() (in module pydicom.values)": [[572, "pydicom.values.convert_SQ", false]], "convert_string() (in module pydicom.values)": [[579, "pydicom.values.convert_string", false]], "convert_tag() (in module pydicom.values)": [[580, "pydicom.values.convert_tag", false]], "convert_text() (in module pydicom.values)": [[581, "pydicom.values.convert_text", false]], "convert_tm_string() (in module pydicom.values)": [[573, "pydicom.values.convert_TM_string", false]], "convert_ui() (in module pydicom.values)": [[574, "pydicom.values.convert_UI", false]], "convert_un() (in module pydicom.values)": [[575, "pydicom.values.convert_UN", false]], "convert_ur_string() (in module pydicom.values)": [[576, "pydicom.values.convert_UR_string", false]], "convert_value() (in module pydicom.values)": [[582, "pydicom.values.convert_value", false]], "convert_wrong_length_to_un (in module pydicom.config)": [[91, "pydicom.config.convert_wrong_length_to_UN", false]], "copy() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.copy", false]], "copy() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.copy", false]], "copy() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.copy", false]], "copy() (pydicom.fileset.fileset method)": [[176, "pydicom.fileset.FileSet.copy", false]], "copy_abs() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.copy_abs", false]], "copy_negate() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.copy_negate", false]], "copy_sign() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.copy_sign", false]], "cornealtopographymapstorage (in module pydicom.uid)": [[334, "pydicom.uid.CornealTopographyMapStorage", false]], "correct_ambiguous_vr() (in module pydicom.filewriter)": [[185, "pydicom.filewriter.correct_ambiguous_vr", false]], "correct_ambiguous_vr_element() (in module pydicom.filewriter)": [[186, "pydicom.filewriter.correct_ambiguous_vr_element", false]], "count() (pydicom.dataelem.rawdataelement method)": [[131, "pydicom.dataelem.RawDataElement.count", false]], "count() (pydicom.multival.multivalue method)": [[215, "pydicom.multival.MultiValue.count", false]], "count() (pydicom.sequence.sequence method)": [[295, "pydicom.sequence.Sequence.count", false]], "count() (pydicom.sr.code method)": [[296, "pydicom.sr.Code.count", false]], "count() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.count", false]], "count() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.count", false]], "create_data_element() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[217, "pydicom.pixel_data_handlers.gdcm_handler.create_data_element", false]], "create_icc_transform() (in module pydicom.pixels)": [[234, "pydicom.pixels.create_icc_transform", false]], "create_icc_transform() (in module pydicom.pixels.processing)": [[277, "pydicom.pixels.processing.create_icc_transform", false]], "create_image() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[217, "pydicom.pixel_data_handlers.gdcm_handler.create_image", false]], "ctdefinedprocedureprotocolstorage (in module pydicom.uid)": [[319, "pydicom.uid.CTDefinedProcedureProtocolStorage", false]], "ctimagestorage (in module pydicom.uid)": [[320, "pydicom.uid.CTImageStorage", false]], "ctime() (pydicom.valuerep.da method)": [[551, "pydicom.valuerep.DA.ctime", false]], "ctime() (pydicom.valuerep.dt method)": [[555, "pydicom.valuerep.DT.ctime", false]], "ctperformedprocedureprotocolstorage (in module pydicom.uid)": [[321, "pydicom.uid.CTPerformedProcedureProtocolStorage", false]], "da (class in pydicom.valuerep)": [[551, "pydicom.valuerep.DA", false]], "data_element() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.data_element", false]], "data_element() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.data_element", false]], "data_element() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.data_element", false]], "data_element_callback (in module pydicom.config)": [[92, "pydicom.config.data_element_callback", false]], "data_element_callback_kwargs (in module pydicom.config)": [[93, "pydicom.config.data_element_callback_kwargs", false]], "data_element_generator() (in module pydicom.filereader)": [[164, "pydicom.filereader.data_element_generator", false]], "data_element_offset_to_value() (in module pydicom.filereader)": [[165, "pydicom.filereader.data_element_offset_to_value", false]], "dataelement (class in pydicom.dataelem)": [[129, "pydicom.dataelem.DataElement", false]], "dataelement_from_raw() (in module pydicom.dataelem)": [[130, "pydicom.dataelem.DataElement_from_raw", false]], "dataset (class in pydicom.dataset)": [[133, "pydicom.dataset.Dataset", false]], "dataset (pydicom.dataset.privateblock attribute)": [[136, "pydicom.dataset.PrivateBlock.dataset", false]], "date() (pydicom.valuerep.dt method)": [[555, "pydicom.valuerep.DT.date", false]], "datetime_conversion (in module pydicom.config)": [[94, "pydicom.config.datetime_conversion", false]], "dcmread() (in module pydicom.filereader)": [[166, "pydicom.filereader.dcmread", false]], "dcmwrite() (in module pydicom.filewriter)": [[187, "pydicom.filewriter.dcmwrite", false]], "debug() (in module pydicom.config)": [[95, "pydicom.config.debug", false]], "decode() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.decode", false]], "decode() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.decode", false]], "decode() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.decode", false]], "decode() (pydicom.pixels.decoders.base.decoderunner method)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.decode", false]], "decode() (pydicom.valuerep.personname method)": [[558, "pydicom.valuerep.PersonName.decode", false]], "decode_bytes() (in module pydicom.charset)": [[78, "pydicom.charset.decode_bytes", false]], "decode_data_sequence() (in module pydicom.encaps)": [[138, "pydicom.encaps.decode_data_sequence", false]], "decode_element() (in module pydicom.charset)": [[79, "pydicom.charset.decode_element", false]], "decoder (class in pydicom.pixels.decoders.base)": [[253, "pydicom.pixels.decoders.base.Decoder", false]], "decoderunner (class in pydicom.pixels.decoders.base)": [[252, "pydicom.pixels.decoders.base.DecodeRunner", false]], "decompress() (in module pydicom.pixels)": [[254, "pydicom.pixels.decompress", false]], "decompress() (in module pydicom.pixels.utils)": [[282, "pydicom.pixels.utils.decompress", false]], "decompress() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.decompress", false]], "decompress() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.decompress", false]], "decompress() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.decompress", false]], "default_element_format (pydicom.dataset.dataset attribute)": [[133, "pydicom.dataset.Dataset.default_element_format", false]], "default_sequence_element_format (pydicom.dataset.dataset attribute)": [[133, "pydicom.dataset.Dataset.default_sequence_element_format", false]], "deflatedexplicitvrlittleendian (in module pydicom.uid)": [[342, "pydicom.uid.DeflatedExplicitVRLittleEndian", false]], "deflatedexplicitvrlittleendiandecoder (in module pydicom.pixels.decoders)": [[235, "pydicom.pixels.decoders.DeflatedExplicitVRLittleEndianDecoder", false]], "deflatedimageframecompression (in module pydicom.uid)": [[343, "pydicom.uid.DeflatedImageFrameCompression", false]], "deflatedimageframecompressiondecoder (in module pydicom.pixels.decoders)": [[236, "pydicom.pixels.decoders.DeflatedImageFrameCompressionDecoder", false]], "deflatedimageframecompressionencoder (in module pydicom.pixels.encoders)": [[255, "pydicom.pixels.encoders.DeflatedImageFrameCompressionEncoder", false]], "deformablespatialregistrationstorage (in module pydicom.uid)": [[344, "pydicom.uid.DeformableSpatialRegistrationStorage", false]], "defragment_data() (in module pydicom.encaps)": [[139, "pydicom.encaps.defragment_data", false]], "del_option() (pydicom.pixels.decoders.base.decoderunner method)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.del_option", false]], "del_option() (pydicom.pixels.encoders.base.encoderunner method)": [[261, "pydicom.pixels.encoders.base.EncodeRunner.del_option", false]], "denominator (pydicom.tag.basetag attribute)": [[299, "pydicom.tag.BaseTag.denominator", false]], "denominator (pydicom.valuerep.is attribute)": [[556, "pydicom.valuerep.IS.denominator", false]], "depth (pydicom.fileset.recordnode property)": [[177, "pydicom.fileset.RecordNode.depth", false]], "dermoscopicphotographyimagestorage (in module pydicom.uid)": [[345, "pydicom.uid.DermoscopicPhotographyImageStorage", false]], "descriptor_character_set (pydicom.fileset.fileset property)": [[176, "pydicom.fileset.FileSet.descriptor_character_set", false]], "descriptor_file_id (pydicom.fileset.fileset property)": [[176, "pydicom.fileset.FileSet.descriptor_file_id", false]], "descripwidth (pydicom.dataelem.dataelement attribute)": [[129, "pydicom.dataelem.DataElement.descripWidth", false]], "dicombytesio (class in pydicom.filebase)": [[160, "pydicom.filebase.DicomBytesIO", false]], "dicomfile() (in module pydicom.filebase)": [[161, "pydicom.filebase.DicomFile", false]], "dicomfilelike (class in pydicom.filebase)": [[162, "pydicom.filebase.DicomFileLike", false]], "dicomio (class in pydicom.filebase)": [[163, "pydicom.filebase.DicomIO", false]], "dicos2daitstorage (in module pydicom.uid)": [[335, "pydicom.uid.DICOS2DAITStorage", false]], "dicos3daitstorage (in module pydicom.uid)": [[336, "pydicom.uid.DICOS3DAITStorage", false]], "dicosctimagestorage (in module pydicom.uid)": [[337, "pydicom.uid.DICOSCTImageStorage", false]], "dicosdigitalxrayimagestorageforpresentation (in module pydicom.uid)": [[338, "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", false]], "dicosdigitalxrayimagestorageforprocessing (in module pydicom.uid)": [[339, "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", false]], "dicosquadrupoleresonancestorage (in module pydicom.uid)": [[340, "pydicom.uid.DICOSQuadrupoleResonanceStorage", false]], "dicosthreatdetectionreportstorage (in module pydicom.uid)": [[341, "pydicom.uid.DICOSThreatDetectionReportStorage", false]], "dictionary_description() (in module pydicom.datadict)": [[115, "pydicom.datadict.dictionary_description", false]], "dictionary_has_tag() (in module pydicom.datadict)": [[116, "pydicom.datadict.dictionary_has_tag", false]], "dictionary_is_retired() (in module pydicom.datadict)": [[117, "pydicom.datadict.dictionary_is_retired", false]], "dictionary_keyword() (in module pydicom.datadict)": [[118, "pydicom.datadict.dictionary_keyword", false]], "dictionary_vm() (in module pydicom.datadict)": [[113, "pydicom.datadict.dictionary_VM", false]], "dictionary_vr() (in module pydicom.datadict)": [[114, "pydicom.datadict.dictionary_VR", false]], "digitalintraoralxrayimagestorageforpresentation (in module pydicom.uid)": [[346, "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", false]], "digitalintraoralxrayimagestorageforprocessing (in module pydicom.uid)": [[347, "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", false]], "digitalmammographyxrayimagestorageforpresentation (in module pydicom.uid)": [[348, "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", false]], "digitalmammographyxrayimagestorageforprocessing (in module pydicom.uid)": [[349, "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", false]], "digitalxrayimagestorageforpresentation (in module pydicom.uid)": [[350, "pydicom.uid.DigitalXRayImageStorageForPresentation", false]], "digitalxrayimagestorageforprocessing (in module pydicom.uid)": [[351, "pydicom.uid.DigitalXRayImageStorageForProcessing", false]], "dir() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.dir", false]], "dir() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.dir", false]], "dir() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.dir", false]], "dir() (pydicom.sr.collection method)": [[297, "pydicom.sr.Collection.dir", false]], "directory_recorders (in module pydicom.fileset)": [[174, "pydicom.fileset.DIRECTORY_RECORDERS", false]], "ds() (in module pydicom.valuerep)": [[552, "pydicom.valuerep.DS", false]], "ds_decimal() (in module pydicom.config)": [[82, "pydicom.config.DS_decimal", false]], "ds_numpy() (in module pydicom.config)": [[83, "pydicom.config.DS_numpy", false]], "dsdecimal (class in pydicom.valuerep)": [[553, "pydicom.valuerep.DSdecimal", false]], "dsfloat (class in pydicom.valuerep)": [[554, "pydicom.valuerep.DSfloat", false]], "dst() (pydicom.valuerep.dt method)": [[555, "pydicom.valuerep.DT.dst", false]], "dst() (pydicom.valuerep.tm method)": [[559, "pydicom.valuerep.TM.dst", false]], "dt (class in pydicom.valuerep)": [[555, "pydicom.valuerep.DT", false]], "eddycurrentimagestorage (in module pydicom.uid)": [[352, "pydicom.uid.EddyCurrentImageStorage", false]], "eddycurrentmultiframeimagestorage (in module pydicom.uid)": [[353, "pydicom.uid.EddyCurrentMultiFrameImageStorage", false]], "electromyogramwaveformstorage (in module pydicom.uid)": [[354, "pydicom.uid.ElectromyogramWaveformStorage", false]], "electrooculogramwaveformstorage (in module pydicom.uid)": [[355, "pydicom.uid.ElectrooculogramWaveformStorage", false]], "elem (pydicom.tag.basetag property)": [[299, "pydicom.tag.BaseTag.elem", false]], "element (pydicom.tag.basetag property)": [[299, "pydicom.tag.BaseTag.element", false]], "elements() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.elements", false]], "elements() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.elements", false]], "elements() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.elements", false]], "empty_value (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.empty_value", false]], "encapsulate() (in module pydicom.encaps)": [[140, "pydicom.encaps.encapsulate", false]], "encapsulate_buffer() (in module pydicom.encaps)": [[141, "pydicom.encaps.encapsulate_buffer", false]], "encapsulate_extended() (in module pydicom.encaps)": [[142, "pydicom.encaps.encapsulate_extended", false]], "encapsulate_extended_buffer() (in module pydicom.encaps)": [[143, "pydicom.encaps.encapsulate_extended_buffer", false]], "encapsulated_length (pydicom.encaps.encapsulatedbuffer property)": [[68, "pydicom.encaps.EncapsulatedBuffer.encapsulated_length", false]], "encapsulatedbuffer (class in pydicom.encaps)": [[68, "pydicom.encaps.EncapsulatedBuffer", false]], "encapsulatedcdastorage (in module pydicom.uid)": [[356, "pydicom.uid.EncapsulatedCDAStorage", false]], "encapsulatedmtlstorage (in module pydicom.uid)": [[357, "pydicom.uid.EncapsulatedMTLStorage", false]], "encapsulatedobjstorage (in module pydicom.uid)": [[358, "pydicom.uid.EncapsulatedOBJStorage", false]], "encapsulatedpdfstorage (in module pydicom.uid)": [[359, "pydicom.uid.EncapsulatedPDFStorage", false]], "encapsulatedstlstorage (in module pydicom.uid)": [[360, "pydicom.uid.EncapsulatedSTLStorage", false]], "encode() (pydicom.pixels.encoders.base.encoder method)": [[262, "pydicom.pixels.encoders.base.Encoder.encode", false]], "encode() (pydicom.pixels.encoders.base.encoderunner method)": [[261, "pydicom.pixels.encoders.base.EncodeRunner.encode", false]], "encode() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.encode", false]], "encode() (pydicom.valuerep.personname method)": [[558, "pydicom.valuerep.PersonName.encode", false]], "encode() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.encode", false]], "encode_string() (in module pydicom.charset)": [[80, "pydicom.charset.encode_string", false]], "encoder (class in pydicom.pixels.encoders.base)": [[262, "pydicom.pixels.encoders.base.Encoder", false]], "encoderunner (class in pydicom.pixels.encoders.base)": [[261, "pydicom.pixels.encoders.base.EncodeRunner", false]], "endswith() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.endswith", false]], "endswith() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.endswith", false]], "enforce_valid_values (in module pydicom.config)": [[96, "pydicom.config.enforce_valid_values", false]], "enhancedcontinuousrtimagestorage (in module pydicom.uid)": [[362, "pydicom.uid.EnhancedContinuousRTImageStorage", false]], "enhancedctimagestorage (in module pydicom.uid)": [[361, "pydicom.uid.EnhancedCTImageStorage", false]], "enhancedmrcolorimagestorage (in module pydicom.uid)": [[363, "pydicom.uid.EnhancedMRColorImageStorage", false]], "enhancedmrimagestorage (in module pydicom.uid)": [[364, "pydicom.uid.EnhancedMRImageStorage", false]], "enhancedpetimagestorage (in module pydicom.uid)": [[365, "pydicom.uid.EnhancedPETImageStorage", false]], "enhancedrtimagestorage (in module pydicom.uid)": [[366, "pydicom.uid.EnhancedRTImageStorage", false]], "enhancedsrstorage (in module pydicom.uid)": [[367, "pydicom.uid.EnhancedSRStorage", false]], "enhancedusvolumestorage (in module pydicom.uid)": [[368, "pydicom.uid.EnhancedUSVolumeStorage", false]], "enhancedxaimagestorage (in module pydicom.uid)": [[369, "pydicom.uid.EnhancedXAImageStorage", false]], "enhancedxrayradiationdosesrstorage (in module pydicom.uid)": [[371, "pydicom.uid.EnhancedXRayRadiationDoseSRStorage", false]], "enhancedxrfimagestorage (in module pydicom.uid)": [[370, "pydicom.uid.EnhancedXRFImageStorage", false]], "ensure_file_meta() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.ensure_file_meta", false]], "ensure_file_meta() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.ensure_file_meta", false]], "ensure_file_meta() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.ensure_file_meta", false]], "exp() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.exp", false]], "expand_ybr422() (in module pydicom.pixels.utils)": [[283, "pydicom.pixels.utils.expand_ybr422", false]], "expandtabs() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.expandtabs", false]], "expandtabs() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.expandtabs", false]], "explicitvrbigendian (in module pydicom.uid)": [[372, "pydicom.uid.ExplicitVRBigEndian", false]], "explicitvrbigendiandecoder (in module pydicom.pixels.decoders)": [[237, "pydicom.pixels.decoders.ExplicitVRBigEndianDecoder", false]], "explicitvrlittleendian (in module pydicom.uid)": [[373, "pydicom.uid.ExplicitVRLittleEndian", false]], "explicitvrlittleendiandecoder (in module pydicom.pixels.decoders)": [[238, "pydicom.pixels.decoders.ExplicitVRLittleEndianDecoder", false]], "extend() (pydicom.multival.multivalue method)": [[215, "pydicom.multival.MultiValue.extend", false]], "extend() (pydicom.sequence.sequence method)": [[295, "pydicom.sequence.Sequence.extend", false]], "extended_lengths (pydicom.encaps.encapsulatedbuffer property)": [[68, "pydicom.encaps.EncapsulatedBuffer.extended_lengths", false]], "extended_offsets (pydicom.encaps.encapsulatedbuffer property)": [[68, "pydicom.encaps.EncapsulatedBuffer.extended_offsets", false]], "extended_offsets (pydicom.pixels.decoders.base.decoderunner property)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.extended_offsets", false]], "extended_offsets (pydicom.pixels.encoders.base.encoderunner property)": [[261, "pydicom.pixels.encoders.base.EncodeRunner.extended_offsets", false]], "extensiblesrstorage (in module pydicom.uid)": [[374, "pydicom.uid.ExtensibleSRStorage", false]], "family_comma_given() (pydicom.valuerep.personname method)": [[558, "pydicom.valuerep.PersonName.family_comma_given", false]], "family_name (pydicom.valuerep.personname property)": [[558, "pydicom.valuerep.PersonName.family_name", false]], "file_meta (pydicom.dataset.filedataset attribute)": [[134, "pydicom.dataset.FileDataset.file_meta", false]], "file_set (pydicom.fileset.fileinstance property)": [[175, "pydicom.fileset.FileInstance.file_set", false]], "file_set (pydicom.fileset.recordnode property)": [[177, "pydicom.fileset.RecordNode.file_set", false]], "filedataset (class in pydicom.dataset)": [[134, "pydicom.dataset.FileDataset", false]], "fileid (pydicom.fileset.fileinstance property)": [[175, "pydicom.fileset.FileInstance.FileID", false]], "fileinstance (class in pydicom.fileset)": [[175, "pydicom.fileset.FileInstance", false]], "filemetadataset (class in pydicom.dataset)": [[135, "pydicom.dataset.FileMetaDataset", false]], "filename (pydicom.dataset.filedataset attribute)": [[134, "pydicom.dataset.FileDataset.filename", false]], "fileobj_type (pydicom.dataset.filedataset attribute)": [[134, "pydicom.dataset.FileDataset.fileobj_type", false]], "fileset (class in pydicom.fileset)": [[176, "pydicom.fileset.FileSet", false]], "find() (pydicom.fileset.fileset method)": [[176, "pydicom.fileset.FileSet.find", false]], "find() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.find", false]], "find() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.find", false]], "find_bytes() (in module pydicom.fileutil)": [[181, "pydicom.fileutil.find_bytes", false]], "find_delimiter() (in module pydicom.fileutil)": [[182, "pydicom.fileutil.find_delimiter", false]], "find_values() (pydicom.fileset.fileset method)": [[176, "pydicom.fileset.FileSet.find_values", false]], "fma() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.fma", false]], "for_addition (pydicom.fileset.fileinstance property)": [[175, "pydicom.fileset.FileInstance.for_addition", false]], "for_moving (pydicom.fileset.fileinstance property)": [[175, "pydicom.fileset.FileInstance.for_moving", false]], "for_removal (pydicom.fileset.fileinstance property)": [[175, "pydicom.fileset.FileInstance.for_removal", false]], "format() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.format", false]], "format() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.format", false]], "format_map() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.format_map", false]], "format_map() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.format_map", false]], "format_number_as_ds() (in module pydicom.valuerep)": [[561, "pydicom.valuerep.format_number_as_ds", false]], "formatted() (pydicom.valuerep.personname method)": [[558, "pydicom.valuerep.PersonName.formatted", false]], "formatted_lines() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.formatted_lines", false]], "formatted_lines() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.formatted_lines", false]], "formatted_lines() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.formatted_lines", false]], "fragment_frame() (in module pydicom.encaps)": [[144, "pydicom.encaps.fragment_frame", false]], "frame_length() (pydicom.pixels.decoders.base.decoderunner method)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.frame_length", false]], "frame_length() (pydicom.pixels.encoders.base.encoderunner method)": [[261, "pydicom.pixels.encoders.base.EncodeRunner.frame_length", false]], "from_bytes() (pydicom.tag.basetag method)": [[299, "pydicom.tag.BaseTag.from_bytes", false]], "from_bytes() (pydicom.valuerep.is method)": [[556, "pydicom.valuerep.IS.from_bytes", false]], "from_float() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.from_float", false]], "from_json() (pydicom.dataelem.dataelement class method)": [[129, "pydicom.dataelem.DataElement.from_json", false]], "from_json() (pydicom.dataset.dataset class method)": [[133, "pydicom.dataset.Dataset.from_json", false]], "from_json() (pydicom.dataset.filedataset class method)": [[134, "pydicom.dataset.FileDataset.from_json", false]], "from_json() (pydicom.dataset.filemetadataset class method)": [[135, "pydicom.dataset.FileMetaDataset.from_json", false]], "from_named_components() (pydicom.valuerep.personname class method)": [[558, "pydicom.valuerep.PersonName.from_named_components", false]], "from_named_components_veterinary() (pydicom.valuerep.personname class method)": [[558, "pydicom.valuerep.PersonName.from_named_components_veterinary", false]], "fromhex() (pydicom.valuerep.dsfloat method)": [[554, "pydicom.valuerep.DSfloat.fromhex", false]], "fromhex() (pydicom.valuerep.isfloat method)": [[557, "pydicom.valuerep.ISfloat.fromhex", false]], "fromisocalendar() (pydicom.valuerep.da method)": [[551, "pydicom.valuerep.DA.fromisocalendar", false]], "fromisocalendar() (pydicom.valuerep.dt method)": [[555, "pydicom.valuerep.DT.fromisocalendar", false]], "fromisoformat() (pydicom.valuerep.da method)": [[551, "pydicom.valuerep.DA.fromisoformat", false]], "fromisoformat() (pydicom.valuerep.dt method)": [[555, "pydicom.valuerep.DT.fromisoformat", false]], "fromisoformat() (pydicom.valuerep.tm method)": [[559, "pydicom.valuerep.TM.fromisoformat", false]], "fromordinal() (pydicom.valuerep.da method)": [[551, "pydicom.valuerep.DA.fromordinal", false]], "fromordinal() (pydicom.valuerep.dt method)": [[555, "pydicom.valuerep.DT.fromordinal", false]], "fromtimestamp() (pydicom.valuerep.da method)": [[551, "pydicom.valuerep.DA.fromtimestamp", false]], "fromtimestamp() (pydicom.valuerep.dt method)": [[555, "pydicom.valuerep.DT.fromtimestamp", false]], "future_behavior() (in module pydicom.config)": [[97, "pydicom.config.future_behavior", false]], "general32bitecgwaveformstorage (in module pydicom.uid)": [[375, "pydicom.uid.General32bitECGWaveformStorage", false]], "generalaudiowaveformstorage (in module pydicom.uid)": [[376, "pydicom.uid.GeneralAudioWaveformStorage", false]], "generalecgwaveformstorage (in module pydicom.uid)": [[377, "pydicom.uid.GeneralECGWaveformStorage", false]], "generate_filename() (in module pydicom.fileset)": [[178, "pydicom.fileset.generate_filename", false]], "generate_fragmented_frames() (in module pydicom.encaps)": [[145, "pydicom.encaps.generate_fragmented_frames", false]], "generate_fragments() (in module pydicom.encaps)": [[146, "pydicom.encaps.generate_fragments", false]], "generate_frames() (in module pydicom.encaps)": [[147, "pydicom.encaps.generate_frames", false]], "generate_frames() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[221, "pydicom.pixel_data_handlers.pylibjpeg_handler.generate_frames", false]], "generate_multiplex() (in module pydicom.waveforms.numpy_handler)": [[584, "pydicom.waveforms.numpy_handler.generate_multiplex", false]], "generate_pixel_data() (in module pydicom.encaps)": [[148, "pydicom.encaps.generate_pixel_data", false]], "generate_pixel_data_fragment() (in module pydicom.encaps)": [[149, "pydicom.encaps.generate_pixel_data_fragment", false]], "generate_pixel_data_frame() (in module pydicom.encaps)": [[150, "pydicom.encaps.generate_pixel_data_frame", false]], "generate_uid() (in module pydicom.uid)": [[549, "pydicom.uid.generate_uid", false]], "genericimplanttemplatestorage (in module pydicom.uid)": [[378, "pydicom.uid.GenericImplantTemplateStorage", false]], "get() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.get", false]], "get() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.get", false]], "get() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.get", false]], "get_charset_files() (in module pydicom.data)": [[105, "pydicom.data.get_charset_files", false]], "get_data() (pydicom.pixels.decoders.base.decoderunner method)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.get_data", false]], "get_decoder() (in module pydicom.pixels)": [[263, "pydicom.pixels.get_decoder", false]], "get_encoder() (in module pydicom.pixels)": [[264, "pydicom.pixels.get_encoder", false]], "get_entry() (in module pydicom.datadict)": [[119, "pydicom.datadict.get_entry", false]], "get_expected_length() (in module pydicom.overlays.numpy_handler)": [[216, "pydicom.overlays.numpy_handler.get_expected_length", false]], "get_expected_length() (in module pydicom.pixels.utils)": [[284, "pydicom.pixels.utils.get_expected_length", false]], "get_frame() (in module pydicom.encaps)": [[151, "pydicom.encaps.get_frame", false]], "get_frame() (pydicom.pixels.encoders.base.encoderunner method)": [[261, "pydicom.pixels.encoders.base.EncodeRunner.get_frame", false]], "get_frame_offsets() (in module pydicom.encaps)": [[152, "pydicom.encaps.get_frame_offsets", false]], "get_image_pixel_ids() (in module pydicom.pixels.utils)": [[285, "pydicom.pixels.utils.get_image_pixel_ids", false]], "get_item() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.get_item", false]], "get_item() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.get_item", false]], "get_item() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.get_item", false]], "get_j2k_parameters() (in module pydicom.pixels.utils)": [[286, "pydicom.pixels.utils.get_j2k_parameters", false]], "get_nr_frames() (in module pydicom.pixels.utils)": [[287, "pydicom.pixels.utils.get_nr_frames", false]], "get_option() (pydicom.pixels.decoders.base.decoderunner method)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.get_option", false]], "get_option() (pydicom.pixels.encoders.base.encoderunner method)": [[261, "pydicom.pixels.encoders.base.EncodeRunner.get_option", false]], "get_overlay_array() (in module pydicom.overlays.numpy_handler)": [[216, "pydicom.overlays.numpy_handler.get_overlay_array", false]], "get_palette_files() (in module pydicom.data)": [[106, "pydicom.data.get_palette_files", false]], "get_path() (in module pydicom.examples)": [[159, "pydicom.examples.get_path", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[217, "pydicom.pixel_data_handlers.gdcm_handler.get_pixeldata", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[218, "pydicom.pixel_data_handlers.jpeg_ls_handler.get_pixeldata", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.numpy_handler)": [[219, "pydicom.pixel_data_handlers.numpy_handler.get_pixeldata", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.pillow_handler)": [[220, "pydicom.pixel_data_handlers.pillow_handler.get_pixeldata", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[221, "pydicom.pixel_data_handlers.pylibjpeg_handler.get_pixeldata", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.rle_handler)": [[222, "pydicom.pixel_data_handlers.rle_handler.get_pixeldata", false]], "get_private_entry() (in module pydicom.datadict)": [[120, "pydicom.datadict.get_private_entry", false]], "get_private_item() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.get_private_item", false]], "get_private_item() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.get_private_item", false]], "get_private_item() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.get_private_item", false]], "get_tag() (pydicom.dataset.privateblock method)": [[136, "pydicom.dataset.PrivateBlock.get_tag", false]], "get_testdata_file() (in module pydicom.data)": [[107, "pydicom.data.get_testdata_file", false]], "get_testdata_files() (in module pydicom.data)": [[108, "pydicom.data.get_testdata_files", false]], "given_name (pydicom.valuerep.personname property)": [[558, "pydicom.valuerep.PersonName.given_name", false]], "grayscaleplanarmprvolumetricpresentationstatestorage (in module pydicom.uid)": [[379, "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", false]], "grayscalesoftcopypresentationstatestorage (in module pydicom.uid)": [[380, "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", false]], "group (pydicom.dataset.privateblock attribute)": [[136, "pydicom.dataset.PrivateBlock.group", false]], "group (pydicom.tag.basetag property)": [[299, "pydicom.tag.BaseTag.group", false]], "group_dataset() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.group_dataset", false]], "group_dataset() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.group_dataset", false]], "group_dataset() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.group_dataset", false]], "hangingprotocolstorage (in module pydicom.uid)": [[386, "pydicom.uid.HangingProtocolStorage", false]], "has_instance (pydicom.fileset.recordnode property)": [[177, "pydicom.fileset.RecordNode.has_instance", false]], "heightmapsegmentationstorage (in module pydicom.uid)": [[387, "pydicom.uid.HeightMapSegmentationStorage", false]], "hemodynamicwaveformstorage (in module pydicom.uid)": [[388, "pydicom.uid.HemodynamicWaveformStorage", false]], "hevcm10p51 (in module pydicom.uid)": [[381, "pydicom.uid.HEVCM10P51", false]], "hevcmp51 (in module pydicom.uid)": [[382, "pydicom.uid.HEVCMP51", false]], "hex() (pydicom.valuerep.dsfloat method)": [[554, "pydicom.valuerep.DSfloat.hex", false]], "hex() (pydicom.valuerep.isfloat method)": [[557, "pydicom.valuerep.ISfloat.hex", false]], "hooks (class in pydicom.hooks)": [[207, "pydicom.hooks.Hooks", false]], "hooks (in module pydicom.hooks)": [[208, "pydicom.hooks.hooks", false]], "htj2k (in module pydicom.uid)": [[383, "pydicom.uid.HTJ2K", false]], "htj2kdecoder (in module pydicom.pixels.decoders)": [[239, "pydicom.pixels.decoders.HTJ2KDecoder", false]], "htj2klossless (in module pydicom.uid)": [[384, "pydicom.uid.HTJ2KLossless", false]], "htj2klosslessdecoder (in module pydicom.pixels.decoders)": [[240, "pydicom.pixels.decoders.HTJ2KLosslessDecoder", false]], "htj2klosslessrpcl (in module pydicom.uid)": [[385, "pydicom.uid.HTJ2KLosslessRPCL", false]], "htj2klosslessrpcldecoder (in module pydicom.pixels.decoders)": [[241, "pydicom.pixels.decoders.HTJ2KLosslessRPCLDecoder", false]], "id (pydicom.fileset.fileset property)": [[176, "pydicom.fileset.FileSet.ID", false]], "ideographic (pydicom.valuerep.personname property)": [[558, "pydicom.valuerep.PersonName.ideographic", false]], "ignore (in module pydicom.config)": [[84, "pydicom.config.IGNORE", false]], "imag (pydicom.tag.basetag attribute)": [[299, "pydicom.tag.BaseTag.imag", false]], "imag (pydicom.valuerep.dsfloat attribute)": [[554, "pydicom.valuerep.DSfloat.imag", false]], "imag (pydicom.valuerep.is attribute)": [[556, "pydicom.valuerep.IS.imag", false]], "imag (pydicom.valuerep.isfloat attribute)": [[557, "pydicom.valuerep.ISfloat.imag", false]], "implantassemblytemplatestorage (in module pydicom.uid)": [[389, "pydicom.uid.ImplantAssemblyTemplateStorage", false]], "implantationplansrstorage (in module pydicom.uid)": [[391, "pydicom.uid.ImplantationPlanSRStorage", false]], "implanttemplategroupstorage (in module pydicom.uid)": [[390, "pydicom.uid.ImplantTemplateGroupStorage", false]], "implicitvrlittleendian (in module pydicom.uid)": [[392, "pydicom.uid.ImplicitVRLittleEndian", false]], "implicitvrlittleendiandecoder (in module pydicom.pixels.decoders)": [[242, "pydicom.pixels.decoders.ImplicitVRLittleEndianDecoder", false]], "indent_chars (pydicom.dataset.dataset attribute)": [[133, "pydicom.dataset.Dataset.indent_chars", false]], "index (pydicom.fileset.recordnode property)": [[177, "pydicom.fileset.RecordNode.index", false]], "index() (pydicom.dataelem.rawdataelement method)": [[131, "pydicom.dataelem.RawDataElement.index", false]], "index() (pydicom.multival.multivalue method)": [[215, "pydicom.multival.MultiValue.index", false]], "index() (pydicom.sequence.sequence method)": [[295, "pydicom.sequence.Sequence.index", false]], "index() (pydicom.sr.code method)": [[296, "pydicom.sr.Code.index", false]], "index() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.index", false]], "index() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.index", false]], "infer_sq_for_un_vr (pydicom.config.settings property)": [[57, "pydicom.config.Settings.infer_sq_for_un_vr", false]], "info (pydicom.uid.uid property)": [[523, "pydicom.uid.UID.info", false]], "insert() (pydicom.multival.multivalue method)": [[215, "pydicom.multival.MultiValue.insert", false]], "insert() (pydicom.sequence.sequence method)": [[295, "pydicom.sequence.Sequence.insert", false]], "instance (pydicom.fileset.recordnode attribute)": [[177, "pydicom.fileset.RecordNode.instance", false]], "intraocularlenscalculationsstorage (in module pydicom.uid)": [[393, "pydicom.uid.IntraocularLensCalculationsStorage", false]], "intravascularopticalcoherencetomographyimagestorageforpresentation (in module pydicom.uid)": [[394, "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", false]], "intravascularopticalcoherencetomographyimagestorageforprocessing (in module pydicom.uid)": [[395, "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", false]], "invalid_key_behavior (in module pydicom.config)": [[86, "pydicom.config.INVALID_KEY_BEHAVIOR", false]], "invalid_keyword_behavior (in module pydicom.config)": [[85, "pydicom.config.INVALID_KEYWORD_BEHAVIOR", false]], "invaliddicomerror": [[158, "pydicom.errors.InvalidDicomError", false]], "inventorystorage (in module pydicom.uid)": [[396, "pydicom.uid.InventoryStorage", false]], "is (class in pydicom.valuerep)": [[556, "pydicom.valuerep.IS", false]], "is_array (pydicom.pixels.decoders.base.decoderunner property)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.is_array", false]], "is_array (pydicom.pixels.encoders.base.encoderunner property)": [[261, "pydicom.pixels.encoders.base.EncodeRunner.is_array", false]], "is_available (pydicom.pixels.decoders.base.decoder property)": [[253, "pydicom.pixels.decoders.base.Decoder.is_available", false]], "is_available (pydicom.pixels.encoders.base.encoder property)": [[262, "pydicom.pixels.encoders.base.Encoder.is_available", false]], "is_available() (in module pydicom.overlays.numpy_handler)": [[216, "pydicom.overlays.numpy_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[217, "pydicom.pixel_data_handlers.gdcm_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[218, "pydicom.pixel_data_handlers.jpeg_ls_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.numpy_handler)": [[219, "pydicom.pixel_data_handlers.numpy_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.pillow_handler)": [[220, "pydicom.pixel_data_handlers.pillow_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[221, "pydicom.pixel_data_handlers.pylibjpeg_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.rle_handler)": [[222, "pydicom.pixel_data_handlers.rle_handler.is_available", false]], "is_available() (in module pydicom.waveforms.numpy_handler)": [[584, "pydicom.waveforms.numpy_handler.is_available", false]], "is_binary (pydicom.pixels.decoders.base.decoderunner property)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.is_binary", false]], "is_binary (pydicom.pixels.encoders.base.encoderunner property)": [[261, "pydicom.pixels.encoders.base.EncodeRunner.is_binary", false]], "is_buffer (pydicom.pixels.decoders.base.decoderunner property)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.is_buffer", false]], "is_buffer (pydicom.pixels.encoders.base.encoderunner property)": [[261, "pydicom.pixels.encoders.base.EncodeRunner.is_buffer", false]], "is_buffered (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.is_buffered", false]], "is_buffered (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.is_buffered", false]], "is_canonical() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.is_canonical", false]], "is_cid (pydicom.sr.collection property)": [[297, "pydicom.sr.Collection.is_cid", false]], "is_compressed (pydicom.uid.uid property)": [[523, "pydicom.uid.UID.is_compressed", false]], "is_conformant_file_id() (in module pydicom.fileset)": [[179, "pydicom.fileset.is_conformant_file_id", false]], "is_dataset (pydicom.pixels.decoders.base.decoderunner property)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.is_dataset", false]], "is_dataset (pydicom.pixels.encoders.base.encoderunner property)": [[261, "pydicom.pixels.encoders.base.EncodeRunner.is_dataset", false]], "is_decompressed (pydicom.dataset.dataset property)": [[133, "pydicom.dataset.Dataset.is_decompressed", false]], "is_decompressed (pydicom.dataset.filedataset property)": [[134, "pydicom.dataset.FileDataset.is_decompressed", false]], "is_decompressed (pydicom.dataset.filemetadataset property)": [[135, "pydicom.dataset.FileMetaDataset.is_decompressed", false]], "is_deflated (pydicom.uid.uid property)": [[523, "pydicom.uid.UID.is_deflated", false]], "is_dicom() (in module pydicom.misc)": [[213, "pydicom.misc.is_dicom", false]], "is_empty (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.is_empty", false]], "is_encapsulated (pydicom.pixels.decoders.base.decoder property)": [[253, "pydicom.pixels.decoders.base.Decoder.is_encapsulated", false]], "is_encapsulated (pydicom.pixels.encoders.base.encoder property)": [[262, "pydicom.pixels.encoders.base.Encoder.is_encapsulated", false]], "is_encapsulated (pydicom.uid.uid property)": [[523, "pydicom.uid.UID.is_encapsulated", false]], "is_finite() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.is_finite", false]], "is_implicit_vr (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.is_implicit_VR", false]], "is_implicit_vr (pydicom.dataset.dataset property)": [[133, "pydicom.dataset.Dataset.is_implicit_VR", false]], "is_implicit_vr (pydicom.dataset.filedataset property)": [[134, "pydicom.dataset.FileDataset.is_implicit_VR", false]], "is_implicit_vr (pydicom.dataset.filemetadataset property)": [[135, "pydicom.dataset.FileMetaDataset.is_implicit_VR", false]], "is_implicit_vr (pydicom.filebase.dicombytesio property)": [[160, "pydicom.filebase.DicomBytesIO.is_implicit_VR", false]], "is_implicit_vr (pydicom.filebase.dicomfilelike property)": [[162, "pydicom.filebase.DicomFileLike.is_implicit_VR", false]], "is_implicit_vr (pydicom.filebase.dicomio property)": [[163, "pydicom.filebase.DicomIO.is_implicit_VR", false]], "is_implicit_vr (pydicom.uid.uid property)": [[523, "pydicom.uid.UID.is_implicit_VR", false]], "is_infinite() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.is_infinite", false]], "is_integer() (pydicom.valuerep.dsfloat method)": [[554, "pydicom.valuerep.DSfloat.is_integer", false]], "is_integer() (pydicom.valuerep.isfloat method)": [[557, "pydicom.valuerep.ISfloat.is_integer", false]], "is_little_endian (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.is_little_endian", false]], "is_little_endian (pydicom.dataset.dataset property)": [[133, "pydicom.dataset.Dataset.is_little_endian", false]], "is_little_endian (pydicom.dataset.filedataset property)": [[134, "pydicom.dataset.FileDataset.is_little_endian", false]], "is_little_endian (pydicom.dataset.filemetadataset property)": [[135, "pydicom.dataset.FileMetaDataset.is_little_endian", false]], "is_little_endian (pydicom.filebase.dicombytesio property)": [[160, "pydicom.filebase.DicomBytesIO.is_little_endian", false]], "is_little_endian (pydicom.filebase.dicomfilelike property)": [[162, "pydicom.filebase.DicomFileLike.is_little_endian", false]], "is_little_endian (pydicom.filebase.dicomio property)": [[163, "pydicom.filebase.DicomIO.is_little_endian", false]], "is_little_endian (pydicom.uid.uid property)": [[523, "pydicom.uid.UID.is_little_endian", false]], "is_nan() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.is_nan", false]], "is_native (pydicom.pixels.decoders.base.decoder property)": [[253, "pydicom.pixels.decoders.base.Decoder.is_native", false]], "is_native (pydicom.pixels.encoders.base.encoder property)": [[262, "pydicom.pixels.encoders.base.Encoder.is_native", false]], "is_normal() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.is_normal", false]], "is_original_encoding (pydicom.dataset.dataset property)": [[133, "pydicom.dataset.Dataset.is_original_encoding", false]], "is_original_encoding (pydicom.dataset.filedataset property)": [[134, "pydicom.dataset.FileDataset.is_original_encoding", false]], "is_original_encoding (pydicom.dataset.filemetadataset property)": [[135, "pydicom.dataset.FileMetaDataset.is_original_encoding", false]], "is_private (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.is_private", false]], "is_private (pydicom.fileset.fileinstance property)": [[175, "pydicom.fileset.FileInstance.is_private", false]], "is_private (pydicom.tag.basetag property)": [[299, "pydicom.tag.BaseTag.is_private", false]], "is_private (pydicom.uid.uid property)": [[523, "pydicom.uid.UID.is_private", false]], "is_private_creator (pydicom.tag.basetag property)": [[299, "pydicom.tag.BaseTag.is_private_creator", false]], "is_qnan() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.is_qnan", false]], "is_raw (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.is_raw", false]], "is_retired (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.is_retired", false]], "is_retired (pydicom.uid.uid property)": [[523, "pydicom.uid.UID.is_retired", false]], "is_root (pydicom.fileset.recordnode property)": [[177, "pydicom.fileset.RecordNode.is_root", false]], "is_signed() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.is_signed", false]], "is_snan() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.is_snan", false]], "is_staged (pydicom.fileset.fileinstance property)": [[175, "pydicom.fileset.FileInstance.is_staged", false]], "is_staged (pydicom.fileset.fileset property)": [[176, "pydicom.fileset.FileSet.is_staged", false]], "is_subnormal() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.is_subnormal", false]], "is_transfer_syntax (pydicom.uid.uid property)": [[523, "pydicom.uid.UID.is_transfer_syntax", false]], "is_undefined_length (pydicom.dataelem.dataelement attribute)": [[129, "pydicom.dataelem.DataElement.is_undefined_length", false]], "is_valid (pydicom.uid.uid property)": [[523, "pydicom.uid.UID.is_valid", false]], "is_valid_ds() (in module pydicom.valuerep)": [[562, "pydicom.valuerep.is_valid_ds", false]], "is_zero() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.is_zero", false]], "isalnum() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.isalnum", false]], "isalnum() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.isalnum", false]], "isalpha() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.isalpha", false]], "isalpha() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.isalpha", false]], "isascii() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.isascii", false]], "isascii() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.isascii", false]], "isdecimal() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.isdecimal", false]], "isdecimal() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.isdecimal", false]], "isdigit() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.isdigit", false]], "isdigit() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.isdigit", false]], "isfloat (class in pydicom.valuerep)": [[557, "pydicom.valuerep.ISfloat", false]], "isidentifier() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.isidentifier", false]], "isidentifier() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.isidentifier", false]], "islower() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.islower", false]], "islower() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.islower", false]], "isnumeric() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.isnumeric", false]], "isnumeric() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.isnumeric", false]], "isocalendar() (pydicom.valuerep.da method)": [[551, "pydicom.valuerep.DA.isocalendar", false]], "isocalendar() (pydicom.valuerep.dt method)": [[555, "pydicom.valuerep.DT.isocalendar", false]], "isoformat() (pydicom.valuerep.da method)": [[551, "pydicom.valuerep.DA.isoformat", false]], "isoformat() (pydicom.valuerep.dt method)": [[555, "pydicom.valuerep.DT.isoformat", false]], "isoformat() (pydicom.valuerep.tm method)": [[559, "pydicom.valuerep.TM.isoformat", false]], "isoweekday() (pydicom.valuerep.da method)": [[551, "pydicom.valuerep.DA.isoweekday", false]], "isoweekday() (pydicom.valuerep.dt method)": [[555, "pydicom.valuerep.DT.isoweekday", false]], "isprintable() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.isprintable", false]], "isprintable() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.isprintable", false]], "isspace() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.isspace", false]], "isspace() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.isspace", false]], "istitle() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.istitle", false]], "istitle() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.istitle", false]], "isupper() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.isupper", false]], "isupper() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.isupper", false]], "itemize_fragment() (in module pydicom.encaps)": [[153, "pydicom.encaps.itemize_fragment", false]], "itemize_frame() (in module pydicom.encaps)": [[154, "pydicom.encaps.itemize_frame", false]], "items() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.items", false]], "items() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.items", false]], "items() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.items", false]], "iter_array() (pydicom.pixels.decoders.base.decoder method)": [[253, "pydicom.pixels.decoders.base.Decoder.iter_array", false]], "iter_buffer() (pydicom.pixels.decoders.base.decoder method)": [[253, "pydicom.pixels.decoders.base.Decoder.iter_buffer", false]], "iter_decode() (pydicom.pixels.decoders.base.decoderunner method)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.iter_decode", false]], "iter_encode() (pydicom.pixels.encoders.base.encoder method)": [[262, "pydicom.pixels.encoders.base.Encoder.iter_encode", false]], "iter_pixels() (in module pydicom.pixels)": [[265, "pydicom.pixels.iter_pixels", false]], "iter_pixels() (in module pydicom.pixels.utils)": [[288, "pydicom.pixels.utils.iter_pixels", false]], "iterall() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.iterall", false]], "iterall() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.iterall", false]], "iterall() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.iterall", false]], "join() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.join", false]], "join() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.join", false]], "jpeg2000 (in module pydicom.uid)": [[397, "pydicom.uid.JPEG2000", false]], "jpeg2000decoder (in module pydicom.pixels.decoders)": [[243, "pydicom.pixels.decoders.JPEG2000Decoder", false]], "jpeg2000encoder (in module pydicom.pixels.encoders)": [[256, "pydicom.pixels.encoders.JPEG2000Encoder", false]], "jpeg2000lossless (in module pydicom.uid)": [[398, "pydicom.uid.JPEG2000Lossless", false]], "jpeg2000losslessdecoder (in module pydicom.pixels.decoders)": [[244, "pydicom.pixels.decoders.JPEG2000LosslessDecoder", false]], "jpeg2000losslessencoder (in module pydicom.pixels.encoders)": [[257, "pydicom.pixels.encoders.JPEG2000LosslessEncoder", false]], "jpeg2000mc (in module pydicom.uid)": [[399, "pydicom.uid.JPEG2000MC", false]], "jpeg2000mclossless (in module pydicom.uid)": [[400, "pydicom.uid.JPEG2000MCLossless", false]], "jpeg2000transfersyntaxes (in module pydicom.uid)": [[401, "pydicom.uid.JPEG2000TransferSyntaxes", false]], "jpegbaseline8bit (in module pydicom.uid)": [[402, "pydicom.uid.JPEGBaseline8Bit", false]], "jpegbaseline8bitdecoder (in module pydicom.pixels.decoders)": [[245, "pydicom.pixels.decoders.JPEGBaseline8BitDecoder", false]], "jpegextended12bit (in module pydicom.uid)": [[403, "pydicom.uid.JPEGExtended12Bit", false]], "jpegextended12bitdecoder (in module pydicom.pixels.decoders)": [[246, "pydicom.pixels.decoders.JPEGExtended12BitDecoder", false]], "jpeglossless (in module pydicom.uid)": [[407, "pydicom.uid.JPEGLossless", false]], "jpeglosslessdecoder (in module pydicom.pixels.decoders)": [[249, "pydicom.pixels.decoders.JPEGLosslessDecoder", false]], "jpeglosslesssv1 (in module pydicom.uid)": [[408, "pydicom.uid.JPEGLosslessSV1", false]], "jpeglosslesssv1decoder (in module pydicom.pixels.decoders)": [[250, "pydicom.pixels.decoders.JPEGLosslessSV1Decoder", false]], "jpeglslossless (in module pydicom.uid)": [[404, "pydicom.uid.JPEGLSLossless", false]], "jpeglslosslessdecoder (in module pydicom.pixels.decoders)": [[247, "pydicom.pixels.decoders.JPEGLSLosslessDecoder", false]], "jpeglslosslessencoder (in module pydicom.pixels.encoders)": [[258, "pydicom.pixels.encoders.JPEGLSLosslessEncoder", false]], "jpeglsnearlossless (in module pydicom.uid)": [[405, "pydicom.uid.JPEGLSNearLossless", false]], "jpeglsnearlosslessdecoder (in module pydicom.pixels.decoders)": [[248, "pydicom.pixels.decoders.JPEGLSNearLosslessDecoder", false]], "jpeglsnearlosslessencoder (in module pydicom.pixels.encoders)": [[259, "pydicom.pixels.encoders.JPEGLSNearLosslessEncoder", false]], "jpeglstransfersyntaxes (in module pydicom.uid)": [[406, "pydicom.uid.JPEGLSTransferSyntaxes", false]], "jpegtransfersyntaxes (in module pydicom.uid)": [[409, "pydicom.uid.JPEGTransferSyntaxes", false]], "jpegxl (in module pydicom.uid)": [[410, "pydicom.uid.JPEGXL", false]], "jpegxljpegrecompression (in module pydicom.uid)": [[411, "pydicom.uid.JPEGXLJPEGRecompression", false]], "jpegxllossless (in module pydicom.uid)": [[412, "pydicom.uid.JPEGXLLossless", false]], "jpegxltransfersyntaxes (in module pydicom.uid)": [[413, "pydicom.uid.JPEGXLTransferSyntaxes", false]], "jpiphtj2kreferenced (in module pydicom.uid)": [[414, "pydicom.uid.JPIPHTJ2KReferenced", false]], "jpiphtj2kreferenceddeflate (in module pydicom.uid)": [[415, "pydicom.uid.JPIPHTJ2KReferencedDeflate", false]], "json_key (pydicom.tag.basetag property)": [[299, "pydicom.tag.BaseTag.json_key", false]], "keratometrymeasurementsstorage (in module pydicom.uid)": [[416, "pydicom.uid.KeratometryMeasurementsStorage", false]], "key (pydicom.fileset.recordnode property)": [[177, "pydicom.fileset.RecordNode.key", false]], "keyobjectselectiondocumentstorage (in module pydicom.uid)": [[417, "pydicom.uid.KeyObjectSelectionDocumentStorage", false]], "keys() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.keys", false]], "keys() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.keys", false]], "keys() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.keys", false]], "keyword (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.keyword", false]], "keyword (pydicom.uid.uid property)": [[523, "pydicom.uid.UID.keyword", false]], "keyword_for_tag() (in module pydicom.datadict)": [[121, "pydicom.datadict.keyword_for_tag", false]], "labelmapsegmentationstorage (in module pydicom.uid)": [[418, "pydicom.uid.LabelMapSegmentationStorage", false]], "legacyconvertedenhancedctimagestorage (in module pydicom.uid)": [[419, "pydicom.uid.LegacyConvertedEnhancedCTImageStorage", false]], "legacyconvertedenhancedmrimagestorage (in module pydicom.uid)": [[420, "pydicom.uid.LegacyConvertedEnhancedMRImageStorage", false]], "legacyconvertedenhancedpetimagestorage (in module pydicom.uid)": [[421, "pydicom.uid.LegacyConvertedEnhancedPETImageStorage", false]], "length (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.length", false]], "length_of_undefined_length() (in module pydicom.fileutil)": [[183, "pydicom.fileutil.length_of_undefined_length", false]], "lengths (pydicom.encaps.encapsulatedbuffer property)": [[68, "pydicom.encaps.EncapsulatedBuffer.lengths", false]], "lensometrymeasurementsstorage (in module pydicom.uid)": [[422, "pydicom.uid.LensometryMeasurementsStorage", false]], "ljust() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.ljust", false]], "ljust() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.ljust", false]], "ln() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.ln", false]], "load() (pydicom.fileset.fileinstance method)": [[175, "pydicom.fileset.FileInstance.load", false]], "load() (pydicom.fileset.fileset method)": [[176, "pydicom.fileset.FileSet.load", false]], "log10() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.log10", false]], "logb() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.logb", false]], "logical_and() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.logical_and", false]], "logical_invert() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.logical_invert", false]], "logical_or() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.logical_or", false]], "logical_xor() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.logical_xor", false]], "lower() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.lower", false]], "lower() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.lower", false]], "lstrip() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.lstrip", false]], "lstrip() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.lstrip", false]], "maculargridthicknessandvolumereportstorage (in module pydicom.uid)": [[440, "pydicom.uid.MacularGridThicknessAndVolumeReportStorage", false]], "maketrans() (pydicom.uid.uid static method)": [[523, "pydicom.uid.UID.maketrans", false]], "maketrans() (pydicom.valuerep.vr static method)": [[560, "pydicom.valuerep.VR.maketrans", false]], "mammographycadsrstorage (in module pydicom.uid)": [[441, "pydicom.uid.MammographyCADSRStorage", false]], "mask_match() (in module pydicom.datadict)": [[122, "pydicom.datadict.mask_match", false]], "max() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.max", false]], "max_mag() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.max_mag", false]], "maxbytestodisplay (pydicom.dataelem.dataelement attribute)": [[129, "pydicom.dataelem.DataElement.maxBytesToDisplay", false]], "meaning (pydicom.sr.code attribute)": [[296, "pydicom.sr.Code.meaning", false]], "mediastoragedirectorystorage (in module pydicom.uid)": [[442, "pydicom.uid.MediaStorageDirectoryStorage", false]], "microscopybulksimpleannotationsstorage (in module pydicom.uid)": [[443, "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", false]], "middle_name (pydicom.valuerep.personname property)": [[558, "pydicom.valuerep.PersonName.middle_name", false]], "min() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.min", false]], "min_mag() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.min_mag", false]], "missing_dependencies (pydicom.pixels.decoders.base.decoder property)": [[253, "pydicom.pixels.decoders.base.Decoder.missing_dependencies", false]], "missing_dependencies (pydicom.pixels.encoders.base.encoder property)": [[262, "pydicom.pixels.encoders.base.Encoder.missing_dependencies", false]], "module": [[68, "module-pydicom.encaps", false], [70, "module-pydicom.examples", false], [216, "module-pydicom.overlays.numpy_handler", false], [217, "module-pydicom.pixel_data_handlers.gdcm_handler", false], [218, "module-pydicom.pixel_data_handlers.jpeg_ls_handler", false], [219, "module-pydicom.pixel_data_handlers.numpy_handler", false], [220, "module-pydicom.pixel_data_handlers.pillow_handler", false], [221, "module-pydicom.pixel_data_handlers.pylibjpeg_handler", false], [222, "module-pydicom.pixel_data_handlers.rle_handler", false], [584, "module-pydicom.waveforms.numpy_handler", false], [586, "module-pydicom.pixel_data_handlers", false], [587, "module-pydicom.hooks", false], [588, "module-pydicom", false], [590, "module-pydicom.overlays", false], [591, "module-pydicom.pixels", false], [592, "module-pydicom.pixels.decoders", false], [593, "module-pydicom.pixels.encoders", false], [594, "module-pydicom.pixels.processing", false], [595, "module-pydicom.pixels.utils", false], [596, "module-pydicom.sr", false], [597, "module-pydicom.uid", false], [598, "module-pydicom.waveforms", false]], "mpeg2mphl (in module pydicom.uid)": [[423, "pydicom.uid.MPEG2MPHL", false]], "mpeg2mphlf (in module pydicom.uid)": [[424, "pydicom.uid.MPEG2MPHLF", false]], "mpeg2mpml (in module pydicom.uid)": [[425, "pydicom.uid.MPEG2MPML", false]], "mpeg2mpmlf (in module pydicom.uid)": [[426, "pydicom.uid.MPEG2MPMLF", false]], "mpeg4hp41 (in module pydicom.uid)": [[427, "pydicom.uid.MPEG4HP41", false]], "mpeg4hp41bd (in module pydicom.uid)": [[428, "pydicom.uid.MPEG4HP41BD", false]], "mpeg4hp41bdf (in module pydicom.uid)": [[429, "pydicom.uid.MPEG4HP41BDF", false]], "mpeg4hp41f (in module pydicom.uid)": [[430, "pydicom.uid.MPEG4HP41F", false]], "mpeg4hp422d (in module pydicom.uid)": [[431, "pydicom.uid.MPEG4HP422D", false]], "mpeg4hp422df (in module pydicom.uid)": [[432, "pydicom.uid.MPEG4HP422DF", false]], "mpeg4hp423d (in module pydicom.uid)": [[433, "pydicom.uid.MPEG4HP423D", false]], "mpeg4hp423df (in module pydicom.uid)": [[434, "pydicom.uid.MPEG4HP423DF", false]], "mpeg4hp42stereo (in module pydicom.uid)": [[435, "pydicom.uid.MPEG4HP42STEREO", false]], "mpeg4hp42stereof (in module pydicom.uid)": [[436, "pydicom.uid.MPEG4HP42STEREOF", false]], "mpegtransfersyntaxes (in module pydicom.uid)": [[437, "pydicom.uid.MPEGTransferSyntaxes", false]], "mrimagestorage (in module pydicom.uid)": [[438, "pydicom.uid.MRImageStorage", false]], "mrspectroscopystorage (in module pydicom.uid)": [[439, "pydicom.uid.MRSpectroscopyStorage", false]], "multi_string() (in module pydicom.filewriter)": [[188, "pydicom.filewriter.multi_string", false]], "multi_string() (in module pydicom.values)": [[583, "pydicom.values.multi_string", false]], "multichannelrespiratorywaveformstorage (in module pydicom.uid)": [[448, "pydicom.uid.MultichannelRespiratoryWaveformStorage", false]], "multiframegrayscalebytesecondarycaptureimagestorage (in module pydicom.uid)": [[444, "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", false]], "multiframegrayscalewordsecondarycaptureimagestorage (in module pydicom.uid)": [[445, "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", false]], "multiframesinglebitsecondarycaptureimagestorage (in module pydicom.uid)": [[446, "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", false]], "multiframetruecolorsecondarycaptureimagestorage (in module pydicom.uid)": [[447, "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", false]], "multiplevolumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[449, "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", false]], "multiplex_array() (in module pydicom.waveforms.numpy_handler)": [[584, "pydicom.waveforms.numpy_handler.multiplex_array", false]], "multivalue (class in pydicom.multival)": [[215, "pydicom.multival.MultiValue", false]], "name (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.name", false]], "name (pydicom.filebase.dicombytesio property)": [[160, "pydicom.filebase.DicomBytesIO.name", false]], "name (pydicom.filebase.dicomfilelike property)": [[162, "pydicom.filebase.DicomFileLike.name", false]], "name (pydicom.filebase.dicomio property)": [[163, "pydicom.filebase.DicomIO.name", false]], "name (pydicom.sr.collection property)": [[297, "pydicom.sr.Collection.name", false]], "name (pydicom.uid.uid property)": [[523, "pydicom.uid.UID.name", false]], "name_prefix (pydicom.valuerep.personname property)": [[558, "pydicom.valuerep.PersonName.name_prefix", false]], "name_suffix (pydicom.valuerep.personname property)": [[558, "pydicom.valuerep.PersonName.name_suffix", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[217, "pydicom.pixel_data_handlers.gdcm_handler.needs_to_convert_to_RGB", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[218, "pydicom.pixel_data_handlers.jpeg_ls_handler.needs_to_convert_to_RGB", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.numpy_handler)": [[219, "pydicom.pixel_data_handlers.numpy_handler.needs_to_convert_to_RGB", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.pillow_handler)": [[220, "pydicom.pixel_data_handlers.pillow_handler.needs_to_convert_to_RGB", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[221, "pydicom.pixel_data_handlers.pylibjpeg_handler.needs_to_convert_to_RGB", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.rle_handler)": [[222, "pydicom.pixel_data_handlers.rle_handler.needs_to_convert_to_RGB", false]], "next (pydicom.fileset.recordnode property)": [[177, "pydicom.fileset.RecordNode.next", false]], "next_minus() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.next_minus", false]], "next_plus() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.next_plus", false]], "next_toward() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.next_toward", false]], "node (pydicom.fileset.fileinstance attribute)": [[175, "pydicom.fileset.FileInstance.node", false]], "normalize() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.normalize", false]], "now() (pydicom.valuerep.dt method)": [[555, "pydicom.valuerep.DT.now", false]], "nuclearmedicineimagestorage (in module pydicom.uid)": [[450, "pydicom.uid.NuclearMedicineImageStorage", false]], "number_class() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.number_class", false]], "number_of_frames (pydicom.pixels.decoders.base.decoderunner property)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.number_of_frames", false]], "number_of_frames (pydicom.pixels.encoders.base.encoderunner property)": [[261, "pydicom.pixels.encoders.base.EncodeRunner.number_of_frames", false]], "numerator (pydicom.tag.basetag attribute)": [[299, "pydicom.tag.BaseTag.numerator", false]], "numerator (pydicom.valuerep.is attribute)": [[556, "pydicom.valuerep.IS.numerator", false]], "offsets (pydicom.encaps.encapsulatedbuffer property)": [[68, "pydicom.encaps.EncapsulatedBuffer.offsets", false]], "ophthalmicaxialmeasurementsstorage (in module pydicom.uid)": [[451, "pydicom.uid.OphthalmicAxialMeasurementsStorage", false]], "ophthalmicopticalcoherencetomographybscanvolumeanalysisstorage (in module pydicom.uid)": [[452, "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", false]], "ophthalmicopticalcoherencetomographyenfaceimagestorage (in module pydicom.uid)": [[453, "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", false]], "ophthalmicphotography16bitimagestorage (in module pydicom.uid)": [[454, "pydicom.uid.OphthalmicPhotography16BitImageStorage", false]], "ophthalmicphotography8bitimagestorage (in module pydicom.uid)": [[455, "pydicom.uid.OphthalmicPhotography8BitImageStorage", false]], "ophthalmicthicknessmapstorage (in module pydicom.uid)": [[456, "pydicom.uid.OphthalmicThicknessMapStorage", false]], "ophthalmictomographyimagestorage (in module pydicom.uid)": [[457, "pydicom.uid.OphthalmicTomographyImageStorage", false]], "ophthalmicvisualfieldstaticperimetrymeasurementsstorage (in module pydicom.uid)": [[458, "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", false]], "options (pydicom.pixels.decoders.base.decoderunner property)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.options", false]], "options (pydicom.pixels.encoders.base.encoderunner property)": [[261, "pydicom.pixels.encoders.base.EncodeRunner.options", false]], "original_character_set (pydicom.dataset.dataset property)": [[133, "pydicom.dataset.Dataset.original_character_set", false]], "original_character_set (pydicom.dataset.filedataset property)": [[134, "pydicom.dataset.FileDataset.original_character_set", false]], "original_character_set (pydicom.dataset.filemetadataset property)": [[135, "pydicom.dataset.FileMetaDataset.original_character_set", false]], "original_encoding (pydicom.dataset.dataset property)": [[133, "pydicom.dataset.Dataset.original_encoding", false]], "original_encoding (pydicom.dataset.filedataset property)": [[134, "pydicom.dataset.FileDataset.original_encoding", false]], "original_encoding (pydicom.dataset.filemetadataset property)": [[135, "pydicom.dataset.FileMetaDataset.original_encoding", false]], "overlay_array() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.overlay_array", false]], "overlay_array() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.overlay_array", false]], "overlay_array() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.overlay_array", false]], "pack_bits() (in module pydicom.pixels)": [[266, "pydicom.pixels.pack_bits", false]], "pack_bits() (in module pydicom.pixels.utils)": [[289, "pydicom.pixels.utils.pack_bits", false]], "parametricmapstorage (in module pydicom.uid)": [[461, "pydicom.uid.ParametricMapStorage", false]], "parent (pydicom.filebase.dicombytesio property)": [[160, "pydicom.filebase.DicomBytesIO.parent", false]], "parent (pydicom.filebase.dicomfilelike property)": [[162, "pydicom.filebase.DicomFileLike.parent", false]], "parent (pydicom.filebase.dicomio property)": [[163, "pydicom.filebase.DicomIO.parent", false]], "parent (pydicom.fileset.recordnode property)": [[177, "pydicom.fileset.RecordNode.parent", false]], "parse_basic_offsets() (in module pydicom.encaps)": [[155, "pydicom.encaps.parse_basic_offsets", false]], "parse_fragments() (in module pydicom.encaps)": [[156, "pydicom.encaps.parse_fragments", false]], "partition() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.partition", false]], "partition() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.partition", false]], "path (pydicom.fileset.fileinstance property)": [[175, "pydicom.fileset.FileInstance.path", false]], "path (pydicom.fileset.fileset property)": [[176, "pydicom.fileset.FileSet.path", false]], "patientradiationdosesrstorage (in module pydicom.uid)": [[462, "pydicom.uid.PatientRadiationDoseSRStorage", false]], "performedimagingagentadministrationsrstorage (in module pydicom.uid)": [[463, "pydicom.uid.PerformedImagingAgentAdministrationSRStorage", false]], "personname (class in pydicom.valuerep)": [[558, "pydicom.valuerep.PersonName", false]], "phonetic (pydicom.valuerep.personname property)": [[558, "pydicom.valuerep.PersonName.phonetic", false]], "photoacousticimagestorage (in module pydicom.uid)": [[464, "pydicom.uid.PhotoacousticImageStorage", false]], "photometric_interpretation (pydicom.pixels.decoders.base.decoderunner property)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.photometric_interpretation", false]], "photometric_interpretation (pydicom.pixels.encoders.base.encoderunner property)": [[261, "pydicom.pixels.encoders.base.EncodeRunner.photometric_interpretation", false]], "pixel_array (pydicom.dataset.dataset property)": [[133, "pydicom.dataset.Dataset.pixel_array", false]], "pixel_array (pydicom.dataset.filedataset property)": [[134, "pydicom.dataset.FileDataset.pixel_array", false]], "pixel_array (pydicom.dataset.filemetadataset property)": [[135, "pydicom.dataset.FileMetaDataset.pixel_array", false]], "pixel_array() (in module pydicom.pixels)": [[267, "pydicom.pixels.pixel_array", false]], "pixel_array() (in module pydicom.pixels.utils)": [[290, "pydicom.pixels.utils.pixel_array", false]], "pixel_array_options() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.pixel_array_options", false]], "pixel_array_options() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.pixel_array_options", false]], "pixel_array_options() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.pixel_array_options", false]], "pixel_data_handlers (in module pydicom.config)": [[98, "pydicom.config.pixel_data_handlers", false]], "pixel_dtype (pydicom.pixels.decoders.base.decoderunner property)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.pixel_dtype", false]], "pixel_dtype() (in module pydicom.pixels.utils)": [[291, "pydicom.pixels.utils.pixel_dtype", false]], "pixel_keyword (pydicom.pixels.decoders.base.decoderunner property)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.pixel_keyword", false]], "pixel_keyword (pydicom.pixels.encoders.base.encoderunner property)": [[261, "pydicom.pixels.encoders.base.EncodeRunner.pixel_keyword", false]], "pixel_properties() (pydicom.pixels.decoders.base.decoderunner method)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.pixel_properties", false]], "pixel_representation (pydicom.pixels.decoders.base.decoderunner property)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.pixel_representation", false]], "pixel_representation (pydicom.pixels.encoders.base.encoderunner property)": [[261, "pydicom.pixels.encoders.base.EncodeRunner.pixel_representation", false]], "planar_configuration (pydicom.pixels.decoders.base.decoderunner property)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.planar_configuration", false]], "planar_configuration (pydicom.pixels.encoders.base.encoderunner property)": [[261, "pydicom.pixels.encoders.base.EncodeRunner.planar_configuration", false]], "plannedimagingagentadministrationsrstorage (in module pydicom.uid)": [[465, "pydicom.uid.PlannedImagingAgentAdministrationSRStorage", false]], "pop() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.pop", false]], "pop() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.pop", false]], "pop() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.pop", false]], "pop() (pydicom.multival.multivalue method)": [[215, "pydicom.multival.MultiValue.pop", false]], "pop() (pydicom.sequence.sequence method)": [[295, "pydicom.sequence.Sequence.pop", false]], "popitem() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.popitem", false]], "popitem() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.popitem", false]], "popitem() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.popitem", false]], "positronemissiontomographyimagestorage (in module pydicom.uid)": [[466, "pydicom.uid.PositronEmissionTomographyImageStorage", false]], "preamble (pydicom.dataset.filedataset attribute)": [[134, "pydicom.dataset.FileDataset.preamble", false]], "prettify() (pydicom.fileset.recordnode method)": [[177, "pydicom.fileset.RecordNode.prettify", false]], "previous (pydicom.fileset.recordnode property)": [[177, "pydicom.fileset.RecordNode.previous", false]], "private_block() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.private_block", false]], "private_block() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.private_block", false]], "private_block() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.private_block", false]], "private_creator (pydicom.dataset.privateblock attribute)": [[136, "pydicom.dataset.PrivateBlock.private_creator", false]], "private_creator (pydicom.tag.basetag property)": [[299, "pydicom.tag.BaseTag.private_creator", false]], "private_creators() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.private_creators", false]], "private_creators() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.private_creators", false]], "private_creators() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.private_creators", false]], "private_dictionary_description() (in module pydicom.datadict)": [[125, "pydicom.datadict.private_dictionary_description", false]], "private_dictionary_vm() (in module pydicom.datadict)": [[123, "pydicom.datadict.private_dictionary_VM", false]], "private_dictionary_vr() (in module pydicom.datadict)": [[124, "pydicom.datadict.private_dictionary_VR", false]], "privateblock (class in pydicom.dataset)": [[136, "pydicom.dataset.PrivateBlock", false]], "privatetransfersyntaxes (in module pydicom.uid)": [[467, "pydicom.uid.PrivateTransferSyntaxes", false]], "procedurelogstorage (in module pydicom.uid)": [[468, "pydicom.uid.ProcedureLogStorage", false]], "process() (pydicom.pixels.decoders.base.decoderunner method)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.process", false]], "protocolapprovalstorage (in module pydicom.uid)": [[469, "pydicom.uid.ProtocolApprovalStorage", false]], "pseudocolorsoftcopypresentationstatestorage (in module pydicom.uid)": [[470, "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", false]], "pydicom": [[588, "module-pydicom", false]], "pydicom.encaps": [[68, "module-pydicom.encaps", false]], "pydicom.examples": [[70, "module-pydicom.examples", false]], "pydicom.hooks": [[587, "module-pydicom.hooks", false]], "pydicom.overlays": [[590, "module-pydicom.overlays", false]], "pydicom.overlays.numpy_handler": [[216, "module-pydicom.overlays.numpy_handler", false]], "pydicom.pixel_data_handlers": [[586, "module-pydicom.pixel_data_handlers", false]], "pydicom.pixel_data_handlers.gdcm_handler": [[217, "module-pydicom.pixel_data_handlers.gdcm_handler", false]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[218, "module-pydicom.pixel_data_handlers.jpeg_ls_handler", false]], "pydicom.pixel_data_handlers.numpy_handler": [[219, "module-pydicom.pixel_data_handlers.numpy_handler", false]], "pydicom.pixel_data_handlers.pillow_handler": [[220, "module-pydicom.pixel_data_handlers.pillow_handler", false]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[221, "module-pydicom.pixel_data_handlers.pylibjpeg_handler", false]], "pydicom.pixel_data_handlers.rle_handler": [[222, "module-pydicom.pixel_data_handlers.rle_handler", false]], "pydicom.pixels": [[591, "module-pydicom.pixels", false]], "pydicom.pixels.decoders": [[592, "module-pydicom.pixels.decoders", false]], "pydicom.pixels.encoders": [[593, "module-pydicom.pixels.encoders", false]], "pydicom.pixels.processing": [[594, "module-pydicom.pixels.processing", false]], "pydicom.pixels.utils": [[595, "module-pydicom.pixels.utils", false]], "pydicom.sr": [[596, "module-pydicom.sr", false]], "pydicom.uid": [[597, "module-pydicom.uid", false]], "pydicom.waveforms": [[598, "module-pydicom.waveforms", false]], "pydicom.waveforms.numpy_handler": [[584, "module-pydicom.waveforms.numpy_handler", false]], "pydicom_implementation_uid (in module pydicom.uid)": [[459, "pydicom.uid.PYDICOM_IMPLEMENTATION_UID", false]], "pydicom_root_uid (in module pydicom.uid)": [[460, "pydicom.uid.PYDICOM_ROOT_UID", false]], "quantize() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.quantize", false]], "radiopharmaceuticalradiationdosesrstorage (in module pydicom.uid)": [[494, "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", false]], "radix() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.radix", false]], "raise (in module pydicom.config)": [[87, "pydicom.config.RAISE", false]], "raw_element_value() (in module pydicom.hooks)": [[209, "pydicom.hooks.raw_element_value", false]], "raw_element_value_fix_separator() (in module pydicom.hooks)": [[210, "pydicom.hooks.raw_element_value_fix_separator", false]], "raw_element_value_retry() (in module pydicom.hooks)": [[211, "pydicom.hooks.raw_element_value_retry", false]], "raw_element_vr() (in module pydicom.hooks)": [[212, "pydicom.hooks.raw_element_vr", false]], "rawdataelement (class in pydicom.dataelem)": [[131, "pydicom.dataelem.RawDataElement", false]], "rawdatastorage (in module pydicom.uid)": [[495, "pydicom.uid.RawDataStorage", false]], "re_valid_uid (in module pydicom.uid)": [[471, "pydicom.uid.RE_VALID_UID", false]], "re_valid_uid_prefix (in module pydicom.uid)": [[472, "pydicom.uid.RE_VALID_UID_PREFIX", false]], "read() (pydicom.encaps.encapsulatedbuffer method)": [[68, "pydicom.encaps.EncapsulatedBuffer.read", false]], "read() (pydicom.filebase.dicombytesio method)": [[160, "pydicom.filebase.DicomBytesIO.read", false]], "read() (pydicom.filebase.dicomfilelike method)": [[162, "pydicom.filebase.DicomFileLike.read", false]], "read() (pydicom.filebase.dicomio method)": [[163, "pydicom.filebase.DicomIO.read", false]], "read_dataset() (in module pydicom.filereader)": [[167, "pydicom.filereader.read_dataset", false]], "read_deferred_data_element() (in module pydicom.filereader)": [[168, "pydicom.filereader.read_deferred_data_element", false]], "read_encoding (pydicom.dataset.dataset property)": [[133, "pydicom.dataset.Dataset.read_encoding", false]], "read_encoding (pydicom.dataset.filedataset property)": [[134, "pydicom.dataset.FileDataset.read_encoding", false]], "read_encoding (pydicom.dataset.filemetadataset property)": [[135, "pydicom.dataset.FileMetaDataset.read_encoding", false]], "read_exact() (pydicom.filebase.dicombytesio method)": [[160, "pydicom.filebase.DicomBytesIO.read_exact", false]], "read_exact() (pydicom.filebase.dicomfilelike method)": [[162, "pydicom.filebase.DicomFileLike.read_exact", false]], "read_exact() (pydicom.filebase.dicomio method)": [[163, "pydicom.filebase.DicomIO.read_exact", false]], "read_file_meta_info() (in module pydicom.filereader)": [[169, "pydicom.filereader.read_file_meta_info", false]], "read_implicit_vr (pydicom.dataset.dataset property)": [[133, "pydicom.dataset.Dataset.read_implicit_vr", false]], "read_implicit_vr (pydicom.dataset.filedataset property)": [[134, "pydicom.dataset.FileDataset.read_implicit_vr", false]], "read_implicit_vr (pydicom.dataset.filemetadataset property)": [[135, "pydicom.dataset.FileMetaDataset.read_implicit_vr", false]], "read_item() (in module pydicom.encaps)": [[157, "pydicom.encaps.read_item", false]], "read_little_endian (pydicom.dataset.dataset property)": [[133, "pydicom.dataset.Dataset.read_little_endian", false]], "read_little_endian (pydicom.dataset.filedataset property)": [[134, "pydicom.dataset.FileDataset.read_little_endian", false]], "read_little_endian (pydicom.dataset.filemetadataset property)": [[135, "pydicom.dataset.FileMetaDataset.read_little_endian", false]], "read_partial() (in module pydicom.filereader)": [[170, "pydicom.filereader.read_partial", false]], "read_preamble() (in module pydicom.filereader)": [[171, "pydicom.filereader.read_preamble", false]], "read_sequence() (in module pydicom.filereader)": [[172, "pydicom.filereader.read_sequence", false]], "read_sequence_item() (in module pydicom.filereader)": [[173, "pydicom.filereader.read_sequence_item", false]], "read_tag() (pydicom.filebase.dicombytesio method)": [[160, "pydicom.filebase.DicomBytesIO.read_tag", false]], "read_tag() (pydicom.filebase.dicomfilelike method)": [[162, "pydicom.filebase.DicomFileLike.read_tag", false]], "read_tag() (pydicom.filebase.dicomio method)": [[163, "pydicom.filebase.DicomIO.read_tag", false]], "read_ul() (pydicom.filebase.dicombytesio method)": [[160, "pydicom.filebase.DicomBytesIO.read_UL", false]], "read_ul() (pydicom.filebase.dicomfilelike method)": [[162, "pydicom.filebase.DicomFileLike.read_UL", false]], "read_ul() (pydicom.filebase.dicomio method)": [[163, "pydicom.filebase.DicomIO.read_UL", false]], "read_undefined_length_value() (in module pydicom.fileutil)": [[184, "pydicom.fileutil.read_undefined_length_value", false]], "read_us() (pydicom.filebase.dicombytesio method)": [[160, "pydicom.filebase.DicomBytesIO.read_US", false]], "read_us() (pydicom.filebase.dicomfilelike method)": [[162, "pydicom.filebase.DicomFileLike.read_US", false]], "read_us() (pydicom.filebase.dicomio method)": [[163, "pydicom.filebase.DicomIO.read_US", false]], "readable() (pydicom.encaps.encapsulatedbuffer method)": [[68, "pydicom.encaps.EncapsulatedBuffer.readable", false]], "reading_validation_mode (pydicom.config.settings property)": [[57, "pydicom.config.Settings.reading_validation_mode", false]], "real (pydicom.tag.basetag attribute)": [[299, "pydicom.tag.BaseTag.real", false]], "real (pydicom.valuerep.dsfloat attribute)": [[554, "pydicom.valuerep.DSfloat.real", false]], "real (pydicom.valuerep.is attribute)": [[556, "pydicom.valuerep.IS.real", false]], "real (pydicom.valuerep.isfloat attribute)": [[557, "pydicom.valuerep.ISfloat.real", false]], "realworldvaluemappingstorage (in module pydicom.uid)": [[496, "pydicom.uid.RealWorldValueMappingStorage", false]], "record_type (pydicom.fileset.recordnode property)": [[177, "pydicom.fileset.RecordNode.record_type", false]], "recordnode (class in pydicom.fileset)": [[177, "pydicom.fileset.RecordNode", false]], "register_callback() (pydicom.hooks.hooks method)": [[207, "pydicom.hooks.Hooks.register_callback", false]], "register_kwargs() (pydicom.hooks.hooks method)": [[207, "pydicom.hooks.Hooks.register_kwargs", false]], "register_transfer_syntax() (in module pydicom.uid)": [[550, "pydicom.uid.register_transfer_syntax", false]], "remainder_near() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.remainder_near", false]], "remove() (pydicom.fileset.fileset method)": [[176, "pydicom.fileset.FileSet.remove", false]], "remove() (pydicom.fileset.recordnode method)": [[177, "pydicom.fileset.RecordNode.remove", false]], "remove() (pydicom.multival.multivalue method)": [[215, "pydicom.multival.MultiValue.remove", false]], "remove() (pydicom.sequence.sequence method)": [[295, "pydicom.sequence.Sequence.remove", false]], "remove_plugin() (pydicom.pixels.decoders.base.decoder method)": [[253, "pydicom.pixels.decoders.base.Decoder.remove_plugin", false]], "remove_plugin() (pydicom.pixels.encoders.base.encoder method)": [[262, "pydicom.pixels.encoders.base.Encoder.remove_plugin", false]], "remove_private_tags() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.remove_private_tags", false]], "remove_private_tags() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.remove_private_tags", false]], "remove_private_tags() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.remove_private_tags", false]], "removeprefix() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.removeprefix", false]], "removeprefix() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.removeprefix", false]], "removesuffix() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.removesuffix", false]], "removesuffix() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.removesuffix", false]], "repeater_has_keyword() (in module pydicom.datadict)": [[126, "pydicom.datadict.repeater_has_keyword", false]], "repeater_has_tag() (in module pydicom.datadict)": [[127, "pydicom.datadict.repeater_has_tag", false]], "replace() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.replace", false]], "replace() (pydicom.valuerep.da method)": [[551, "pydicom.valuerep.DA.replace", false]], "replace() (pydicom.valuerep.dt method)": [[555, "pydicom.valuerep.DT.replace", false]], "replace() (pydicom.valuerep.tm method)": [[559, "pydicom.valuerep.TM.replace", false]], "replace() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.replace", false]], "repval (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.repval", false]], "reset_data_element_callback() (in module pydicom.config)": [[99, "pydicom.config.reset_data_element_callback", false]], "reshape() (pydicom.pixels.decoders.base.decoderunner method)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.reshape", false]], "reshape_overlay_array() (in module pydicom.overlays.numpy_handler)": [[216, "pydicom.overlays.numpy_handler.reshape_overlay_array", false]], "reshape_pixel_array() (in module pydicom.pixels.utils)": [[292, "pydicom.pixels.utils.reshape_pixel_array", false]], "respiratorywaveformstorage (in module pydicom.uid)": [[497, "pydicom.uid.RespiratoryWaveformStorage", false]], "reverse() (pydicom.fileset.recordnode method)": [[177, "pydicom.fileset.RecordNode.reverse", false]], "reverse() (pydicom.multival.multivalue method)": [[215, "pydicom.multival.MultiValue.reverse", false]], "reverse() (pydicom.sequence.sequence method)": [[295, "pydicom.sequence.Sequence.reverse", false]], "rfind() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.rfind", false]], "rfind() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.rfind", false]], "rindex() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.rindex", false]], "rindex() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.rindex", false]], "rjust() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.rjust", false]], "rjust() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.rjust", false]], "rlelossless (in module pydicom.uid)": [[473, "pydicom.uid.RLELossless", false]], "rlelosslessdecoder (in module pydicom.pixels.decoders)": [[251, "pydicom.pixels.decoders.RLELosslessDecoder", false]], "rlelosslessencoder (in module pydicom.pixels.encoders)": [[260, "pydicom.pixels.encoders.RLELosslessEncoder", false]], "rletransfersyntaxes (in module pydicom.uid)": [[474, "pydicom.uid.RLETransferSyntaxes", false]], "roboticarmradiationstorage (in module pydicom.uid)": [[498, "pydicom.uid.RoboticArmRadiationStorage", false]], "roboticradiationrecordstorage (in module pydicom.uid)": [[499, "pydicom.uid.RoboticRadiationRecordStorage", false]], "root (pydicom.fileset.recordnode property)": [[177, "pydicom.fileset.RecordNode.root", false]], "rotate() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.rotate", false]], "routinescalpelectroencephalogramwaveformstorage (in module pydicom.uid)": [[500, "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", false]], "rows (pydicom.pixels.decoders.base.decoderunner property)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.rows", false]], "rows (pydicom.pixels.encoders.base.encoderunner property)": [[261, "pydicom.pixels.encoders.base.EncodeRunner.rows", false]], "rpartition() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.rpartition", false]], "rpartition() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.rpartition", false]], "rsplit() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.rsplit", false]], "rsplit() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.rsplit", false]], "rstrip() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.rstrip", false]], "rstrip() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.rstrip", false]], "rtbeamsdeliveryinstructionstorage (in module pydicom.uid)": [[475, "pydicom.uid.RTBeamsDeliveryInstructionStorage", false]], "rtbeamstreatmentrecordstorage (in module pydicom.uid)": [[476, "pydicom.uid.RTBeamsTreatmentRecordStorage", false]], "rtbrachyapplicationsetupdeliveryinstructionstorage (in module pydicom.uid)": [[477, "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", false]], "rtbrachytreatmentrecordstorage (in module pydicom.uid)": [[478, "pydicom.uid.RTBrachyTreatmentRecordStorage", false]], "rtdosestorage (in module pydicom.uid)": [[479, "pydicom.uid.RTDoseStorage", false]], "rtimagestorage (in module pydicom.uid)": [[480, "pydicom.uid.RTImageStorage", false]], "rtionbeamstreatmentrecordstorage (in module pydicom.uid)": [[481, "pydicom.uid.RTIonBeamsTreatmentRecordStorage", false]], "rtionplanstorage (in module pydicom.uid)": [[482, "pydicom.uid.RTIonPlanStorage", false]], "rtpatientpositionacquisitioninstructionstorage (in module pydicom.uid)": [[483, "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage", false]], "rtphysicianintentstorage (in module pydicom.uid)": [[484, "pydicom.uid.RTPhysicianIntentStorage", false]], "rtplanstorage (in module pydicom.uid)": [[485, "pydicom.uid.RTPlanStorage", false]], "rtradiationrecordsetstorage (in module pydicom.uid)": [[486, "pydicom.uid.RTRadiationRecordSetStorage", false]], "rtradiationsalvagerecordstorage (in module pydicom.uid)": [[487, "pydicom.uid.RTRadiationSalvageRecordStorage", false]], "rtradiationsetdeliveryinstructionstorage (in module pydicom.uid)": [[488, "pydicom.uid.RTRadiationSetDeliveryInstructionStorage", false]], "rtradiationsetstorage (in module pydicom.uid)": [[489, "pydicom.uid.RTRadiationSetStorage", false]], "rtsegmentannotationstorage (in module pydicom.uid)": [[490, "pydicom.uid.RTSegmentAnnotationStorage", false]], "rtstructuresetstorage (in module pydicom.uid)": [[491, "pydicom.uid.RTStructureSetStorage", false]], "rttreatmentpreparationstorage (in module pydicom.uid)": [[492, "pydicom.uid.RTTreatmentPreparationStorage", false]], "rttreatmentsummaryrecordstorage (in module pydicom.uid)": [[493, "pydicom.uid.RTTreatmentSummaryRecordStorage", false]], "same_quantum() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.same_quantum", false]], "samples_per_pixel (pydicom.pixels.decoders.base.decoderunner property)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.samples_per_pixel", false]], "samples_per_pixel (pydicom.pixels.encoders.base.encoderunner property)": [[261, "pydicom.pixels.encoders.base.EncodeRunner.samples_per_pixel", false]], "save_as() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.save_as", false]], "save_as() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.save_as", false]], "save_as() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.save_as", false]], "scaleb() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.scaleb", false]], "scheme_designator (pydicom.sr.code attribute)": [[296, "pydicom.sr.Code.scheme_designator", false]], "scheme_designator (pydicom.sr.collection property)": [[297, "pydicom.sr.Collection.scheme_designator", false]], "scheme_version (pydicom.sr.code attribute)": [[296, "pydicom.sr.Code.scheme_version", false]], "schemes() (pydicom.sr.concepts method)": [[298, "pydicom.sr.Concepts.schemes", false]], "secondarycaptureimagestorage (in module pydicom.uid)": [[504, "pydicom.uid.SecondaryCaptureImageStorage", false]], "seek() (pydicom.encaps.encapsulatedbuffer method)": [[68, "pydicom.encaps.EncapsulatedBuffer.seek", false]], "seek() (pydicom.filebase.dicombytesio method)": [[160, "pydicom.filebase.DicomBytesIO.seek", false]], "seek() (pydicom.filebase.dicomfilelike method)": [[162, "pydicom.filebase.DicomFileLike.seek", false]], "seek() (pydicom.filebase.dicomio method)": [[163, "pydicom.filebase.DicomIO.seek", false]], "seekable() (pydicom.encaps.encapsulatedbuffer method)": [[68, "pydicom.encaps.EncapsulatedBuffer.seekable", false]], "segmentationstorage (in module pydicom.uid)": [[505, "pydicom.uid.SegmentationStorage", false]], "segmentedvolumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[506, "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", false]], "sequence (class in pydicom.sequence)": [[295, "pydicom.sequence.Sequence", false]], "set_decoders() (pydicom.pixels.decoders.base.decoderunner method)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.set_decoders", false]], "set_encoders() (pydicom.pixels.encoders.base.encoderunner method)": [[261, "pydicom.pixels.encoders.base.EncodeRunner.set_encoders", false]], "set_option() (pydicom.pixels.decoders.base.decoderunner method)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.set_option", false]], "set_option() (pydicom.pixels.encoders.base.encoderunner method)": [[261, "pydicom.pixels.encoders.base.EncodeRunner.set_option", false]], "set_options() (pydicom.pixels.decoders.base.decoderunner method)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.set_options", false]], "set_options() (pydicom.pixels.encoders.base.encoderunner method)": [[261, "pydicom.pixels.encoders.base.EncodeRunner.set_options", false]], "set_original_encoding() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.set_original_encoding", false]], "set_original_encoding() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.set_original_encoding", false]], "set_original_encoding() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.set_original_encoding", false]], "set_pixel_data() (in module pydicom.pixels)": [[278, "pydicom.pixels.set_pixel_data", false]], "set_pixel_data() (in module pydicom.pixels.utils)": [[293, "pydicom.pixels.utils.set_pixel_data", false]], "set_pixel_data() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.set_pixel_data", false]], "set_pixel_data() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.set_pixel_data", false]], "set_pixel_data() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.set_pixel_data", false]], "set_private_encoding() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.set_private_encoding", false]], "set_source() (pydicom.pixels.decoders.base.decoderunner method)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.set_source", false]], "set_source() (pydicom.pixels.encoders.base.encoderunner method)": [[261, "pydicom.pixels.encoders.base.EncodeRunner.set_source", false]], "setdefault() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.setdefault", false]], "setdefault() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.setdefault", false]], "setdefault() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.setdefault", false]], "settings (class in pydicom.config)": [[57, "pydicom.config.Settings", false]], "settings (in module pydicom.config)": [[100, "pydicom.config.settings", false]], "shift() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.shift", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[217, "pydicom.pixel_data_handlers.gdcm_handler.should_change_PhotometricInterpretation_to_RGB", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[218, "pydicom.pixel_data_handlers.jpeg_ls_handler.should_change_PhotometricInterpretation_to_RGB", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.numpy_handler)": [[219, "pydicom.pixel_data_handlers.numpy_handler.should_change_PhotometricInterpretation_to_RGB", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.pillow_handler)": [[220, "pydicom.pixel_data_handlers.pillow_handler.should_change_PhotometricInterpretation_to_RGB", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[221, "pydicom.pixel_data_handlers.pylibjpeg_handler.should_change_PhotometricInterpretation_to_RGB", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.rle_handler)": [[222, "pydicom.pixel_data_handlers.rle_handler.should_change_PhotometricInterpretation_to_RGB", false]], "show_file_meta (in module pydicom.config)": [[101, "pydicom.config.show_file_meta", false]], "showvr (pydicom.dataelem.dataelement attribute)": [[129, "pydicom.dataelem.DataElement.showVR", false]], "simplifiedadultechosrstorage (in module pydicom.uid)": [[507, "pydicom.uid.SimplifiedAdultEchoSRStorage", false]], "size_in_bytes() (in module pydicom.misc)": [[214, "pydicom.misc.size_in_bytes", false]], "sleepelectroencephalogramwaveformstorage (in module pydicom.uid)": [[508, "pydicom.uid.SleepElectroencephalogramWaveformStorage", false]], "smptest211020uncompressedinterlacedactivevideo (in module pydicom.uid)": [[501, "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", false]], "smptest211020uncompressedprogressiveactivevideo (in module pydicom.uid)": [[502, "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", false]], "smptest211030pcmdigitalaudio (in module pydicom.uid)": [[503, "pydicom.uid.SMPTEST211030PCMDigitalAudio", false]], "sopclassuid (pydicom.fileset.fileinstance property)": [[175, "pydicom.fileset.FileInstance.SOPClassUID", false]], "sopinstanceuid (pydicom.fileset.fileinstance property)": [[175, "pydicom.fileset.FileInstance.SOPInstanceUID", false]], "spatialfiducialsstorage (in module pydicom.uid)": [[509, "pydicom.uid.SpatialFiducialsStorage", false]], "spatialregistrationstorage (in module pydicom.uid)": [[510, "pydicom.uid.SpatialRegistrationStorage", false]], "spectacleprescriptionreportstorage (in module pydicom.uid)": [[511, "pydicom.uid.SpectaclePrescriptionReportStorage", false]], "split() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.split", false]], "split() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.split", false]], "splitlines() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.splitlines", false]], "splitlines() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.splitlines", false]], "sqrt() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.sqrt", false]], "src (pydicom.pixels.decoders.base.decoderunner property)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.src", false]], "src (pydicom.pixels.encoders.base.encoderunner property)": [[261, "pydicom.pixels.encoders.base.EncodeRunner.src", false]], "startswith() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.startswith", false]], "startswith() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.startswith", false]], "stereometricrelationshipstorage (in module pydicom.uid)": [[512, "pydicom.uid.StereometricRelationshipStorage", false]], "strftime() (pydicom.valuerep.da method)": [[551, "pydicom.valuerep.DA.strftime", false]], "strftime() (pydicom.valuerep.dt method)": [[555, "pydicom.valuerep.DT.strftime", false]], "strftime() (pydicom.valuerep.tm method)": [[559, "pydicom.valuerep.TM.strftime", false]], "strip() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.strip", false]], "strip() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.strip", false]], "strptime() (pydicom.valuerep.dt method)": [[555, "pydicom.valuerep.DT.strptime", false]], "subjectiverefractionmeasurementsstorage (in module pydicom.uid)": [[513, "pydicom.uid.SubjectiveRefractionMeasurementsStorage", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[217, "pydicom.pixel_data_handlers.gdcm_handler.supports_transfer_syntax", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[218, "pydicom.pixel_data_handlers.jpeg_ls_handler.supports_transfer_syntax", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.numpy_handler)": [[219, "pydicom.pixel_data_handlers.numpy_handler.supports_transfer_syntax", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.pillow_handler)": [[220, "pydicom.pixel_data_handlers.pillow_handler.supports_transfer_syntax", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[221, "pydicom.pixel_data_handlers.pylibjpeg_handler.supports_transfer_syntax", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.rle_handler)": [[222, "pydicom.pixel_data_handlers.rle_handler.supports_transfer_syntax", false]], "surfacescanmeshstorage (in module pydicom.uid)": [[514, "pydicom.uid.SurfaceScanMeshStorage", false]], "surfacescanpointcloudstorage (in module pydicom.uid)": [[515, "pydicom.uid.SurfaceScanPointCloudStorage", false]], "surfacesegmentationstorage (in module pydicom.uid)": [[516, "pydicom.uid.SurfaceSegmentationStorage", false]], "swapcase() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.swapcase", false]], "swapcase() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.swapcase", false]], "tag (pydicom.dataelem.dataelement attribute)": [[129, "pydicom.dataelem.DataElement.tag", false]], "tag (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.tag", false]], "tag() (in module pydicom.tag)": [[300, "pydicom.tag.Tag", false]], "tag_for_keyword() (in module pydicom.datadict)": [[128, "pydicom.datadict.tag_for_keyword", false]], "tag_in_exception() (in module pydicom.tag)": [[302, "pydicom.tag.tag_in_exception", false]], "tell() (pydicom.encaps.encapsulatedbuffer method)": [[68, "pydicom.encaps.EncapsulatedBuffer.tell", false]], "tell() (pydicom.filebase.dicombytesio method)": [[160, "pydicom.filebase.DicomBytesIO.tell", false]], "tell() (pydicom.filebase.dicomfilelike method)": [[162, "pydicom.filebase.DicomFileLike.tell", false]], "tell() (pydicom.filebase.dicomio method)": [[163, "pydicom.filebase.DicomIO.tell", false]], "thermographyimagestorage (in module pydicom.uid)": [[517, "pydicom.uid.ThermographyImageStorage", false]], "thermographymultiframeimagestorage (in module pydicom.uid)": [[518, "pydicom.uid.ThermographyMultiFrameImageStorage", false]], "time() (pydicom.valuerep.dt method)": [[555, "pydicom.valuerep.DT.time", false]], "timestamp (pydicom.dataset.filedataset attribute)": [[134, "pydicom.dataset.FileDataset.timestamp", false]], "timestamp() (pydicom.valuerep.dt method)": [[555, "pydicom.valuerep.DT.timestamp", false]], "timetuple() (pydicom.valuerep.da method)": [[551, "pydicom.valuerep.DA.timetuple", false]], "timetuple() (pydicom.valuerep.dt method)": [[555, "pydicom.valuerep.DT.timetuple", false]], "timetz() (pydicom.valuerep.dt method)": [[555, "pydicom.valuerep.DT.timetz", false]], "title() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.title", false]], "title() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.title", false]], "tm (class in pydicom.valuerep)": [[559, "pydicom.valuerep.TM", false]], "to_bytes() (pydicom.tag.basetag method)": [[299, "pydicom.tag.BaseTag.to_bytes", false]], "to_bytes() (pydicom.valuerep.is method)": [[556, "pydicom.valuerep.IS.to_bytes", false]], "to_eng_string() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.to_eng_string", false]], "to_integral() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.to_integral", false]], "to_integral_exact() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.to_integral_exact", false]], "to_integral_value() (pydicom.valuerep.dsdecimal method)": [[553, "pydicom.valuerep.DSdecimal.to_integral_value", false]], "to_json() (pydicom.dataelem.dataelement method)": [[129, "pydicom.dataelem.DataElement.to_json", false]], "to_json() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.to_json", false]], "to_json() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.to_json", false]], "to_json() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.to_json", false]], "to_json_dict() (pydicom.dataelem.dataelement method)": [[129, "pydicom.dataelem.DataElement.to_json_dict", false]], "to_json_dict() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.to_json_dict", false]], "to_json_dict() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.to_json_dict", false]], "to_json_dict() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.to_json_dict", false]], "today() (pydicom.valuerep.da method)": [[551, "pydicom.valuerep.DA.today", false]], "today() (pydicom.valuerep.dt method)": [[555, "pydicom.valuerep.DT.today", false]], "tomotherapeuticradiationrecordstorage (in module pydicom.uid)": [[519, "pydicom.uid.TomotherapeuticRadiationRecordStorage", false]], "tomotherapeuticradiationstorage (in module pydicom.uid)": [[520, "pydicom.uid.TomotherapeuticRadiationStorage", false]], "toordinal() (pydicom.valuerep.da method)": [[551, "pydicom.valuerep.DA.toordinal", false]], "toordinal() (pydicom.valuerep.dt method)": [[555, "pydicom.valuerep.DT.toordinal", false]], "top() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.top", false]], "top() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.top", false]], "top() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.top", false]], "tractographyresultsstorage (in module pydicom.uid)": [[521, "pydicom.uid.TractographyResultsStorage", false]], "trait_names() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.trait_names", false]], "trait_names() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.trait_names", false]], "trait_names() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.trait_names", false]], "trait_names() (pydicom.sr.collection method)": [[297, "pydicom.sr.Collection.trait_names", false]], "transfer_syntax (pydicom.pixels.decoders.base.decoderunner property)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.transfer_syntax", false]], "transfer_syntax (pydicom.pixels.encoders.base.encoderunner property)": [[261, "pydicom.pixels.encoders.base.EncodeRunner.transfer_syntax", false]], "transfersyntaxuid (pydicom.fileset.fileinstance property)": [[175, "pydicom.fileset.FileInstance.TransferSyntaxUID", false]], "translate() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.translate", false]], "translate() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.translate", false]], "tupletag() (in module pydicom.tag)": [[301, "pydicom.tag.TupleTag", false]], "twelveleadecgwaveformstorage (in module pydicom.uid)": [[522, "pydicom.uid.TwelveLeadECGWaveformStorage", false]], "type (pydicom.uid.uid property)": [[523, "pydicom.uid.UID.type", false]], "tzname() (pydicom.valuerep.dt method)": [[555, "pydicom.valuerep.DT.tzname", false]], "tzname() (pydicom.valuerep.tm method)": [[559, "pydicom.valuerep.TM.tzname", false]], "uid (class in pydicom.uid)": [[523, "pydicom.uid.UID", false]], "uid (pydicom.fileset.fileset property)": [[176, "pydicom.fileset.FileSet.UID", false]], "uid (pydicom.pixels.decoders.base.decoder property)": [[253, "pydicom.pixels.decoders.base.Decoder.UID", false]], "uid (pydicom.pixels.encoders.base.encoder property)": [[262, "pydicom.pixels.encoders.base.Encoder.UID", false]], "ultrasoundimagestorage (in module pydicom.uid)": [[524, "pydicom.uid.UltrasoundImageStorage", false]], "ultrasoundmultiframeimagestorage (in module pydicom.uid)": [[525, "pydicom.uid.UltrasoundMultiFrameImageStorage", false]], "uncompressedtransfersyntaxes (in module pydicom.uid)": [[526, "pydicom.uid.UncompressedTransferSyntaxes", false]], "unpack_bits() (in module pydicom.pixels)": [[279, "pydicom.pixels.unpack_bits", false]], "unpack_bits() (in module pydicom.pixels.utils)": [[294, "pydicom.pixels.utils.unpack_bits", false]], "update() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.update", false]], "update() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.update", false]], "update() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.update", false]], "update_raw_element() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.update_raw_element", false]], "update_raw_element() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.update_raw_element", false]], "update_raw_element() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.update_raw_element", false]], "upper() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.upper", false]], "upper() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.upper", false]], "use_ds_decimal (in module pydicom.config)": [[102, "pydicom.config.use_DS_decimal", false]], "use_ds_numpy (in module pydicom.config)": [[103, "pydicom.config.use_DS_numpy", false]], "use_is_numpy (in module pydicom.config)": [[104, "pydicom.config.use_IS_numpy", false]], "utcfromtimestamp() (pydicom.valuerep.dt method)": [[555, "pydicom.valuerep.DT.utcfromtimestamp", false]], "utcnow() (pydicom.valuerep.dt method)": [[555, "pydicom.valuerep.DT.utcnow", false]], "utcoffset() (pydicom.valuerep.dt method)": [[555, "pydicom.valuerep.DT.utcoffset", false]], "utcoffset() (pydicom.valuerep.tm method)": [[559, "pydicom.valuerep.TM.utcoffset", false]], "utctimetuple() (pydicom.valuerep.dt method)": [[555, "pydicom.valuerep.DT.utctimetuple", false]], "validate() (pydicom.dataelem.dataelement method)": [[129, "pydicom.dataelem.DataElement.validate", false]], "validate() (pydicom.dataset.filemetadataset static method)": [[135, "pydicom.dataset.FileMetaDataset.validate", false]], "validate() (pydicom.pixels.decoders.base.decoderunner method)": [[252, "pydicom.pixels.decoders.base.DecodeRunner.validate", false]], "validate() (pydicom.pixels.encoders.base.encoderunner method)": [[261, "pydicom.pixels.encoders.base.EncodeRunner.validate", false]], "validate_file_meta() (in module pydicom.dataset)": [[137, "pydicom.dataset.validate_file_meta", false]], "validation_mode (pydicom.dataelem.dataelement attribute)": [[129, "pydicom.dataelem.DataElement.validation_mode", false]], "value (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.value", false]], "value (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.value", false]], "value (pydicom.sr.code attribute)": [[296, "pydicom.sr.Code.value", false]], "value_tell (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.value_tell", false]], "values() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.values", false]], "values() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.values", false]], "values() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.values", false]], "variablemodalitylutsoftcopypresentationstatestorage (in module pydicom.uid)": [[532, "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage", false]], "videoendoscopicimagestorage (in module pydicom.uid)": [[533, "pydicom.uid.VideoEndoscopicImageStorage", false]], "videomicroscopicimagestorage (in module pydicom.uid)": [[534, "pydicom.uid.VideoMicroscopicImageStorage", false]], "videophotographicimagestorage (in module pydicom.uid)": [[535, "pydicom.uid.VideoPhotographicImageStorage", false]], "visualacuitymeasurementsstorage (in module pydicom.uid)": [[536, "pydicom.uid.VisualAcuityMeasurementsStorage", false]], "vlendoscopicimagestorage (in module pydicom.uid)": [[527, "pydicom.uid.VLEndoscopicImageStorage", false]], "vlmicroscopicimagestorage (in module pydicom.uid)": [[528, "pydicom.uid.VLMicroscopicImageStorage", false]], "vlphotographicimagestorage (in module pydicom.uid)": [[529, "pydicom.uid.VLPhotographicImageStorage", false]], "vlslidecoordinatesmicroscopicimagestorage (in module pydicom.uid)": [[530, "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", false]], "vlwholeslidemicroscopyimagestorage (in module pydicom.uid)": [[531, "pydicom.uid.VLWholeSlideMicroscopyImageStorage", false]], "vm (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.VM", false]], "volumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[537, "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", false]], "vr (class in pydicom.valuerep)": [[560, "pydicom.valuerep.VR", false]], "vr (pydicom.dataelem.dataelement attribute)": [[129, "pydicom.dataelem.DataElement.VR", false]], "vr (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.VR", false]], "walk() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.walk", false]], "walk() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.walk", false]], "walk() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.walk", false]], "warn (in module pydicom.config)": [[88, "pydicom.config.WARN", false]], "waveform_array() (pydicom.dataset.dataset method)": [[133, "pydicom.dataset.Dataset.waveform_array", false]], "waveform_array() (pydicom.dataset.filedataset method)": [[134, "pydicom.dataset.FileDataset.waveform_array", false]], "waveform_array() (pydicom.dataset.filemetadataset method)": [[135, "pydicom.dataset.FileMetaDataset.waveform_array", false]], "waveformannotationsrstorage (in module pydicom.uid)": [[538, "pydicom.uid.WaveformAnnotationSRStorage", false]], "weekday() (pydicom.valuerep.da method)": [[551, "pydicom.valuerep.DA.weekday", false]], "weekday() (pydicom.valuerep.dt method)": [[555, "pydicom.valuerep.DT.weekday", false]], "widefieldophthalmicphotography3dcoordinatesimagestorage (in module pydicom.uid)": [[539, "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", false]], "widefieldophthalmicphotographystereographicprojectionimagestorage (in module pydicom.uid)": [[540, "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", false]], "with_traceback() (pydicom.errors.invaliddicomerror method)": [[158, "pydicom.errors.InvalidDicomError.with_traceback", false]], "write() (pydicom.filebase.dicombytesio method)": [[160, "pydicom.filebase.DicomBytesIO.write", false]], "write() (pydicom.filebase.dicomfilelike method)": [[162, "pydicom.filebase.DicomFileLike.write", false]], "write() (pydicom.filebase.dicomio method)": [[163, "pydicom.filebase.DicomIO.write", false]], "write() (pydicom.fileset.fileset method)": [[176, "pydicom.fileset.FileSet.write", false]], "write_atvalue() (in module pydicom.filewriter)": [[189, "pydicom.filewriter.write_ATvalue", false]], "write_da() (in module pydicom.filewriter)": [[190, "pydicom.filewriter.write_DA", false]], "write_data_element() (in module pydicom.filewriter)": [[198, "pydicom.filewriter.write_data_element", false]], "write_dataset() (in module pydicom.filewriter)": [[199, "pydicom.filewriter.write_dataset", false]], "write_dt() (in module pydicom.filewriter)": [[191, "pydicom.filewriter.write_DT", false]], "write_file_meta_info() (in module pydicom.filewriter)": [[200, "pydicom.filewriter.write_file_meta_info", false]], "write_number_string() (in module pydicom.filewriter)": [[201, "pydicom.filewriter.write_number_string", false]], "write_numbers() (in module pydicom.filewriter)": [[202, "pydicom.filewriter.write_numbers", false]], "write_obvalue() (in module pydicom.filewriter)": [[192, "pydicom.filewriter.write_OBvalue", false]], "write_owvalue() (in module pydicom.filewriter)": [[193, "pydicom.filewriter.write_OWvalue", false]], "write_pn() (in module pydicom.filewriter)": [[194, "pydicom.filewriter.write_PN", false]], "write_sequence() (in module pydicom.filewriter)": [[203, "pydicom.filewriter.write_sequence", false]], "write_sequence_item() (in module pydicom.filewriter)": [[204, "pydicom.filewriter.write_sequence_item", false]], "write_string() (in module pydicom.filewriter)": [[205, "pydicom.filewriter.write_string", false]], "write_tag() (pydicom.filebase.dicombytesio method)": [[160, "pydicom.filebase.DicomBytesIO.write_tag", false]], "write_tag() (pydicom.filebase.dicomfilelike method)": [[162, "pydicom.filebase.DicomFileLike.write_tag", false]], "write_tag() (pydicom.filebase.dicomio method)": [[163, "pydicom.filebase.DicomIO.write_tag", false]], "write_text() (in module pydicom.filewriter)": [[206, "pydicom.filewriter.write_text", false]], "write_tm() (in module pydicom.filewriter)": [[195, "pydicom.filewriter.write_TM", false]], "write_ui() (in module pydicom.filewriter)": [[196, "pydicom.filewriter.write_UI", false]], "write_ul() (pydicom.filebase.dicombytesio method)": [[160, "pydicom.filebase.DicomBytesIO.write_UL", false]], "write_ul() (pydicom.filebase.dicomfilelike method)": [[162, "pydicom.filebase.DicomFileLike.write_UL", false]], "write_ul() (pydicom.filebase.dicomio method)": [[163, "pydicom.filebase.DicomIO.write_UL", false]], "write_un() (in module pydicom.filewriter)": [[197, "pydicom.filewriter.write_UN", false]], "write_us() (pydicom.filebase.dicombytesio method)": [[160, "pydicom.filebase.DicomBytesIO.write_US", false]], "write_us() (pydicom.filebase.dicomfilelike method)": [[162, "pydicom.filebase.DicomFileLike.write_US", false]], "write_us() (pydicom.filebase.dicomio method)": [[163, "pydicom.filebase.DicomIO.write_US", false]], "writing_validation_mode (pydicom.config.settings property)": [[57, "pydicom.config.Settings.writing_validation_mode", false]], "xadefinedprocedureprotocolstorage (in module pydicom.uid)": [[541, "pydicom.uid.XADefinedProcedureProtocolStorage", false]], "xaperformedprocedureprotocolstorage (in module pydicom.uid)": [[542, "pydicom.uid.XAPerformedProcedureProtocolStorage", false]], "xaxrfgrayscalesoftcopypresentationstatestorage (in module pydicom.uid)": [[543, "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", false]], "xray3dangiographicimagestorage (in module pydicom.uid)": [[544, "pydicom.uid.XRay3DAngiographicImageStorage", false]], "xray3dcraniofacialimagestorage (in module pydicom.uid)": [[545, "pydicom.uid.XRay3DCraniofacialImageStorage", false]], "xrayangiographicimagestorage (in module pydicom.uid)": [[546, "pydicom.uid.XRayAngiographicImageStorage", false]], "xrayradiationdosesrstorage (in module pydicom.uid)": [[547, "pydicom.uid.XRayRadiationDoseSRStorage", false]], "xrayradiofluoroscopicimagestorage (in module pydicom.uid)": [[548, "pydicom.uid.XRayRadiofluoroscopicImageStorage", false]], "zfill() (pydicom.uid.uid method)": [[523, "pydicom.uid.UID.zfill", false]], "zfill() (pydicom.valuerep.vr method)": [[560, "pydicom.valuerep.VR.zfill", false]]}, "objects": {"": [[588, 0, 0, "-", "pydicom"]], "pydicom": [[68, 0, 0, "-", "encaps"], [70, 0, 0, "-", "examples"], [587, 0, 0, "-", "hooks"], [590, 0, 0, "-", "overlays"], [586, 0, 0, "-", "pixel_data_handlers"], [591, 0, 0, "-", "pixels"], [596, 0, 0, "-", "sr"], [597, 0, 0, "-", "uid"], [598, 0, 0, "-", "waveforms"]], "pydicom.charset": [[77, 1, 1, "", "convert_encodings"], [78, 1, 1, "", "decode_bytes"], [79, 1, 1, "", "decode_element"], [80, 1, 1, "", "encode_string"]], "pydicom.config": [[81, 2, 1, "", "APPLY_J2K_CORRECTIONS"], [82, 1, 1, "", "DS_decimal"], [83, 1, 1, "", "DS_numpy"], [84, 2, 1, "", "IGNORE"], [85, 2, 1, "", "INVALID_KEYWORD_BEHAVIOR"], [86, 2, 1, "", "INVALID_KEY_BEHAVIOR"], [87, 2, 1, "", "RAISE"], [57, 3, 1, "", "Settings"], [88, 2, 1, "", "WARN"], [89, 2, 1, "", "allow_DS_float"], [90, 2, 1, "", "assume_implicit_vr_switch"], [91, 2, 1, "", "convert_wrong_length_to_UN"], [92, 2, 1, "", "data_element_callback"], [93, 2, 1, "", "data_element_callback_kwargs"], [94, 2, 1, "", "datetime_conversion"], [95, 1, 1, "", "debug"], [96, 2, 1, "", "enforce_valid_values"], [97, 1, 1, "", "future_behavior"], [98, 2, 1, "", "pixel_data_handlers"], [99, 1, 1, "", "reset_data_element_callback"], [100, 2, 1, "", "settings"], [101, 2, 1, "", "show_file_meta"], [102, 2, 1, "", "use_DS_decimal"], [103, 2, 1, "", "use_DS_numpy"], [104, 2, 1, "", "use_IS_numpy"]], "pydicom.config.Settings": [[57, 4, 1, "", "buffered_read_size"], [57, 4, 1, "", "infer_sq_for_un_vr"], [57, 4, 1, "", "reading_validation_mode"], [57, 4, 1, "", "writing_validation_mode"]], "pydicom.data": [[105, 1, 1, "", "get_charset_files"], [106, 1, 1, "", "get_palette_files"], [107, 1, 1, "", "get_testdata_file"], [108, 1, 1, "", "get_testdata_files"]], "pydicom.datadict": [[109, 1, 1, "", "add_dict_entries"], [110, 1, 1, "", "add_dict_entry"], [111, 1, 1, "", "add_private_dict_entries"], [112, 1, 1, "", "add_private_dict_entry"], [113, 1, 1, "", "dictionary_VM"], [114, 1, 1, "", "dictionary_VR"], [115, 1, 1, "", "dictionary_description"], [116, 1, 1, "", "dictionary_has_tag"], [117, 1, 1, "", "dictionary_is_retired"], [118, 1, 1, "", "dictionary_keyword"], [119, 1, 1, "", "get_entry"], [120, 1, 1, "", "get_private_entry"], [121, 1, 1, "", "keyword_for_tag"], [122, 1, 1, "", "mask_match"], [123, 1, 1, "", "private_dictionary_VM"], [124, 1, 1, "", "private_dictionary_VR"], [125, 1, 1, "", "private_dictionary_description"], [126, 1, 1, "", "repeater_has_keyword"], [127, 1, 1, "", "repeater_has_tag"], [128, 1, 1, "", "tag_for_keyword"]], "pydicom.dataelem": [[129, 3, 1, "", "DataElement"], [130, 1, 1, "", "DataElement_from_raw"], [131, 3, 1, "", "RawDataElement"], [132, 1, 1, "", "convert_raw_data_element"]], "pydicom.dataelem.DataElement": [[129, 4, 1, "", "VM"], [129, 5, 1, "", "VR"], [129, 6, 1, "", "__init__"], [129, 6, 1, "", "clear"], [129, 5, 1, "", "descripWidth"], [129, 4, 1, "", "empty_value"], [129, 6, 1, "", "from_json"], [129, 4, 1, "", "is_buffered"], [129, 4, 1, "", "is_empty"], [129, 4, 1, "", "is_private"], [129, 4, 1, "", "is_retired"], [129, 5, 1, "", "is_undefined_length"], [129, 4, 1, "", "keyword"], [129, 5, 1, "", "maxBytesToDisplay"], [129, 4, 1, "", "name"], [129, 4, 1, "", "repval"], [129, 5, 1, "", "showVR"], [129, 5, 1, "", "tag"], [129, 6, 1, "", "to_json"], [129, 6, 1, "", "to_json_dict"], [129, 6, 1, "", "validate"], [129, 5, 1, "", "validation_mode"], [129, 4, 1, "", "value"]], "pydicom.dataelem.RawDataElement": [[131, 5, 1, "", "VR"], [131, 6, 1, "", "__init__"], [131, 6, 1, "", "count"], [131, 6, 1, "", "index"], [131, 5, 1, "", "is_buffered"], [131, 5, 1, "", "is_implicit_VR"], [131, 5, 1, "", "is_little_endian"], [131, 5, 1, "", "is_raw"], [131, 5, 1, "", "length"], [131, 5, 1, "", "tag"], [131, 5, 1, "", "value"], [131, 5, 1, "", "value_tell"]], "pydicom.dataset": [[133, 3, 1, "", "Dataset"], [134, 3, 1, "", "FileDataset"], [135, 3, 1, "", "FileMetaDataset"], [136, 3, 1, "", "PrivateBlock"], [137, 1, 1, "", "validate_file_meta"]], "pydicom.dataset.Dataset": [[133, 6, 1, "", "__init__"], [133, 6, 1, "", "add"], [133, 6, 1, "", "add_new"], [133, 6, 1, "", "add_new_private"], [133, 6, 1, "", "clear"], [133, 6, 1, "", "compress"], [133, 6, 1, "", "convert_pixel_data"], [133, 6, 1, "", "copy"], [133, 6, 1, "", "data_element"], [133, 6, 1, "", "decode"], [133, 6, 1, "", "decompress"], [133, 5, 1, "", "default_element_format"], [133, 5, 1, "", "default_sequence_element_format"], [133, 6, 1, "", "dir"], [133, 6, 1, "", "elements"], [133, 6, 1, "", "ensure_file_meta"], [133, 6, 1, "", "formatted_lines"], [133, 6, 1, "", "from_json"], [133, 6, 1, "", "get"], [133, 6, 1, "", "get_item"], [133, 6, 1, "", "get_private_item"], [133, 6, 1, "", "group_dataset"], [133, 5, 1, "", "indent_chars"], [133, 4, 1, "", "is_decompressed"], [133, 4, 1, "", "is_implicit_VR"], [133, 4, 1, "", "is_little_endian"], [133, 4, 1, "", "is_original_encoding"], [133, 6, 1, "", "items"], [133, 6, 1, "", "iterall"], [133, 6, 1, "", "keys"], [133, 4, 1, "", "original_character_set"], [133, 4, 1, "", "original_encoding"], [133, 6, 1, "", "overlay_array"], [133, 4, 1, "", "pixel_array"], [133, 6, 1, "", "pixel_array_options"], [133, 6, 1, "", "pop"], [133, 6, 1, "", "popitem"], [133, 6, 1, "", "private_block"], [133, 6, 1, "", "private_creators"], [133, 4, 1, "", "read_encoding"], [133, 4, 1, "", "read_implicit_vr"], [133, 4, 1, "", "read_little_endian"], [133, 6, 1, "", "remove_private_tags"], [133, 6, 1, "", "save_as"], [133, 6, 1, "", "set_original_encoding"], [133, 6, 1, "", "set_pixel_data"], [133, 6, 1, "", "setdefault"], [133, 6, 1, "", "to_json"], [133, 6, 1, "", "to_json_dict"], [133, 6, 1, "", "top"], [133, 6, 1, "", "trait_names"], [133, 6, 1, "", "update"], [133, 6, 1, "", "update_raw_element"], [133, 6, 1, "", "values"], [133, 6, 1, "", "walk"], [133, 6, 1, "", "waveform_array"]], "pydicom.dataset.FileDataset": [[134, 6, 1, "", "__init__"], [134, 6, 1, "", "add"], [134, 6, 1, "", "add_new"], [134, 6, 1, "", "add_new_private"], [134, 5, 1, "", "buffer"], [134, 6, 1, "", "clear"], [134, 6, 1, "", "compress"], [134, 6, 1, "", "convert_pixel_data"], [134, 6, 1, "", "copy"], [134, 6, 1, "", "data_element"], [134, 6, 1, "", "decode"], [134, 6, 1, "", "decompress"], [134, 6, 1, "", "dir"], [134, 6, 1, "", "elements"], [134, 6, 1, "", "ensure_file_meta"], [134, 5, 1, "", "file_meta"], [134, 5, 1, "", "filename"], [134, 5, 1, "", "fileobj_type"], [134, 6, 1, "", "formatted_lines"], [134, 6, 1, "", "from_json"], [134, 6, 1, "", "get"], [134, 6, 1, "", "get_item"], [134, 6, 1, "", "get_private_item"], [134, 6, 1, "", "group_dataset"], [134, 4, 1, "", "is_decompressed"], [134, 4, 1, "", "is_implicit_VR"], [134, 4, 1, "", "is_little_endian"], [134, 4, 1, "", "is_original_encoding"], [134, 6, 1, "", "items"], [134, 6, 1, "", "iterall"], [134, 6, 1, "", "keys"], [134, 4, 1, "", "original_character_set"], [134, 4, 1, "", "original_encoding"], [134, 6, 1, "", "overlay_array"], [134, 4, 1, "", "pixel_array"], [134, 6, 1, "", "pixel_array_options"], [134, 6, 1, "", "pop"], [134, 6, 1, "", "popitem"], [134, 5, 1, "", "preamble"], [134, 6, 1, "", "private_block"], [134, 6, 1, "", "private_creators"], [134, 4, 1, "", "read_encoding"], [134, 4, 1, "", "read_implicit_vr"], [134, 4, 1, "", "read_little_endian"], [134, 6, 1, "", "remove_private_tags"], [134, 6, 1, "", "save_as"], [134, 6, 1, "", "set_original_encoding"], [134, 6, 1, "", "set_pixel_data"], [134, 6, 1, "", "setdefault"], [134, 5, 1, "", "timestamp"], [134, 6, 1, "", "to_json"], [134, 6, 1, "", "to_json_dict"], [134, 6, 1, "", "top"], [134, 6, 1, "", "trait_names"], [134, 6, 1, "", "update"], [134, 6, 1, "", "update_raw_element"], [134, 6, 1, "", "values"], [134, 6, 1, "", "walk"], [134, 6, 1, "", "waveform_array"]], "pydicom.dataset.FileMetaDataset": [[135, 6, 1, "", "__init__"], [135, 6, 1, "", "add"], [135, 6, 1, "", "add_new"], [135, 6, 1, "", "add_new_private"], [135, 6, 1, "", "clear"], [135, 6, 1, "", "compress"], [135, 6, 1, "", "convert_pixel_data"], [135, 6, 1, "", "copy"], [135, 6, 1, "", "data_element"], [135, 6, 1, "", "decode"], [135, 6, 1, "", "decompress"], [135, 6, 1, "", "dir"], [135, 6, 1, "", "elements"], [135, 6, 1, "", "ensure_file_meta"], [135, 6, 1, "", "formatted_lines"], [135, 6, 1, "", "from_json"], [135, 6, 1, "", "get"], [135, 6, 1, "", "get_item"], [135, 6, 1, "", "get_private_item"], [135, 6, 1, "", "group_dataset"], [135, 4, 1, "", "is_decompressed"], [135, 4, 1, "", "is_implicit_VR"], [135, 4, 1, "", "is_little_endian"], [135, 4, 1, "", "is_original_encoding"], [135, 6, 1, "", "items"], [135, 6, 1, "", "iterall"], [135, 6, 1, "", "keys"], [135, 4, 1, "", "original_character_set"], [135, 4, 1, "", "original_encoding"], [135, 6, 1, "", "overlay_array"], [135, 4, 1, "", "pixel_array"], [135, 6, 1, "", "pixel_array_options"], [135, 6, 1, "", "pop"], [135, 6, 1, "", "popitem"], [135, 6, 1, "", "private_block"], [135, 6, 1, "", "private_creators"], [135, 4, 1, "", "read_encoding"], [135, 4, 1, "", "read_implicit_vr"], [135, 4, 1, "", "read_little_endian"], [135, 6, 1, "", "remove_private_tags"], [135, 6, 1, "", "save_as"], [135, 6, 1, "", "set_original_encoding"], [135, 6, 1, "", "set_pixel_data"], [135, 6, 1, "", "setdefault"], [135, 6, 1, "", "to_json"], [135, 6, 1, "", "to_json_dict"], [135, 6, 1, "", "top"], [135, 6, 1, "", "trait_names"], [135, 6, 1, "", "update"], [135, 6, 1, "", "update_raw_element"], [135, 6, 1, "", "validate"], [135, 6, 1, "", "values"], [135, 6, 1, "", "walk"], [135, 6, 1, "", "waveform_array"]], "pydicom.dataset.PrivateBlock": [[136, 6, 1, "", "__init__"], [136, 6, 1, "", "add_new"], [136, 5, 1, "", "block_start"], [136, 5, 1, "", "dataset"], [136, 6, 1, "", "get_tag"], [136, 5, 1, "", "group"], [136, 5, 1, "", "private_creator"]], "pydicom.encaps": [[68, 3, 1, "", "EncapsulatedBuffer"], [138, 1, 1, "", "decode_data_sequence"], [139, 1, 1, "", "defragment_data"], [140, 1, 1, "", "encapsulate"], [141, 1, 1, "", "encapsulate_buffer"], [142, 1, 1, "", "encapsulate_extended"], [143, 1, 1, "", "encapsulate_extended_buffer"], [144, 1, 1, "", "fragment_frame"], [145, 1, 1, "", "generate_fragmented_frames"], [146, 1, 1, "", "generate_fragments"], [147, 1, 1, "", "generate_frames"], [148, 1, 1, "", "generate_pixel_data"], [149, 1, 1, "", "generate_pixel_data_fragment"], [150, 1, 1, "", "generate_pixel_data_frame"], [151, 1, 1, "", "get_frame"], [152, 1, 1, "", "get_frame_offsets"], [153, 1, 1, "", "itemize_fragment"], [154, 1, 1, "", "itemize_frame"], [155, 1, 1, "", "parse_basic_offsets"], [156, 1, 1, "", "parse_fragments"], [157, 1, 1, "", "read_item"]], "pydicom.encaps.EncapsulatedBuffer": [[68, 4, 1, "", "basic_offset_table"], [68, 4, 1, "", "closed"], [68, 4, 1, "", "encapsulated_length"], [68, 4, 1, "", "extended_lengths"], [68, 4, 1, "", "extended_offsets"], [68, 4, 1, "", "lengths"], [68, 4, 1, "", "offsets"], [68, 6, 1, "", "read"], [68, 6, 1, "", "readable"], [68, 6, 1, "", "seek"], [68, 6, 1, "", "seekable"], [68, 6, 1, "", "tell"]], "pydicom.errors": [[158, 7, 1, "", "InvalidDicomError"]], "pydicom.errors.InvalidDicomError": [[158, 6, 1, "", "with_traceback"]], "pydicom.examples": [[159, 1, 1, "", "get_path"]], "pydicom.filebase": [[160, 3, 1, "", "DicomBytesIO"], [161, 1, 1, "", "DicomFile"], [162, 3, 1, "", "DicomFileLike"], [163, 3, 1, "", "DicomIO"]], "pydicom.filebase.DicomBytesIO": [[160, 6, 1, "", "__init__"], [160, 6, 1, "", "close"], [160, 4, 1, "", "is_implicit_VR"], [160, 4, 1, "", "is_little_endian"], [160, 4, 1, "", "name"], [160, 4, 1, "", "parent"], [160, 6, 1, "", "read"], [160, 6, 1, "", "read_UL"], [160, 6, 1, "", "read_US"], [160, 6, 1, "", "read_exact"], [160, 6, 1, "", "read_tag"], [160, 6, 1, "", "seek"], [160, 6, 1, "", "tell"], [160, 6, 1, "", "write"], [160, 6, 1, "", "write_UL"], [160, 6, 1, "", "write_US"], [160, 6, 1, "", "write_tag"]], "pydicom.filebase.DicomFileLike": [[162, 6, 1, "", "__init__"], [162, 6, 1, "", "close"], [162, 4, 1, "", "is_implicit_VR"], [162, 4, 1, "", "is_little_endian"], [162, 4, 1, "", "name"], [162, 4, 1, "", "parent"], [162, 6, 1, "", "read"], [162, 6, 1, "", "read_UL"], [162, 6, 1, "", "read_US"], [162, 6, 1, "", "read_exact"], [162, 6, 1, "", "read_tag"], [162, 6, 1, "", "seek"], [162, 6, 1, "", "tell"], [162, 6, 1, "", "write"], [162, 6, 1, "", "write_UL"], [162, 6, 1, "", "write_US"], [162, 6, 1, "", "write_tag"]], "pydicom.filebase.DicomIO": [[163, 6, 1, "", "__init__"], [163, 6, 1, "", "close"], [163, 4, 1, "", "is_implicit_VR"], [163, 4, 1, "", "is_little_endian"], [163, 4, 1, "", "name"], [163, 4, 1, "", "parent"], [163, 6, 1, "", "read"], [163, 6, 1, "", "read_UL"], [163, 6, 1, "", "read_US"], [163, 6, 1, "", "read_exact"], [163, 6, 1, "", "read_tag"], [163, 6, 1, "", "seek"], [163, 6, 1, "", "tell"], [163, 6, 1, "", "write"], [163, 6, 1, "", "write_UL"], [163, 6, 1, "", "write_US"], [163, 6, 1, "", "write_tag"]], "pydicom.filereader": [[164, 1, 1, "", "data_element_generator"], [165, 1, 1, "", "data_element_offset_to_value"], [166, 1, 1, "", "dcmread"], [167, 1, 1, "", "read_dataset"], [168, 1, 1, "", "read_deferred_data_element"], [169, 1, 1, "", "read_file_meta_info"], [170, 1, 1, "", "read_partial"], [171, 1, 1, "", "read_preamble"], [172, 1, 1, "", "read_sequence"], [173, 1, 1, "", "read_sequence_item"]], "pydicom.fileset": [[174, 2, 1, "", "DIRECTORY_RECORDERS"], [175, 3, 1, "", "FileInstance"], [176, 3, 1, "", "FileSet"], [177, 3, 1, "", "RecordNode"], [178, 1, 1, "", "generate_filename"], [179, 1, 1, "", "is_conformant_file_id"]], "pydicom.fileset.FileInstance": [[175, 4, 1, "", "FileID"], [175, 4, 1, "", "SOPClassUID"], [175, 4, 1, "", "SOPInstanceUID"], [175, 4, 1, "", "TransferSyntaxUID"], [175, 6, 1, "", "__init__"], [175, 4, 1, "", "file_set"], [175, 4, 1, "", "for_addition"], [175, 4, 1, "", "for_moving"], [175, 4, 1, "", "for_removal"], [175, 4, 1, "", "is_private"], [175, 4, 1, "", "is_staged"], [175, 6, 1, "", "load"], [175, 5, 1, "", "node"], [175, 4, 1, "", "path"]], "pydicom.fileset.FileSet": [[176, 4, 1, "", "ID"], [176, 4, 1, "", "UID"], [176, 6, 1, "", "__init__"], [176, 6, 1, "", "add"], [176, 6, 1, "", "add_custom"], [176, 6, 1, "", "clear"], [176, 6, 1, "", "copy"], [176, 4, 1, "", "descriptor_character_set"], [176, 4, 1, "", "descriptor_file_id"], [176, 6, 1, "", "find"], [176, 6, 1, "", "find_values"], [176, 4, 1, "", "is_staged"], [176, 6, 1, "", "load"], [176, 4, 1, "", "path"], [176, 6, 1, "", "remove"], [176, 6, 1, "", "write"]], "pydicom.fileset.RecordNode": [[177, 6, 1, "", "__init__"], [177, 6, 1, "", "add"], [177, 4, 1, "", "ancestors"], [177, 5, 1, "", "children"], [177, 4, 1, "", "component"], [177, 4, 1, "", "depth"], [177, 4, 1, "", "file_set"], [177, 4, 1, "", "has_instance"], [177, 4, 1, "", "index"], [177, 5, 1, "", "instance"], [177, 4, 1, "", "is_root"], [177, 4, 1, "", "key"], [177, 4, 1, "", "next"], [177, 4, 1, "", "parent"], [177, 6, 1, "", "prettify"], [177, 4, 1, "", "previous"], [177, 4, 1, "", "record_type"], [177, 6, 1, "", "remove"], [177, 6, 1, "", "reverse"], [177, 4, 1, "", "root"]], "pydicom.fileutil": [[180, 1, 1, "", "absorb_delimiter_item"], [181, 1, 1, "", "find_bytes"], [182, 1, 1, "", "find_delimiter"], [183, 1, 1, "", "length_of_undefined_length"], [184, 1, 1, "", "read_undefined_length_value"]], "pydicom.filewriter": [[185, 1, 1, "", "correct_ambiguous_vr"], [186, 1, 1, "", "correct_ambiguous_vr_element"], [187, 1, 1, "", "dcmwrite"], [188, 1, 1, "", "multi_string"], [189, 1, 1, "", "write_ATvalue"], [190, 1, 1, "", "write_DA"], [191, 1, 1, "", "write_DT"], [192, 1, 1, "", "write_OBvalue"], [193, 1, 1, "", "write_OWvalue"], [194, 1, 1, "", "write_PN"], [195, 1, 1, "", "write_TM"], [196, 1, 1, "", "write_UI"], [197, 1, 1, "", "write_UN"], [198, 1, 1, "", "write_data_element"], [199, 1, 1, "", "write_dataset"], [200, 1, 1, "", "write_file_meta_info"], [201, 1, 1, "", "write_number_string"], [202, 1, 1, "", "write_numbers"], [203, 1, 1, "", "write_sequence"], [204, 1, 1, "", "write_sequence_item"], [205, 1, 1, "", "write_string"], [206, 1, 1, "", "write_text"]], "pydicom.hooks": [[207, 3, 1, "", "Hooks"], [208, 2, 1, "", "hooks"], [209, 1, 1, "", "raw_element_value"], [210, 1, 1, "", "raw_element_value_fix_separator"], [211, 1, 1, "", "raw_element_value_retry"], [212, 1, 1, "", "raw_element_vr"]], "pydicom.hooks.Hooks": [[207, 6, 1, "", "__init__"], [207, 6, 1, "", "register_callback"], [207, 6, 1, "", "register_kwargs"]], "pydicom.misc": [[213, 1, 1, "", "is_dicom"], [214, 1, 1, "", "size_in_bytes"]], "pydicom.multival": [[215, 3, 1, "", "MultiValue"]], "pydicom.multival.MultiValue": [[215, 6, 1, "", "__init__"], [215, 6, 1, "", "append"], [215, 6, 1, "", "clear"], [215, 6, 1, "", "count"], [215, 6, 1, "", "extend"], [215, 6, 1, "", "index"], [215, 6, 1, "", "insert"], [215, 6, 1, "", "pop"], [215, 6, 1, "", "remove"], [215, 6, 1, "", "reverse"]], "pydicom.overlays": [[216, 0, 0, "-", "numpy_handler"]], "pydicom.overlays.numpy_handler": [[216, 1, 1, "", "get_expected_length"], [216, 1, 1, "", "get_overlay_array"], [216, 1, 1, "", "is_available"], [216, 1, 1, "", "reshape_overlay_array"]], "pydicom.pixel_data_handlers": [[217, 0, 0, "-", "gdcm_handler"], [218, 0, 0, "-", "jpeg_ls_handler"], [219, 0, 0, "-", "numpy_handler"], [220, 0, 0, "-", "pillow_handler"], [221, 0, 0, "-", "pylibjpeg_handler"], [222, 0, 0, "-", "rle_handler"]], "pydicom.pixel_data_handlers.gdcm_handler": [[217, 1, 1, "", "create_data_element"], [217, 1, 1, "", "create_image"], [217, 1, 1, "", "get_pixeldata"], [217, 1, 1, "", "is_available"], [217, 1, 1, "", "needs_to_convert_to_RGB"], [217, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [217, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[218, 1, 1, "", "get_pixeldata"], [218, 1, 1, "", "is_available"], [218, 1, 1, "", "needs_to_convert_to_RGB"], [218, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [218, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.numpy_handler": [[219, 1, 1, "", "get_pixeldata"], [219, 1, 1, "", "is_available"], [219, 1, 1, "", "needs_to_convert_to_RGB"], [219, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [219, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pillow_handler": [[220, 1, 1, "", "get_pixeldata"], [220, 1, 1, "", "is_available"], [220, 1, 1, "", "needs_to_convert_to_RGB"], [220, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [220, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[221, 1, 1, "", "as_array"], [221, 1, 1, "", "generate_frames"], [221, 1, 1, "", "get_pixeldata"], [221, 1, 1, "", "is_available"], [221, 1, 1, "", "needs_to_convert_to_RGB"], [221, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [221, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.rle_handler": [[222, 1, 1, "", "get_pixeldata"], [222, 1, 1, "", "is_available"], [222, 1, 1, "", "needs_to_convert_to_RGB"], [222, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [222, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixels": [[223, 1, 1, "", "apply_color_lut"], [224, 1, 1, "", "apply_icc_profile"], [225, 1, 1, "", "apply_modality_lut"], [226, 1, 1, "", "apply_presentation_lut"], [227, 1, 1, "", "apply_rescale"], [228, 1, 1, "", "apply_voi"], [229, 1, 1, "", "apply_voi_lut"], [230, 1, 1, "", "apply_windowing"], [231, 1, 1, "", "as_pixel_options"], [232, 1, 1, "", "compress"], [233, 1, 1, "", "convert_color_space"], [234, 1, 1, "", "create_icc_transform"], [592, 0, 0, "-", "decoders"], [254, 1, 1, "", "decompress"], [593, 0, 0, "-", "encoders"], [263, 1, 1, "", "get_decoder"], [264, 1, 1, "", "get_encoder"], [265, 1, 1, "", "iter_pixels"], [266, 1, 1, "", "pack_bits"], [267, 1, 1, "", "pixel_array"], [594, 0, 0, "-", "processing"], [278, 1, 1, "", "set_pixel_data"], [279, 1, 1, "", "unpack_bits"], [595, 0, 0, "-", "utils"]], "pydicom.pixels.decoders": [[235, 2, 1, "", "DeflatedExplicitVRLittleEndianDecoder"], [236, 2, 1, "", "DeflatedImageFrameCompressionDecoder"], [237, 2, 1, "", "ExplicitVRBigEndianDecoder"], [238, 2, 1, "", "ExplicitVRLittleEndianDecoder"], [239, 2, 1, "", "HTJ2KDecoder"], [240, 2, 1, "", "HTJ2KLosslessDecoder"], [241, 2, 1, "", "HTJ2KLosslessRPCLDecoder"], [242, 2, 1, "", "ImplicitVRLittleEndianDecoder"], [243, 2, 1, "", "JPEG2000Decoder"], [244, 2, 1, "", "JPEG2000LosslessDecoder"], [245, 2, 1, "", "JPEGBaseline8BitDecoder"], [246, 2, 1, "", "JPEGExtended12BitDecoder"], [247, 2, 1, "", "JPEGLSLosslessDecoder"], [248, 2, 1, "", "JPEGLSNearLosslessDecoder"], [249, 2, 1, "", "JPEGLosslessDecoder"], [250, 2, 1, "", "JPEGLosslessSV1Decoder"], [251, 2, 1, "", "RLELosslessDecoder"]], "pydicom.pixels.decoders.base": [[252, 3, 1, "", "DecodeRunner"], [253, 3, 1, "", "Decoder"]], "pydicom.pixels.decoders.base.DecodeRunner": [[252, 6, 1, "", "__init__"], [252, 4, 1, "", "bits_allocated"], [252, 4, 1, "", "bits_stored"], [252, 4, 1, "", "columns"], [252, 6, 1, "", "decode"], [252, 6, 1, "", "del_option"], [252, 4, 1, "", "extended_offsets"], [252, 6, 1, "", "frame_length"], [252, 6, 1, "", "get_data"], [252, 6, 1, "", "get_option"], [252, 4, 1, "", "is_array"], [252, 4, 1, "", "is_binary"], [252, 4, 1, "", "is_buffer"], [252, 4, 1, "", "is_dataset"], [252, 6, 1, "", "iter_decode"], [252, 4, 1, "", "number_of_frames"], [252, 4, 1, "", "options"], [252, 4, 1, "", "photometric_interpretation"], [252, 4, 1, "", "pixel_dtype"], [252, 4, 1, "", "pixel_keyword"], [252, 6, 1, "", "pixel_properties"], [252, 4, 1, "", "pixel_representation"], [252, 4, 1, "", "planar_configuration"], [252, 6, 1, "", "process"], [252, 6, 1, "", "reshape"], [252, 4, 1, "", "rows"], [252, 4, 1, "", "samples_per_pixel"], [252, 6, 1, "", "set_decoders"], [252, 6, 1, "", "set_option"], [252, 6, 1, "", "set_options"], [252, 6, 1, "", "set_source"], [252, 4, 1, "", "src"], [252, 4, 1, "", "transfer_syntax"], [252, 6, 1, "", "validate"]], "pydicom.pixels.decoders.base.Decoder": [[253, 4, 1, "", "UID"], [253, 6, 1, "", "__init__"], [253, 6, 1, "", "add_plugin"], [253, 6, 1, "", "add_plugins"], [253, 6, 1, "", "as_array"], [253, 6, 1, "", "as_buffer"], [253, 4, 1, "", "available_plugins"], [253, 4, 1, "", "is_available"], [253, 4, 1, "", "is_encapsulated"], [253, 4, 1, "", "is_native"], [253, 6, 1, "", "iter_array"], [253, 6, 1, "", "iter_buffer"], [253, 4, 1, "", "missing_dependencies"], [253, 6, 1, "", "remove_plugin"]], "pydicom.pixels.encoders": [[255, 2, 1, "", "DeflatedImageFrameCompressionEncoder"], [256, 2, 1, "", "JPEG2000Encoder"], [257, 2, 1, "", "JPEG2000LosslessEncoder"], [258, 2, 1, "", "JPEGLSLosslessEncoder"], [259, 2, 1, "", "JPEGLSNearLosslessEncoder"], [260, 2, 1, "", "RLELosslessEncoder"]], "pydicom.pixels.encoders.base": [[261, 3, 1, "", "EncodeRunner"], [262, 3, 1, "", "Encoder"]], "pydicom.pixels.encoders.base.EncodeRunner": [[261, 6, 1, "", "__init__"], [261, 4, 1, "", "bits_allocated"], [261, 4, 1, "", "bits_stored"], [261, 4, 1, "", "columns"], [261, 6, 1, "", "del_option"], [261, 6, 1, "", "encode"], [261, 4, 1, "", "extended_offsets"], [261, 6, 1, "", "frame_length"], [261, 6, 1, "", "get_frame"], [261, 6, 1, "", "get_option"], [261, 4, 1, "", "is_array"], [261, 4, 1, "", "is_binary"], [261, 4, 1, "", "is_buffer"], [261, 4, 1, "", "is_dataset"], [261, 4, 1, "", "number_of_frames"], [261, 4, 1, "", "options"], [261, 4, 1, "", "photometric_interpretation"], [261, 4, 1, "", "pixel_keyword"], [261, 4, 1, "", "pixel_representation"], [261, 4, 1, "", "planar_configuration"], [261, 4, 1, "", "rows"], [261, 4, 1, "", "samples_per_pixel"], [261, 6, 1, "", "set_encoders"], [261, 6, 1, "", "set_option"], [261, 6, 1, "", "set_options"], [261, 6, 1, "", "set_source"], [261, 4, 1, "", "src"], [261, 4, 1, "", "transfer_syntax"], [261, 6, 1, "", "validate"]], "pydicom.pixels.encoders.base.Encoder": [[262, 4, 1, "", "UID"], [262, 6, 1, "", "__init__"], [262, 6, 1, "", "add_plugin"], [262, 6, 1, "", "add_plugins"], [262, 4, 1, "", "available_plugins"], [262, 6, 1, "", "encode"], [262, 4, 1, "", "is_available"], [262, 4, 1, "", "is_encapsulated"], [262, 4, 1, "", "is_native"], [262, 6, 1, "", "iter_encode"], [262, 4, 1, "", "missing_dependencies"], [262, 6, 1, "", "remove_plugin"]], "pydicom.pixels.processing": [[268, 1, 1, "", "apply_color_lut"], [269, 1, 1, "", "apply_icc_profile"], [270, 1, 1, "", "apply_modality_lut"], [271, 1, 1, "", "apply_presentation_lut"], [272, 1, 1, "", "apply_rescale"], [273, 1, 1, "", "apply_voi"], [274, 1, 1, "", "apply_voi_lut"], [275, 1, 1, "", "apply_windowing"], [276, 1, 1, "", "convert_color_space"], [277, 1, 1, "", "create_icc_transform"]], "pydicom.pixels.utils": [[280, 1, 1, "", "as_pixel_options"], [281, 1, 1, "", "compress"], [282, 1, 1, "", "decompress"], [283, 1, 1, "", "expand_ybr422"], [284, 1, 1, "", "get_expected_length"], [285, 1, 1, "", "get_image_pixel_ids"], [286, 1, 1, "", "get_j2k_parameters"], [287, 1, 1, "", "get_nr_frames"], [288, 1, 1, "", "iter_pixels"], [289, 1, 1, "", "pack_bits"], [290, 1, 1, "", "pixel_array"], [291, 1, 1, "", "pixel_dtype"], [292, 1, 1, "", "reshape_pixel_array"], [293, 1, 1, "", "set_pixel_data"], [294, 1, 1, "", "unpack_bits"]], "pydicom.sequence": [[295, 3, 1, "", "Sequence"]], "pydicom.sequence.Sequence": [[295, 6, 1, "", "__init__"], [295, 6, 1, "", "append"], [295, 6, 1, "", "clear"], [295, 6, 1, "", "count"], [295, 6, 1, "", "extend"], [295, 6, 1, "", "index"], [295, 6, 1, "", "insert"], [295, 6, 1, "", "pop"], [295, 6, 1, "", "remove"], [295, 6, 1, "", "reverse"]], "pydicom.sr": [[296, 3, 1, "", "Code"], [297, 3, 1, "", "Collection"], [298, 3, 1, "", "Concepts"]], "pydicom.sr.Code": [[296, 6, 1, "", "__init__"], [296, 6, 1, "", "count"], [296, 6, 1, "", "index"], [296, 5, 1, "", "meaning"], [296, 5, 1, "", "scheme_designator"], [296, 5, 1, "", "scheme_version"], [296, 5, 1, "", "value"]], "pydicom.sr.Collection": [[297, 6, 1, "", "__init__"], [297, 4, 1, "", "concepts"], [297, 6, 1, "", "dir"], [297, 4, 1, "", "is_cid"], [297, 4, 1, "", "name"], [297, 4, 1, "", "scheme_designator"], [297, 6, 1, "", "trait_names"]], "pydicom.sr.Concepts": [[298, 6, 1, "", "CIDs"], [298, 6, 1, "", "__init__"], [298, 4, 1, "", "collections"], [298, 6, 1, "", "schemes"]], "pydicom.tag": [[299, 3, 1, "", "BaseTag"], [300, 1, 1, "", "Tag"], [301, 1, 1, "", "TupleTag"], [302, 1, 1, "", "tag_in_exception"]], "pydicom.tag.BaseTag": [[299, 6, 1, "", "__init__"], [299, 6, 1, "", "as_integer_ratio"], [299, 6, 1, "", "bit_count"], [299, 6, 1, "", "bit_length"], [299, 6, 1, "", "conjugate"], [299, 5, 1, "", "denominator"], [299, 4, 1, "", "elem"], [299, 4, 1, "", "element"], [299, 6, 1, "", "from_bytes"], [299, 4, 1, "", "group"], [299, 5, 1, "", "imag"], [299, 4, 1, "", "is_private"], [299, 4, 1, "", "is_private_creator"], [299, 4, 1, "", "json_key"], [299, 5, 1, "", "numerator"], [299, 4, 1, "", "private_creator"], [299, 5, 1, "", "real"], [299, 6, 1, "", "to_bytes"]], "pydicom.uid": [[303, 2, 1, "", "AcquisitionContextSRStorage"], [304, 2, 1, "", "AdvancedBlendingPresentationStateStorage"], [305, 2, 1, "", "AllTransferSyntaxes"], [306, 2, 1, "", "AmbulatoryECGWaveformStorage"], [307, 2, 1, "", "ArterialPulseWaveformStorage"], [308, 2, 1, "", "AutorefractionMeasurementsStorage"], [309, 2, 1, "", "BasicStructuredDisplayStorage"], [310, 2, 1, "", "BasicTextSRStorage"], [311, 2, 1, "", "BasicVoiceAudioWaveformStorage"], [312, 2, 1, "", "BlendingSoftcopyPresentationStateStorage"], [313, 2, 1, "", "BodyPositionWaveformStorage"], [314, 2, 1, "", "BreastProjectionXRayImageStorageForPresentation"], [315, 2, 1, "", "BreastProjectionXRayImageStorageForProcessing"], [316, 2, 1, "", "BreastTomosynthesisImageStorage"], [317, 2, 1, "", "CArmPhotonElectronRadiationRecordStorage"], [318, 2, 1, "", "CArmPhotonElectronRadiationStorage"], [319, 2, 1, "", "CTDefinedProcedureProtocolStorage"], [320, 2, 1, "", "CTImageStorage"], [321, 2, 1, "", "CTPerformedProcedureProtocolStorage"], [322, 2, 1, "", "CardiacElectrophysiologyWaveformStorage"], [323, 2, 1, "", "ChestCADSRStorage"], [324, 2, 1, "", "ColonCADSRStorage"], [325, 2, 1, "", "ColorPaletteStorage"], [326, 2, 1, "", "ColorSoftcopyPresentationStateStorage"], [327, 2, 1, "", "CompositingPlanarMPRVolumetricPresentationStateStorage"], [328, 2, 1, "", "Comprehensive3DSRStorage"], [329, 2, 1, "", "ComprehensiveSRStorage"], [330, 2, 1, "", "ComputedRadiographyImageStorage"], [331, 2, 1, "", "ConfocalMicroscopyImageStorage"], [332, 2, 1, "", "ConfocalMicroscopyTiledPyramidalImageStorage"], [333, 2, 1, "", "ContentAssessmentResultsStorage"], [334, 2, 1, "", "CornealTopographyMapStorage"], [335, 2, 1, "", "DICOS2DAITStorage"], [336, 2, 1, "", "DICOS3DAITStorage"], [337, 2, 1, "", "DICOSCTImageStorage"], [338, 2, 1, "", "DICOSDigitalXRayImageStorageForPresentation"], [339, 2, 1, "", "DICOSDigitalXRayImageStorageForProcessing"], [340, 2, 1, "", "DICOSQuadrupoleResonanceStorage"], [341, 2, 1, "", "DICOSThreatDetectionReportStorage"], [342, 2, 1, "", "DeflatedExplicitVRLittleEndian"], [343, 2, 1, "", "DeflatedImageFrameCompression"], [344, 2, 1, "", "DeformableSpatialRegistrationStorage"], [345, 2, 1, "", "DermoscopicPhotographyImageStorage"], [346, 2, 1, "", "DigitalIntraOralXRayImageStorageForPresentation"], [347, 2, 1, "", "DigitalIntraOralXRayImageStorageForProcessing"], [348, 2, 1, "", "DigitalMammographyXRayImageStorageForPresentation"], [349, 2, 1, "", "DigitalMammographyXRayImageStorageForProcessing"], [350, 2, 1, "", "DigitalXRayImageStorageForPresentation"], [351, 2, 1, "", "DigitalXRayImageStorageForProcessing"], [352, 2, 1, "", "EddyCurrentImageStorage"], [353, 2, 1, "", "EddyCurrentMultiFrameImageStorage"], [354, 2, 1, "", "ElectromyogramWaveformStorage"], [355, 2, 1, "", "ElectrooculogramWaveformStorage"], [356, 2, 1, "", "EncapsulatedCDAStorage"], [357, 2, 1, "", "EncapsulatedMTLStorage"], [358, 2, 1, "", "EncapsulatedOBJStorage"], [359, 2, 1, "", "EncapsulatedPDFStorage"], [360, 2, 1, "", "EncapsulatedSTLStorage"], [361, 2, 1, "", "EnhancedCTImageStorage"], [362, 2, 1, "", "EnhancedContinuousRTImageStorage"], [363, 2, 1, "", "EnhancedMRColorImageStorage"], [364, 2, 1, "", "EnhancedMRImageStorage"], [365, 2, 1, "", "EnhancedPETImageStorage"], [366, 2, 1, "", "EnhancedRTImageStorage"], [367, 2, 1, "", "EnhancedSRStorage"], [368, 2, 1, "", "EnhancedUSVolumeStorage"], [369, 2, 1, "", "EnhancedXAImageStorage"], [370, 2, 1, "", "EnhancedXRFImageStorage"], [371, 2, 1, "", "EnhancedXRayRadiationDoseSRStorage"], [372, 2, 1, "", "ExplicitVRBigEndian"], [373, 2, 1, "", "ExplicitVRLittleEndian"], [374, 2, 1, "", "ExtensibleSRStorage"], [375, 2, 1, "", "General32bitECGWaveformStorage"], [376, 2, 1, "", "GeneralAudioWaveformStorage"], [377, 2, 1, "", "GeneralECGWaveformStorage"], [378, 2, 1, "", "GenericImplantTemplateStorage"], [379, 2, 1, "", "GrayscalePlanarMPRVolumetricPresentationStateStorage"], [380, 2, 1, "", "GrayscaleSoftcopyPresentationStateStorage"], [381, 2, 1, "", "HEVCM10P51"], [382, 2, 1, "", "HEVCMP51"], [383, 2, 1, "", "HTJ2K"], [384, 2, 1, "", "HTJ2KLossless"], [385, 2, 1, "", "HTJ2KLosslessRPCL"], [386, 2, 1, "", "HangingProtocolStorage"], [387, 2, 1, "", "HeightMapSegmentationStorage"], [388, 2, 1, "", "HemodynamicWaveformStorage"], [389, 2, 1, "", "ImplantAssemblyTemplateStorage"], [390, 2, 1, "", "ImplantTemplateGroupStorage"], [391, 2, 1, "", "ImplantationPlanSRStorage"], [392, 2, 1, "", "ImplicitVRLittleEndian"], [393, 2, 1, "", "IntraocularLensCalculationsStorage"], [394, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForPresentation"], [395, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForProcessing"], [396, 2, 1, "", "InventoryStorage"], [397, 2, 1, "", "JPEG2000"], [398, 2, 1, "", "JPEG2000Lossless"], [399, 2, 1, "", "JPEG2000MC"], [400, 2, 1, "", "JPEG2000MCLossless"], [401, 2, 1, "", "JPEG2000TransferSyntaxes"], [402, 2, 1, "", "JPEGBaseline8Bit"], [403, 2, 1, "", "JPEGExtended12Bit"], [404, 2, 1, "", "JPEGLSLossless"], [405, 2, 1, "", "JPEGLSNearLossless"], [406, 2, 1, "", "JPEGLSTransferSyntaxes"], [407, 2, 1, "", "JPEGLossless"], [408, 2, 1, "", "JPEGLosslessSV1"], [409, 2, 1, "", "JPEGTransferSyntaxes"], [410, 2, 1, "", "JPEGXL"], [411, 2, 1, "", "JPEGXLJPEGRecompression"], [412, 2, 1, "", "JPEGXLLossless"], [413, 2, 1, "", "JPEGXLTransferSyntaxes"], [414, 2, 1, "", "JPIPHTJ2KReferenced"], [415, 2, 1, "", "JPIPHTJ2KReferencedDeflate"], [416, 2, 1, "", "KeratometryMeasurementsStorage"], [417, 2, 1, "", "KeyObjectSelectionDocumentStorage"], [418, 2, 1, "", "LabelMapSegmentationStorage"], [419, 2, 1, "", "LegacyConvertedEnhancedCTImageStorage"], [420, 2, 1, "", "LegacyConvertedEnhancedMRImageStorage"], [421, 2, 1, "", "LegacyConvertedEnhancedPETImageStorage"], [422, 2, 1, "", "LensometryMeasurementsStorage"], [423, 2, 1, "", "MPEG2MPHL"], [424, 2, 1, "", "MPEG2MPHLF"], [425, 2, 1, "", "MPEG2MPML"], [426, 2, 1, "", "MPEG2MPMLF"], [427, 2, 1, "", "MPEG4HP41"], [428, 2, 1, "", "MPEG4HP41BD"], [429, 2, 1, "", "MPEG4HP41BDF"], [430, 2, 1, "", "MPEG4HP41F"], [431, 2, 1, "", "MPEG4HP422D"], [432, 2, 1, "", "MPEG4HP422DF"], [433, 2, 1, "", "MPEG4HP423D"], [434, 2, 1, "", "MPEG4HP423DF"], [435, 2, 1, "", "MPEG4HP42STEREO"], [436, 2, 1, "", "MPEG4HP42STEREOF"], [437, 2, 1, "", "MPEGTransferSyntaxes"], [438, 2, 1, "", "MRImageStorage"], [439, 2, 1, "", "MRSpectroscopyStorage"], [440, 2, 1, "", "MacularGridThicknessAndVolumeReportStorage"], [441, 2, 1, "", "MammographyCADSRStorage"], [442, 2, 1, "", "MediaStorageDirectoryStorage"], [443, 2, 1, "", "MicroscopyBulkSimpleAnnotationsStorage"], [444, 2, 1, "", "MultiFrameGrayscaleByteSecondaryCaptureImageStorage"], [445, 2, 1, "", "MultiFrameGrayscaleWordSecondaryCaptureImageStorage"], [446, 2, 1, "", "MultiFrameSingleBitSecondaryCaptureImageStorage"], [447, 2, 1, "", "MultiFrameTrueColorSecondaryCaptureImageStorage"], [448, 2, 1, "", "MultichannelRespiratoryWaveformStorage"], [449, 2, 1, "", "MultipleVolumeRenderingVolumetricPresentationStateStorage"], [450, 2, 1, "", "NuclearMedicineImageStorage"], [451, 2, 1, "", "OphthalmicAxialMeasurementsStorage"], [452, 2, 1, "", "OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage"], [453, 2, 1, "", "OphthalmicOpticalCoherenceTomographyEnFaceImageStorage"], [454, 2, 1, "", "OphthalmicPhotography16BitImageStorage"], [455, 2, 1, "", "OphthalmicPhotography8BitImageStorage"], [456, 2, 1, "", "OphthalmicThicknessMapStorage"], [457, 2, 1, "", "OphthalmicTomographyImageStorage"], [458, 2, 1, "", "OphthalmicVisualFieldStaticPerimetryMeasurementsStorage"], [459, 2, 1, "", "PYDICOM_IMPLEMENTATION_UID"], [460, 2, 1, "", "PYDICOM_ROOT_UID"], [461, 2, 1, "", "ParametricMapStorage"], [462, 2, 1, "", "PatientRadiationDoseSRStorage"], [463, 2, 1, "", "PerformedImagingAgentAdministrationSRStorage"], [464, 2, 1, "", "PhotoacousticImageStorage"], [465, 2, 1, "", "PlannedImagingAgentAdministrationSRStorage"], [466, 2, 1, "", "PositronEmissionTomographyImageStorage"], [467, 2, 1, "", "PrivateTransferSyntaxes"], [468, 2, 1, "", "ProcedureLogStorage"], [469, 2, 1, "", "ProtocolApprovalStorage"], [470, 2, 1, "", "PseudoColorSoftcopyPresentationStateStorage"], [471, 2, 1, "", "RE_VALID_UID"], [472, 2, 1, "", "RE_VALID_UID_PREFIX"], [473, 2, 1, "", "RLELossless"], [474, 2, 1, "", "RLETransferSyntaxes"], [475, 2, 1, "", "RTBeamsDeliveryInstructionStorage"], [476, 2, 1, "", "RTBeamsTreatmentRecordStorage"], [477, 2, 1, "", "RTBrachyApplicationSetupDeliveryInstructionStorage"], [478, 2, 1, "", "RTBrachyTreatmentRecordStorage"], [479, 2, 1, "", "RTDoseStorage"], [480, 2, 1, "", "RTImageStorage"], [481, 2, 1, "", "RTIonBeamsTreatmentRecordStorage"], [482, 2, 1, "", "RTIonPlanStorage"], [483, 2, 1, "", "RTPatientPositionAcquisitionInstructionStorage"], [484, 2, 1, "", "RTPhysicianIntentStorage"], [485, 2, 1, "", "RTPlanStorage"], [486, 2, 1, "", "RTRadiationRecordSetStorage"], [487, 2, 1, "", "RTRadiationSalvageRecordStorage"], [488, 2, 1, "", "RTRadiationSetDeliveryInstructionStorage"], [489, 2, 1, "", "RTRadiationSetStorage"], [490, 2, 1, "", "RTSegmentAnnotationStorage"], [491, 2, 1, "", "RTStructureSetStorage"], [492, 2, 1, "", "RTTreatmentPreparationStorage"], [493, 2, 1, "", "RTTreatmentSummaryRecordStorage"], [494, 2, 1, "", "RadiopharmaceuticalRadiationDoseSRStorage"], [495, 2, 1, "", "RawDataStorage"], [496, 2, 1, "", "RealWorldValueMappingStorage"], [497, 2, 1, "", "RespiratoryWaveformStorage"], [498, 2, 1, "", "RoboticArmRadiationStorage"], [499, 2, 1, "", "RoboticRadiationRecordStorage"], [500, 2, 1, "", "RoutineScalpElectroencephalogramWaveformStorage"], [501, 2, 1, "", "SMPTEST211020UncompressedInterlacedActiveVideo"], [502, 2, 1, "", "SMPTEST211020UncompressedProgressiveActiveVideo"], [503, 2, 1, "", "SMPTEST211030PCMDigitalAudio"], [504, 2, 1, "", "SecondaryCaptureImageStorage"], [505, 2, 1, "", "SegmentationStorage"], [506, 2, 1, "", "SegmentedVolumeRenderingVolumetricPresentationStateStorage"], [507, 2, 1, "", "SimplifiedAdultEchoSRStorage"], [508, 2, 1, "", "SleepElectroencephalogramWaveformStorage"], [509, 2, 1, "", "SpatialFiducialsStorage"], [510, 2, 1, "", "SpatialRegistrationStorage"], [511, 2, 1, "", "SpectaclePrescriptionReportStorage"], [512, 2, 1, "", "StereometricRelationshipStorage"], [513, 2, 1, "", "SubjectiveRefractionMeasurementsStorage"], [514, 2, 1, "", "SurfaceScanMeshStorage"], [515, 2, 1, "", "SurfaceScanPointCloudStorage"], [516, 2, 1, "", "SurfaceSegmentationStorage"], [517, 2, 1, "", "ThermographyImageStorage"], [518, 2, 1, "", "ThermographyMultiFrameImageStorage"], [519, 2, 1, "", "TomotherapeuticRadiationRecordStorage"], [520, 2, 1, "", "TomotherapeuticRadiationStorage"], [521, 2, 1, "", "TractographyResultsStorage"], [522, 2, 1, "", "TwelveLeadECGWaveformStorage"], [523, 3, 1, "", "UID"], [524, 2, 1, "", "UltrasoundImageStorage"], [525, 2, 1, "", "UltrasoundMultiFrameImageStorage"], [526, 2, 1, "", "UncompressedTransferSyntaxes"], [527, 2, 1, "", "VLEndoscopicImageStorage"], [528, 2, 1, "", "VLMicroscopicImageStorage"], [529, 2, 1, "", "VLPhotographicImageStorage"], [530, 2, 1, "", "VLSlideCoordinatesMicroscopicImageStorage"], [531, 2, 1, "", "VLWholeSlideMicroscopyImageStorage"], [532, 2, 1, "", "VariableModalityLUTSoftcopyPresentationStateStorage"], [533, 2, 1, "", "VideoEndoscopicImageStorage"], [534, 2, 1, "", "VideoMicroscopicImageStorage"], [535, 2, 1, "", "VideoPhotographicImageStorage"], [536, 2, 1, "", "VisualAcuityMeasurementsStorage"], [537, 2, 1, "", "VolumeRenderingVolumetricPresentationStateStorage"], [538, 2, 1, "", "WaveformAnnotationSRStorage"], [539, 2, 1, "", "WideFieldOphthalmicPhotography3DCoordinatesImageStorage"], [540, 2, 1, "", "WideFieldOphthalmicPhotographyStereographicProjectionImageStorage"], [541, 2, 1, "", "XADefinedProcedureProtocolStorage"], [542, 2, 1, "", "XAPerformedProcedureProtocolStorage"], [543, 2, 1, "", "XAXRFGrayscaleSoftcopyPresentationStateStorage"], [544, 2, 1, "", "XRay3DAngiographicImageStorage"], [545, 2, 1, "", "XRay3DCraniofacialImageStorage"], [546, 2, 1, "", "XRayAngiographicImageStorage"], [547, 2, 1, "", "XRayRadiationDoseSRStorage"], [548, 2, 1, "", "XRayRadiofluoroscopicImageStorage"], [549, 1, 1, "", "generate_uid"], [550, 1, 1, "", "register_transfer_syntax"]], "pydicom.uid.UID": [[523, 6, 1, "", "__init__"], [523, 6, 1, "", "capitalize"], [523, 6, 1, "", "casefold"], [523, 6, 1, "", "center"], [523, 6, 1, "", "count"], [523, 6, 1, "", "encode"], [523, 6, 1, "", "endswith"], [523, 6, 1, "", "expandtabs"], [523, 6, 1, "", "find"], [523, 6, 1, "", "format"], [523, 6, 1, "", "format_map"], [523, 6, 1, "", "index"], [523, 4, 1, "", "info"], [523, 4, 1, "", "is_compressed"], [523, 4, 1, "", "is_deflated"], [523, 4, 1, "", "is_encapsulated"], [523, 4, 1, "", "is_implicit_VR"], [523, 4, 1, "", "is_little_endian"], [523, 4, 1, "", "is_private"], [523, 4, 1, "", "is_retired"], [523, 4, 1, "", "is_transfer_syntax"], [523, 4, 1, "", "is_valid"], [523, 6, 1, "", "isalnum"], [523, 6, 1, "", "isalpha"], [523, 6, 1, "", "isascii"], [523, 6, 1, "", "isdecimal"], [523, 6, 1, "", "isdigit"], [523, 6, 1, "", "isidentifier"], [523, 6, 1, "", "islower"], [523, 6, 1, "", "isnumeric"], [523, 6, 1, "", "isprintable"], [523, 6, 1, "", "isspace"], [523, 6, 1, "", "istitle"], [523, 6, 1, "", "isupper"], [523, 6, 1, "", "join"], [523, 4, 1, "", "keyword"], [523, 6, 1, "", "ljust"], [523, 6, 1, "", "lower"], [523, 6, 1, "", "lstrip"], [523, 6, 1, "", "maketrans"], [523, 4, 1, "", "name"], [523, 6, 1, "", "partition"], [523, 6, 1, "", "removeprefix"], [523, 6, 1, "", "removesuffix"], [523, 6, 1, "", "replace"], [523, 6, 1, "", "rfind"], [523, 6, 1, "", "rindex"], [523, 6, 1, "", "rjust"], [523, 6, 1, "", "rpartition"], [523, 6, 1, "", "rsplit"], [523, 6, 1, "", "rstrip"], [523, 6, 1, "", "set_private_encoding"], [523, 6, 1, "", "split"], [523, 6, 1, "", "splitlines"], [523, 6, 1, "", "startswith"], [523, 6, 1, "", "strip"], [523, 6, 1, "", "swapcase"], [523, 6, 1, "", "title"], [523, 6, 1, "", "translate"], [523, 4, 1, "", "type"], [523, 6, 1, "", "upper"], [523, 6, 1, "", "zfill"]], "pydicom.valuerep": [[551, 3, 1, "", "DA"], [552, 1, 1, "", "DS"], [553, 3, 1, "", "DSdecimal"], [554, 3, 1, "", "DSfloat"], [555, 3, 1, "", "DT"], [556, 3, 1, "", "IS"], [557, 3, 1, "", "ISfloat"], [558, 3, 1, "", "PersonName"], [559, 3, 1, "", "TM"], [560, 3, 1, "", "VR"], [561, 1, 1, "", "format_number_as_ds"], [562, 1, 1, "", "is_valid_ds"]], "pydicom.valuerep.DA": [[551, 6, 1, "", "__init__"], [551, 6, 1, "", "ctime"], [551, 6, 1, "", "fromisocalendar"], [551, 6, 1, "", "fromisoformat"], [551, 6, 1, "", "fromordinal"], [551, 6, 1, "", "fromtimestamp"], [551, 6, 1, "", "isocalendar"], [551, 6, 1, "", "isoformat"], [551, 6, 1, "", "isoweekday"], [551, 6, 1, "", "replace"], [551, 6, 1, "", "strftime"], [551, 6, 1, "", "timetuple"], [551, 6, 1, "", "today"], [551, 6, 1, "", "toordinal"], [551, 6, 1, "", "weekday"]], "pydicom.valuerep.DSdecimal": [[553, 6, 1, "", "__init__"], [553, 6, 1, "", "adjusted"], [553, 6, 1, "", "as_integer_ratio"], [553, 6, 1, "", "as_tuple"], [553, 6, 1, "", "canonical"], [553, 6, 1, "", "compare"], [553, 6, 1, "", "compare_signal"], [553, 6, 1, "", "compare_total"], [553, 6, 1, "", "compare_total_mag"], [553, 6, 1, "", "conjugate"], [553, 6, 1, "", "copy_abs"], [553, 6, 1, "", "copy_negate"], [553, 6, 1, "", "copy_sign"], [553, 6, 1, "", "exp"], [553, 6, 1, "", "fma"], [553, 6, 1, "", "from_float"], [553, 6, 1, "", "is_canonical"], [553, 6, 1, "", "is_finite"], [553, 6, 1, "", "is_infinite"], [553, 6, 1, "", "is_nan"], [553, 6, 1, "", "is_normal"], [553, 6, 1, "", "is_qnan"], [553, 6, 1, "", "is_signed"], [553, 6, 1, "", "is_snan"], [553, 6, 1, "", "is_subnormal"], [553, 6, 1, "", "is_zero"], [553, 6, 1, "", "ln"], [553, 6, 1, "", "log10"], [553, 6, 1, "", "logb"], [553, 6, 1, "", "logical_and"], [553, 6, 1, "", "logical_invert"], [553, 6, 1, "", "logical_or"], [553, 6, 1, "", "logical_xor"], [553, 6, 1, "", "max"], [553, 6, 1, "", "max_mag"], [553, 6, 1, "", "min"], [553, 6, 1, "", "min_mag"], [553, 6, 1, "", "next_minus"], [553, 6, 1, "", "next_plus"], [553, 6, 1, "", "next_toward"], [553, 6, 1, "", "normalize"], [553, 6, 1, "", "number_class"], [553, 6, 1, "", "quantize"], [553, 6, 1, "", "radix"], [553, 6, 1, "", "remainder_near"], [553, 6, 1, "", "rotate"], [553, 6, 1, "", "same_quantum"], [553, 6, 1, "", "scaleb"], [553, 6, 1, "", "shift"], [553, 6, 1, "", "sqrt"], [553, 6, 1, "", "to_eng_string"], [553, 6, 1, "", "to_integral"], [553, 6, 1, "", "to_integral_exact"], [553, 6, 1, "", "to_integral_value"]], "pydicom.valuerep.DSfloat": [[554, 6, 1, "", "__init__"], [554, 6, 1, "", "as_integer_ratio"], [554, 6, 1, "", "conjugate"], [554, 6, 1, "", "fromhex"], [554, 6, 1, "", "hex"], [554, 5, 1, "", "imag"], [554, 6, 1, "", "is_integer"], [554, 5, 1, "", "real"]], "pydicom.valuerep.DT": [[555, 6, 1, "", "__init__"], [555, 6, 1, "", "astimezone"], [555, 6, 1, "", "combine"], [555, 6, 1, "", "ctime"], [555, 6, 1, "", "date"], [555, 6, 1, "", "dst"], [555, 6, 1, "", "fromisocalendar"], [555, 6, 1, "", "fromisoformat"], [555, 6, 1, "", "fromordinal"], [555, 6, 1, "", "fromtimestamp"], [555, 6, 1, "", "isocalendar"], [555, 6, 1, "", "isoformat"], [555, 6, 1, "", "isoweekday"], [555, 6, 1, "", "now"], [555, 6, 1, "", "replace"], [555, 6, 1, "", "strftime"], [555, 6, 1, "", "strptime"], [555, 6, 1, "", "time"], [555, 6, 1, "", "timestamp"], [555, 6, 1, "", "timetuple"], [555, 6, 1, "", "timetz"], [555, 6, 1, "", "today"], [555, 6, 1, "", "toordinal"], [555, 6, 1, "", "tzname"], [555, 6, 1, "", "utcfromtimestamp"], [555, 6, 1, "", "utcnow"], [555, 6, 1, "", "utcoffset"], [555, 6, 1, "", "utctimetuple"], [555, 6, 1, "", "weekday"]], "pydicom.valuerep.IS": [[556, 6, 1, "", "__init__"], [556, 6, 1, "", "as_integer_ratio"], [556, 6, 1, "", "bit_count"], [556, 6, 1, "", "bit_length"], [556, 6, 1, "", "conjugate"], [556, 5, 1, "", "denominator"], [556, 6, 1, "", "from_bytes"], [556, 5, 1, "", "imag"], [556, 5, 1, "", "numerator"], [556, 5, 1, "", "real"], [556, 6, 1, "", "to_bytes"]], "pydicom.valuerep.ISfloat": [[557, 6, 1, "", "__init__"], [557, 6, 1, "", "as_integer_ratio"], [557, 6, 1, "", "conjugate"], [557, 6, 1, "", "fromhex"], [557, 6, 1, "", "hex"], [557, 5, 1, "", "imag"], [557, 6, 1, "", "is_integer"], [557, 5, 1, "", "real"]], "pydicom.valuerep.PersonName": [[558, 6, 1, "", "__init__"], [558, 4, 1, "", "alphabetic"], [558, 4, 1, "", "components"], [558, 6, 1, "", "decode"], [558, 6, 1, "", "encode"], [558, 6, 1, "", "family_comma_given"], [558, 4, 1, "", "family_name"], [558, 6, 1, "", "formatted"], [558, 6, 1, "", "from_named_components"], [558, 6, 1, "", "from_named_components_veterinary"], [558, 4, 1, "", "given_name"], [558, 4, 1, "", "ideographic"], [558, 4, 1, "", "middle_name"], [558, 4, 1, "", "name_prefix"], [558, 4, 1, "", "name_suffix"], [558, 4, 1, "", "phonetic"]], "pydicom.valuerep.TM": [[559, 6, 1, "", "__init__"], [559, 6, 1, "", "dst"], [559, 6, 1, "", "fromisoformat"], [559, 6, 1, "", "isoformat"], [559, 6, 1, "", "replace"], [559, 6, 1, "", "strftime"], [559, 6, 1, "", "tzname"], [559, 6, 1, "", "utcoffset"]], "pydicom.valuerep.VR": [[560, 6, 1, "", "__init__"], [560, 6, 1, "", "capitalize"], [560, 6, 1, "", "casefold"], [560, 6, 1, "", "center"], [560, 6, 1, "", "count"], [560, 6, 1, "", "encode"], [560, 6, 1, "", "endswith"], [560, 6, 1, "", "expandtabs"], [560, 6, 1, "", "find"], [560, 6, 1, "", "format"], [560, 6, 1, "", "format_map"], [560, 6, 1, "", "index"], [560, 6, 1, "", "isalnum"], [560, 6, 1, "", "isalpha"], [560, 6, 1, "", "isascii"], [560, 6, 1, "", "isdecimal"], [560, 6, 1, "", "isdigit"], [560, 6, 1, "", "isidentifier"], [560, 6, 1, "", "islower"], [560, 6, 1, "", "isnumeric"], [560, 6, 1, "", "isprintable"], [560, 6, 1, "", "isspace"], [560, 6, 1, "", "istitle"], [560, 6, 1, "", "isupper"], [560, 6, 1, "", "join"], [560, 6, 1, "", "ljust"], [560, 6, 1, "", "lower"], [560, 6, 1, "", "lstrip"], [560, 6, 1, "", "maketrans"], [560, 6, 1, "", "partition"], [560, 6, 1, "", "removeprefix"], [560, 6, 1, "", "removesuffix"], [560, 6, 1, "", "replace"], [560, 6, 1, "", "rfind"], [560, 6, 1, "", "rindex"], [560, 6, 1, "", "rjust"], [560, 6, 1, "", "rpartition"], [560, 6, 1, "", "rsplit"], [560, 6, 1, "", "rstrip"], [560, 6, 1, "", "split"], [560, 6, 1, "", "splitlines"], [560, 6, 1, "", "startswith"], [560, 6, 1, "", "strip"], [560, 6, 1, "", "swapcase"], [560, 6, 1, "", "title"], [560, 6, 1, "", "translate"], [560, 6, 1, "", "upper"], [560, 6, 1, "", "zfill"]], "pydicom.values": [[563, 1, 1, "", "convert_AE_string"], [564, 1, 1, "", "convert_ATvalue"], [565, 1, 1, "", "convert_DA_string"], [566, 1, 1, "", "convert_DS_string"], [567, 1, 1, "", "convert_DT_string"], [568, 1, 1, "", "convert_IS_string"], [569, 1, 1, "", "convert_OBvalue"], [570, 1, 1, "", "convert_OWvalue"], [571, 1, 1, "", "convert_PN"], [572, 1, 1, "", "convert_SQ"], [573, 1, 1, "", "convert_TM_string"], [574, 1, 1, "", "convert_UI"], [575, 1, 1, "", "convert_UN"], [576, 1, 1, "", "convert_UR_string"], [577, 1, 1, "", "convert_numbers"], [578, 1, 1, "", "convert_single_string"], [579, 1, 1, "", "convert_string"], [580, 1, 1, "", "convert_tag"], [581, 1, 1, "", "convert_text"], [582, 1, 1, "", "convert_value"], [583, 1, 1, "", "multi_string"]], "pydicom.waveforms": [[584, 0, 0, "-", "numpy_handler"]], "pydicom.waveforms.numpy_handler": [[584, 1, 1, "", "generate_multiplex"], [584, 1, 1, "", "is_available"], [584, 1, 1, "", "multiplex_array"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "data", "Python data"], "3": ["py", "class", "Python class"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "method", "Python method"], "7": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:data", "3": "py:class", "4": "py:property", "5": "py:attribute", "6": "py:method", "7": "py:exception"}, "terms": {"": [0, 2, 3, 4, 8, 9, 10, 12, 16, 17, 20, 24, 25, 26, 27, 28, 29, 30, 35, 38, 40, 42, 43, 45, 48, 49, 50, 51, 53, 54, 55, 85, 94, 95, 98, 111, 117, 121, 128, 129, 132, 133, 134, 135, 140, 145, 148, 151, 152, 155, 157, 160, 162, 163, 166, 176, 177, 185, 186, 187, 207, 215, 233, 252, 253, 254, 261, 262, 265, 266, 267, 276, 278, 282, 285, 288, 289, 290, 293, 295, 299, 300, 459, 460, 523, 553, 555, 556, 560, 561, 562, 564, 571, 572, 579, 581, 582, 596, 599, 601, 602, 604, 609, 610, 612, 615, 617, 620, 623, 624, 625, 626, 628, 630, 631, 632, 634, 636], "0": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 30, 34, 35, 37, 38, 39, 40, 43, 44, 45, 48, 50, 51, 52, 57, 68, 82, 83, 84, 92, 93, 99, 101, 103, 104, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 160, 162, 163, 172, 173, 174, 178, 179, 185, 186, 187, 207, 208, 209, 210, 211, 212, 216, 219, 221, 222, 224, 228, 229, 230, 231, 232, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 273, 274, 275, 277, 278, 280, 281, 282, 287, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 459, 460, 471, 472, 523, 549, 551, 553, 554, 555, 556, 557, 566, 568, 572, 580, 584, 585, 586, 588, 616, 622, 625, 626, 628, 630, 631, 632, 634, 636], "00": [5, 13, 19, 21, 152, 622], "000": [5, 21, 553, 622, 636], "0000": [2, 8, 12, 20, 26, 27, 28, 43, 48, 200, 523, 560, 599, 620, 626], "000000": [10, 20, 628], "00000000": 178, "000000000": [2, 8, 20], "00000000000000": [26, 28], "00000001": 178, "00000002": 178, "0000200": [2, 8, 20], "0001": [2, 12, 20, 24, 26, 27, 28, 43, 48, 133, 134, 135, 137, 145, 147, 151, 200, 232, 281, 626], "00010": 178, "0002": [2, 12, 20, 26, 27, 28, 29, 40, 43, 48, 51, 133, 134, 135, 137, 145, 147, 151, 187, 200, 219, 221, 222, 232, 254, 278, 281, 282, 284, 285, 292, 293, 459, 626, 630, 634], "0003": [2, 12, 20, 26, 27, 28, 43, 48, 137, 200, 626], "0004": [2, 10, 20, 26, 27, 28, 29, 40, 51, 133, 134, 135, 174, 176, 219, 221, 232, 233, 276, 278, 281, 283, 284, 285, 293, 599, 612, 628, 634], "0005": [20, 26, 28, 48, 77, 78, 79, 80, 133, 134, 135, 166, 167, 584, 599, 600, 626, 627, 628], "0006": [26, 27, 28, 29, 40, 133, 134, 135, 219, 221, 222, 232, 278, 281, 285, 292, 293], "0008": [2, 12, 20, 26, 27, 28, 29, 40, 43, 48, 51, 77, 78, 79, 80, 133, 134, 135, 145, 147, 148, 150, 151, 166, 167, 219, 221, 222, 223, 232, 254, 268, 278, 281, 282, 284, 285, 292, 293, 592, 599, 600, 612, 626, 627, 628, 634], "00080005": 627, "00080008": 627, "0009": [20, 48, 51, 133, 134, 135, 219, 285, 592, 599, 612, 634], "00091002": 627, "000b": 48, "000d": [2, 20], "000e": [2, 20], "000y": 20, "001": [18, 19, 48, 622], "0010": [2, 12, 16, 17, 20, 26, 27, 28, 29, 40, 43, 48, 50, 51, 54, 68, 98, 133, 134, 135, 137, 148, 149, 150, 166, 200, 216, 219, 220, 221, 222, 232, 254, 278, 281, 282, 284, 285, 292, 293, 584, 585, 592, 593, 599, 608, 620, 625, 626, 628, 630, 634], "0011": [2, 20, 29, 40, 50, 133, 134, 135, 216, 219, 221, 222, 232, 278, 279, 281, 284, 285, 292, 293, 294, 634], "0012": [2, 12, 20, 26, 27, 28, 43, 48, 137, 200, 459, 626], "0013": [2, 12, 20, 26, 27, 28, 43, 48, 137, 200, 626, 628], "0014": [2, 20, 26, 27, 28, 626], "0015": 216, "0016": [2, 20, 26, 27, 28, 43, 48, 200, 626], "0017": 200, "0018": [2, 20, 26, 27, 28, 43, 133, 134, 135, 200, 223, 232, 254, 268, 278, 281, 282, 293], "0019": 20, "0019xx43": [599, 618], "001a": 52, "002": [11, 13, 16, 19, 622], "0020": [2, 12, 17, 20, 26, 27, 28, 43, 626, 628], "0021": [2, 20], "0022": [2, 20, 626], "0023": [2, 12, 20, 26, 27], "0025": 20, "0026": [26, 27], "0027": 20, "0028": [2, 20, 29, 40, 46, 51, 133, 134, 135, 145, 147, 148, 150, 151, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 262, 266, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 281, 283, 284, 285, 289, 291, 292, 293, 294, 599, 612, 614, 626, 634], "0029": [20, 133, 134, 135], "002c": [26, 27], "0030": [2, 17, 20, 43, 634], "0031": [2, 20], "0032": [2, 20], "0033": [12, 20], "0036697": [26, 27, 28], "003669700000": [26, 28], "0037": [2, 20], "003758": 12, "003a": [52, 133, 134, 135, 584, 636], "004": [12, 13, 622], "0040": [2, 20], "0041": 133, "0043": [20, 26, 28, 626], "005": [2, 5, 8, 13, 622], "0050": [2, 20, 26, 27, 43, 50], "0051": [26, 27], "0052": [2, 20], "0060": [2, 20, 26, 27, 43], "007": [14, 17, 19, 622], "0070": [2, 20, 26, 27], "0071": [26, 27, 28], "0078": [26, 27, 28], "007f": [523, 560], "0080": [2, 20, 26, 27, 28], "0081": [2, 20], "0082": [26, 27, 28], "0083": [2, 20], "0084": [2, 20, 26, 27, 28], "0085": [2, 20], "0086": [2, 20, 26, 27, 28], "0088": 20, "0090": [2, 20], "0091": [2, 20], "00a0": [26, 27, 28], "00b0": [24, 26, 27, 28], "00b6": [24, 26, 27, 28], "00f8": 18, "00fe": 18, "010": 19, "0100": [2, 20, 29, 40, 46, 52, 133, 134, 135, 200, 216, 219, 221, 222, 232, 266, 278, 279, 281, 283, 284, 285, 289, 293, 294, 584, 634, 636], "0101": [2, 20, 29, 40, 133, 134, 135, 219, 221, 225, 227, 232, 270, 272, 278, 281, 285, 291, 293, 634], "0102": [2, 20, 40, 133, 134, 135, 200, 216, 278, 293, 634], "0103": [2, 20, 29, 40, 133, 134, 135, 219, 221, 222, 225, 227, 232, 262, 270, 272, 278, 281, 285, 291, 293, 634], "0104": [133, 134, 135], "0106": [2, 20], "0107": [2, 20], "010c": [26, 27], "0111": [26, 27, 28], "0112": [26, 28], "0114": [26, 28], "0115": [26, 27], "011a": [26, 27], "0120": 20, "016600": 20, "0180": [26, 27], "0197b5846bb5": [599, 606], "0200": 636, "0201": [2, 20, 599, 611], "0210": [133, 134, 135, 584, 636], "0211": [133, 134, 135], "025109": [10, 628], "0275401": [26, 27, 28], "02754010000000": [26, 28], "031827": 12, "033": [22, 634], "035797": 20, "03579711914062": 20, "0400": [2, 8, 20], "0411bab7c985": [599, 606], "045357": [10, 628], "05": [20, 625], "0500": 20, "050743": [10, 628], "072730": [20, 26, 28], "072731": [20, 26, 28, 626], "07992553710938": 20, "079926": 20, "079956": 20, "08": [152, 588], "085000": 20, "093": [9, 13, 622], "095000": 20, "0b00011001": 29, "0b01111111": 38, "0b10000000": 38, "0b100101": [299, 556], "0b1101": [299, 556], "0e0": 553, "0x00": [133, 134, 135, 140, 144, 187, 574], "0x0000": 187, "0x00000000": [149, 152], "0x0002": [134, 187, 265, 267, 288, 290, 626], "0x0006": [599, 609], "0x0008": 626, "0x0009": [48, 133, 134, 135], "0x00091001": 48, "0x000b": 48, "0x0010": [43, 133, 134, 135, 300, 626], "0x00100010": [43, 129, 133, 134, 135], "0x00100015": 300, "0x00100020": 133, "0x00100030": 133, "0x00100040": [133, 134, 135], "0x0015": 300, "0x0016": 626, "0x0018": 43, "0x0028": [252, 261, 265, 267, 288, 290, 626, 634], "0x00291026": [133, 134, 135], "0x0030": 133, "0x0041": [133, 134, 135], "0x004100001": 48, "0x00410001": 111, "0x00410002": 111, "0x0043": 626, "0x01": [16, 48, 133], "0x02": [16, 48], "0x03": 16, "0x1": [554, 557], "0x10": [43, 129, 133, 134, 135, 300], "0x1001": 16, "0x100100010": 86, "0x10011001": 16, "0x10011002": 16, "0x10011003": 16, "0x1002": 626, "0x10021001": [109, 110], "0x10021002": [109, 110], "0x1020": 43, "0x104e": 626, "0x1050": 626, "0x1p": [554, 557], "0x3000": 50, "0x300a": 43, "0x50": 300, "0x5000": 17, "0x5c": 210, "0x6000": [50, 216, 626], "0x6002": 626, "0x6004": 626, "0x6010": 216, "0x601e": 626, "0x60ff": 216, "0x7fe0": 634, "0x888800001": 48, "0xb0": 43, "0xb4": 54, "0xc2": 43, "0xff": [133, 134, 135], "0xff00": 17, "0xffd9": 148, "0xffff": [133, 134, 135, 174, 599, 609], "0xffffffff": 129, "0xffffffffl": 129, "1": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 42, 43, 45, 46, 48, 50, 51, 52, 54, 63, 81, 85, 86, 88, 97, 107, 109, 110, 111, 112, 129, 131, 133, 134, 135, 136, 137, 140, 142, 143, 144, 148, 152, 153, 154, 160, 162, 163, 166, 178, 187, 200, 216, 219, 221, 222, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 299, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 553, 554, 555, 556, 557, 558, 560, 584, 588, 600, 603, 606, 614, 617, 620, 624, 625, 626, 627, 628, 630, 631, 632, 633, 635, 636], "10": [11, 20, 23, 26, 28, 40, 50, 52, 152, 178, 200, 265, 288, 299, 442, 477, 484, 506, 553, 554, 556, 557, 599, 606, 610, 620, 626, 628, 634, 636], "100": [10, 20, 24, 26, 28, 37, 48, 52, 305, 425, 426, 437, 553, 626, 627, 628, 636], "1000": [2, 20, 52, 636], "10000": [52, 636], "1000000000000000055511151231257827021181583404541015625": 553, "10008": [8, 9, 12, 24, 26, 42, 45, 46, 51, 133, 134, 135, 148, 219, 222, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 256, 257, 258, 259, 260, 263, 264, 281, 292, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 468, 469, 470, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 599, 609, 610, 612, 614, 615, 620, 624, 626], "1001": [16, 20, 48, 133], "1002": [16, 20, 48, 626], "1003": [16, 20], "1004": [20, 584, 599, 612], "1005": 20, "1006": [20, 584, 599, 612], "1007": 20, "1008": 20, "1009": 20, "100a": 20, "100f": 20, "101": [20, 21, 22, 305, 423, 424, 437, 622], "1010": [2, 20, 52, 636], "1011": 20, "1012": 20, "1013": [20, 26, 28, 599, 612], "1014": [20, 599, 615], "1015": 20, "1016": [20, 599, 612], "1017": 20, "1018": 20, "1019": [20, 51], "101a": 20, "101b": 20, "101c": 20, "101d": 20, "101e": 20, "101f": 20, "102": [305, 427, 430, 437, 599, 605], "1020": [2, 20], "102000": 20, "1021": [20, 599, 620], "1023": 20, "1024": [20, 129, 133, 134, 135, 599, 613, 627, 632, 634], "1025": 20, "1026": [20, 133, 134, 135], "1027": 20, "1028": 20, "1029": [20, 599, 613], "102a": 20, "102b": 20, "102c": 20, "102e": 20, "102f": 20, "103": [305, 428, 429, 437, 599, 605], "1030": [2, 20, 599, 613], "1031": 20, "1034": 20, "1035": 20, "1037": 20, "1038": [599, 614], "1039": [20, 628], "104": [22, 305, 356, 357, 358, 359, 360, 431, 432, 437], "1040": [2, 20], "1041": [2, 20], "1042": [20, 599, 614], "1043": 20, "10431": 20, "1044": 20, "1045": 20, "1046": 20, "1047": [20, 599, 614], "1048": 20, "1049": [20, 599, 614], "104a": 20, "104b": [20, 26, 28], "104c": [20, 26, 28], "104d": [20, 26, 28], "104e": [20, 26, 28, 626], "105": [22, 52, 305, 433, 434, 437], "1050": [2, 20, 229, 230, 274, 275, 626], "1051": [2, 20, 229, 230, 274, 275, 599, 617, 626], "1052": [20, 225, 227, 270, 272], "1053": [20, 225, 227, 270, 272, 599, 614], "1054": 20, "1055": 20, "1057": 20, "1058": 20, "105e": 20, "105f": 20, "106": [52, 305, 435, 436, 437], "1060": [2, 20], "1061": 20, "1062": 20, "1067": [599, 614], "1068": 51, "106a": 20, "106b": 20, "107": [20, 26, 28, 305, 382, 437, 599, 606], "1070": [2, 20], "1071": 20, "1072": 20, "1073": [20, 599, 614], "1074": [20, 554, 557], "1075": [20, 599, 614], "1076": 20, "1078": [599, 614], "1079": 626, "107d": 20, "108": [305, 381, 437, 558], "1082": [599, 614], "1083": 51, "1086": [599, 614], "1090": [2, 20], "1091": 20, "10918": [40, 45, 233, 276, 409, 599, 617], "1092": 20, "1093": [20, 599, 615], "1094": 51, "1097": [599, 614], "1099": 20, "10da": 20, "10db": 20, "10dc": 20, "10dd": 20, "10de": 20, "10e6": 20, "10e7": 20, "10e9": 20, "11": [11, 20, 23, 225, 227, 228, 229, 230, 270, 272, 273, 274, 275, 304, 310, 312, 326, 327, 379, 380, 449, 470, 490, 506, 532, 537, 543, 553, 599, 619, 620, 632, 636], "110": [52, 305, 412, 413, 599, 605], "1100": 20, "1101": [599, 612], "1103": [599, 612, 615], "111": [305, 411, 413, 599, 605], "1110": 20, "111079": 20, "1111": 20, "112": [52, 305, 410, 413], "1120": 20, "1127": [599, 615], "112749": 20, "1129": 51, "112936": 20, "113": [599, 606], "1130": [10, 20], "113008": 20, "1133": [599, 620], "114": [599, 606], "1140": [599, 615], "1141": 10, "1142": 10, "1146": [599, 615], "1147": [599, 617], "1149": [599, 615], "1150": 20, "1151": 20, "1152": 20, "1153": [599, 615], "1155": [599, 615], "1156": [599, 615], "116": [20, 26, 27, 28, 52], "1160": 20, "1161": [599, 615], "117": [599, 602], "1178": [599, 615], "118": 10, "1181": [599, 615], "119": [599, 602], "1190": [20, 599, 615], "1193": [599, 615], "1196533885": 10, "12": [0, 23, 30, 35, 40, 42, 52, 70, 219, 262, 263, 369, 370, 489, 532, 546, 548, 553, 599, 621, 628, 636], "120": [20, 52], "1200": [52, 599, 615, 636], "1200x900": 0, "1201": [223, 268], "1203": [223, 268], "1204": [223, 268], "1210": 20, "121006": 635, "1211": [599, 615], "1215": [599, 615], "122": [599, 602], "1220": 628, "1221": [223, 268], "1223": [223, 268], "1224": [223, 268], "1227": 51, "123": [553, 627], "12322": [20, 26, 28, 48, 626], "1234": [599, 615, 630], "12345": [43, 133], "123456": 12, "1234567": 176, "1234abcd": [20, 626], "1237": [599, 615], "123e": 553, "124": 631, "1240": [599, 615], "1243": [599, 620], "1244": [599, 620], "125": [599, 608, 631], "1251": [599, 616], "1253": [599, 616], "1254": [599, 616], "126": [2, 20, 26, 28, 626, 636], "1262": [599, 617], "1263": [599, 620], "1265": [599, 620], "127": [38, 632], "1273": [599, 620], "1278": [599, 617], "128": [2, 9, 12, 20, 26, 28, 38, 134, 158, 171, 181, 182, 183, 187, 200, 421, 466, 626, 631, 634], "128002": 635, "129": [20, 631], "13": [11, 33, 299, 314, 315, 316, 318, 544, 545, 556, 599, 621], "130": 365, "131": [52, 309], "1311": 626, "1312": [599, 617], "1314": [2, 20], "1318": 51, "1327": [599, 617], "133": [20, 171], "1332": [599, 617], "1336": 51, "1338": [599, 617], "1340": [599, 617], "1341": [599, 617], "1346": 51, "1348": [599, 617], "135803": 20, "1359940846": [10, 628], "1361": [599, 617], "13656": 37, "1369": 51, "137": 52, "1372": [599, 617], "1386": 634, "1388": [599, 620], "14": [20, 46, 148, 249, 250, 394, 395, 520, 599, 614, 621], "1400": [176, 628], "1410": [176, 628], "1412": [599, 617], "1414": [599, 619, 620], "1415": [599, 617], "14159": [554, 557], "14180": 38, "1420": [176, 628], "1428": [599, 617], "143": [599, 608], "1430": [174, 628], "1434": [599, 617], "1436": 626, "1438": [599, 617], "1444": [599, 617], "1449": [599, 617], "14495": [38, 406, 631], "1454": [599, 620], "1457": [599, 617], "1476": 10, "1481": [599, 620], "1485": [599, 620], "1487": [599, 618], "1498": [599, 618], "15": [2, 8, 20, 498, 622, 626, 634, 636], "150": [20, 52], "1500": [176, 599, 618], "150031": [24, 26, 27, 43], "151": [599, 608], "1510": 176, "1511": [176, 599, 618], "1512": 176, "152": 43, "152294": 634, "152326": 634, "152342": [37, 631], "1529": [599, 620], "153557": [24, 26, 28, 43], "15444": [37, 286, 401, 631], "1556": [599, 620], "156": [26, 27, 43], "1565": [599, 618], "157": 43, "1571": [599, 618], "1576": 20, "158": 20, "1581": [599, 618], "1582": 37, "1588": [599, 618], "159": [20, 599, 612], "1593": [599, 618], "1594": [599, 618], "1596": [599, 618], "1599": [599, 618], "16": [2, 8, 20, 26, 28, 30, 33, 35, 37, 38, 39, 40, 42, 46, 57, 129, 133, 134, 135, 136, 219, 221, 222, 233, 276, 291, 486, 561, 562, 584, 599, 612, 620, 621, 631, 632, 634, 636], "1600": [2, 8, 20], "1601": 20, "1605775145": 20, "1606": [599, 618], "1609": [599, 618], "1611": [599, 619], "1617": [599, 618], "1632": [599, 619], "1634": [599, 619], "1638": [599, 619], "164": 43, "1648": [599, 619], "1658": [599, 619], "166": 43, "1661": [599, 619], "1666": [599, 620], "1667": [599, 619], "1670": [599, 619], "167161297070865690102504091919570542144": 549, "1674": [599, 619], "1680": [599, 619], "1683": [599, 619], "1689": [599, 620], "1693": [599, 619], "17": [20, 52, 487], "170": 20, "1702": [599, 619], "1703": 626, "171": 43, "17106": 628, "17136": 628, "17166": 628, "17196": 628, "172": [599, 608], "1728": [599, 619], "173032": [10, 628], "1734": [599, 619], "1738": [599, 619], "1739": [599, 620], "1743": [599, 620], "1747": [599, 619], "175": 43, "1752": [599, 620], "1773": [599, 620], "1774": [599, 620], "178": 20, "1781": [599, 620], "1788": [599, 619], "179": 20, "1792": [599, 619], "18": [129, 133, 134, 135, 519, 599, 608, 627], "180": [20, 43], "1803": [599, 619], "181": 43, "18148": 10, "1816": [599, 620], "18181": 413, "183": 43, "1838265625": [599, 620], "184": 43, "1844": [599, 620], "1848": [599, 620], "185059": [2, 8, 20], "185434": [2, 8, 20], "1858": 628, "186": 43, "1860": 628, "1873": [599, 620], "1874": [599, 620], "187460": 39, "188": [3, 5, 622], "1895": 85, "19": 317, "190": [2, 20, 43], "19000101": 17, "1907": [599, 620], "1909": [599, 620], "1913": [599, 620], "192": [20, 26, 28, 48, 626], "1922": [599, 620], "193": 5, "1937": [599, 620], "1943": [599, 620], "1951": 631, "1957": 631, "196": [10, 13, 622], "1968": [599, 620], "1969": 20, "197": [599, 608], "197968": 20, "1983": [599, 620], "1990": [233, 276], "1994": [599, 620], "19950903": [10, 628], "1997": [599, 620], "19970430": 20, "19999694824219": 20, "199999809265137": 20, "1c": [3, 187, 200, 219, 221, 222, 284, 285, 292, 636], "1c32791bf0": [599, 603], "1ct1": [9, 20, 26, 28, 628], "1d": [98, 216, 219, 220, 221, 222, 252, 266, 289, 292], "1f": 11, "2": [0, 2, 4, 8, 9, 10, 12, 14, 16, 17, 18, 20, 22, 23, 24, 26, 27, 28, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 51, 52, 54, 57, 81, 83, 85, 86, 87, 90, 97, 100, 101, 103, 104, 107, 109, 110, 111, 112, 129, 131, 133, 134, 135, 136, 137, 140, 142, 143, 144, 148, 149, 152, 153, 154, 166, 174, 200, 216, 219, 221, 222, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 275, 276, 277, 279, 281, 286, 288, 289, 290, 292, 294, 296, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 553, 558, 566, 568, 584, 602, 603, 605, 606, 608, 609, 611, 612, 620, 621, 624, 626, 628, 630, 631, 633, 634, 636], "20": [20, 26, 28, 37, 42, 52, 133, 134, 135, 232, 279, 281, 294, 450, 499, 599, 617], "200": [37, 319, 321, 469, 541, 542], "2000": [2, 8, 20, 29, 32, 36, 40, 42, 45, 46, 81, 133, 134, 135, 148, 232, 239, 240, 241, 243, 244, 253, 256, 257, 264, 265, 267, 281, 286, 288, 290, 292, 401, 599, 612, 615, 620, 630, 634], "200000": 20, "20010101": [10, 133, 628], "2002": [224, 234, 269, 277], "20030505": [10, 628], "20030716": [24, 26, 27, 28, 43], "20030903": [24, 26, 27, 43], "20030903150023": [24, 26, 27, 43], "20040119": [9, 20, 26, 28, 626], "20040119072730": [20, 26, 28, 48, 626], "20040826": [2, 8, 20], "20040826185059": [2, 8, 20], "2006": [133, 134, 135, 599, 620], "2008": [22, 558, 599, 620], "2009": [599, 620], "201": [42, 46, 240, 263, 305, 384, 396, 401], "2010": [599, 620], "2011": [599, 604, 605], "2012": [233, 276], "2013": [599, 620], "2017c": [599, 608], "2018": [23, 625], "2018b": [599, 609], "2018c": [599, 610], "2019": 23, "2019e": [599, 612], "202": [42, 46, 241, 263, 305, 385, 401], "2020": 23, "2020d": [599, 615], "2021": [23, 599, 619], "2021b": [599, 617], "2022": 23, "2022a": [599, 618], "2023": 23, "2023b": [599, 619], "2024": [23, 599, 620], "2024c": [599, 620], "2024d": [599, 621], "2025": [588, 599, 620], "20250708": 12, "2025a": 631, "203": [42, 43, 46, 239, 263, 305, 383, 401], "20304870605469": 20, "2035": [599, 620], "204": [305, 414], "2040634155": [9, 20, 26, 28], "20406341552734": 20, "2047": [554, 557, 632], "2048": 632, "205": [305, 415, 599, 612], "2062": [599, 620], "2068": 20, "207": 43, "2073": [599, 620], "2075": [599, 620], "2081": [599, 620], "20x": [39, 45, 133, 134, 135, 232, 281, 599, 617], "21": [20, 26, 28, 52, 488], "21020": 39, "2104": [599, 620], "212": [599, 608], "2128": [599, 621], "2131": [599, 621], "2132": [599, 621], "2134": [599, 621], "2135": [599, 621], "2141": [599, 621], "2147": [599, 621], "2155": [599, 621], "216": 43, "2160": [599, 621], "2171": [599, 621], "2191": 631, "2193": [599, 621], "219482421875": 20, "21b0": 20, "22": [367, 492], "2210": [599, 621], "2213": [599, 621], "2223": [599, 621], "2227": [599, 621], "22288": 33, "22463838056059845879389038257786771680": 549, "2281": 628, "23": [366, 599, 620], "230": 634, "230400": 38, "2338": 628, "235": 43, "236": 624, "239": [24, 26, 27, 28, 43], "23e": 553, "23e2": 553, "24": [20, 37, 42, 362], "240": [2, 8, 20], "240000": [52, 636], "24078": 20, "243": [599, 615], "2452": 626, "249": 634, "25": [29, 52, 483, 549, 554, 557], "253": 22, "255": [38, 632], "256": [599, 609], "256x256": [50, 51], "258": [599, 608], "261": 22, "263": [599, 612], "265": 22, "270": 635, "273": [599, 612], "276": [10, 628], "277": [22, 599, 612], "280": 51, "285": 51, "28726007": 596, "291": [599, 610], "292": [599, 609], "29282": 50, "298": 51, "299316": 20, "2d": [599, 615, 634], "3": [2, 4, 5, 8, 10, 12, 16, 17, 19, 20, 22, 23, 26, 28, 29, 30, 32, 35, 37, 38, 39, 40, 42, 43, 44, 46, 48, 51, 52, 57, 68, 92, 93, 99, 100, 107, 109, 110, 111, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 160, 162, 163, 174, 178, 185, 186, 187, 200, 207, 208, 209, 210, 211, 212, 216, 219, 221, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 288, 290, 292, 293, 294, 296, 297, 298, 299, 305, 306, 316, 322, 341, 344, 346, 347, 355, 360, 363, 416, 442, 445, 464, 469, 470, 491, 503, 512, 517, 523, 525, 530, 549, 553, 554, 556, 557, 560, 585, 586, 588, 602, 603, 605, 606, 607, 608, 609, 610, 614, 615, 616, 619, 624, 625, 626, 627, 628, 632, 633, 634, 636], "30": [24, 26, 27, 28, 52, 53, 461, 625], "300": [13, 51, 133, 134, 135, 232, 281], "3000": [50, 133, 134, 135, 216, 225, 227, 270, 272, 599, 612, 626], "3002": [225, 227, 228, 229, 270, 272, 273, 274, 599, 612], "3006": [599, 614], "300a": [18, 24, 26, 27, 28], "300c": [26, 27, 28], "3010": [228, 229, 273, 274], "302": 51, "304": [51, 631], "31": [140, 599, 621, 632], "310": 22, "3100585938": 20, "3125": [2, 8, 20], "3126": 628, "316": 22, "31906": [10, 628], "32": [35, 37, 40, 133, 134, 135, 136, 142, 152, 219, 222, 291, 553, 584, 599, 609, 617, 620, 632, 636], "320": [20, 51, 631, 632], "3204": 626, "321": 22, "321000e": 553, "324": [22, 554, 557], "327": 22, "32767": [599, 620], "32768": [20, 26, 28, 37, 38, 626], "328": 51, "33": 329, "331": 51, "333": 631, "334": 51, "334412": [37, 631], "338": 20, "339": 51, "34": [328, 475, 477], "346": [22, 599, 608], "35": [129, 133, 134, 135, 178, 374], "350": 20, "353": [599, 608], "355": 51, "363": 22, "3678b1be6aca": [599, 606], "3680043": [459, 460, 549], "37": [52, 299, 556], "371919006": 635, "373": [20, 22], "374": 51, "377": 51, "378": 51, "38": [37, 386], "380": 624, "3816": 20, "39": 325, "3994": 20, "3d": [2, 4, 8, 20, 266, 289, 599, 615, 634], "3ed": 22, "3rd": [223, 225, 227, 228, 229, 267, 268, 270, 272, 273, 274, 290], "4": [2, 8, 9, 10, 12, 16, 20, 21, 23, 24, 26, 28, 32, 33, 35, 37, 38, 39, 40, 42, 43, 45, 46, 48, 51, 54, 131, 133, 134, 135, 140, 144, 148, 149, 152, 153, 154, 155, 182, 183, 187, 200, 225, 227, 228, 229, 230, 232, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 256, 257, 258, 259, 262, 263, 264, 270, 272, 273, 274, 275, 281, 292, 296, 299, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 468, 469, 470, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 554, 557, 580, 605, 610, 611, 614, 615, 617, 620, 624, 626, 628, 635, 636], "40": [20, 37, 52, 468, 599, 617], "400": [20, 51], "4000": [2, 8, 20], "4095": [30, 35, 40, 262], "413": 51, "414": 553, "41421356": 553, "42": [16, 599, 602], "422": 51, "424152": 39, "4294967294": [278, 293], "43": [378, 599, 602], "431": 51, "44": [20, 389], "45": 390, "452": [599, 612], "46": 625, "46076": 37, "46100": 37, "464": [599, 609], "46af": 628, "47": [599, 602], "480": [20, 631, 632], "481": [24, 26, 317, 318, 362, 366, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 498, 499, 519, 520], "484": 50, "489": [599, 609], "494": 86, "498": [51, 459, 460, 549, 599, 609], "4ed698a7bfb": [599, 605], "4mr1": [2, 8, 17, 20], "4x": 42, "5": [8, 9, 10, 12, 13, 16, 20, 22, 23, 24, 26, 29, 32, 33, 37, 38, 39, 40, 42, 43, 45, 46, 51, 52, 57, 129, 131, 133, 134, 135, 136, 140, 144, 147, 148, 149, 150, 151, 152, 154, 155, 204, 216, 222, 228, 229, 230, 232, 233, 251, 260, 263, 264, 266, 273, 274, 275, 276, 279, 281, 289, 292, 294, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 374, 375, 376, 377, 378, 379, 380, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 416, 417, 418, 419, 420, 421, 422, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 468, 469, 470, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 553, 558, 614, 615, 624, 625, 626, 628, 630, 631, 634, 636], "50": [8, 42, 46, 51, 52, 148, 245, 263, 292, 305, 402, 409, 441, 523, 599, 620, 634], "500": [624, 626], "501": [335, 336, 337, 338, 339, 340, 341], "51": [2, 8, 20, 42, 46, 148, 246, 263, 305, 403, 409], "510": 628, "5100": [2, 20], "512": [2, 20, 166, 216, 599, 609], "512x512": [50, 51], "51698a8366f2": 628, "52": [599, 605], "524288": 53, "52780": 38, "531250000000": [24, 26, 27, 28], "53579711914062": 20, "537": [599, 612], "54": [549, 599, 620], "5400": [52, 133, 134, 135, 584, 636], "5457": [2, 8, 20], "55": [52, 599, 602], "566": 51, "57": [42, 46, 148, 249, 263, 292, 305, 407, 409, 599, 610, 615, 620], "58": [599, 602, 632], "581": 626, "584": [599, 610], "59": 417, "5962": [2, 8, 10, 20, 26, 28, 48, 626], "597": [599, 609], "599": [599, 609], "5e": [554, 557], "5x": [46, 133, 134, 135, 232, 281, 599, 617], "6": [2, 8, 10, 20, 23, 26, 28, 32, 37, 40, 42, 46, 48, 51, 57, 79, 129, 131, 133, 134, 135, 144, 219, 233, 276, 292, 299, 340, 368, 379, 448, 464, 478, 497, 511, 521, 524, 531, 539, 551, 555, 556, 558, 600, 605, 606, 608, 615, 616, 619, 620, 625, 626, 636], "60": [52, 599, 606, 617], "600": [2, 8, 20], "6000": 50, "6002": 50, "60060977935791": [20, 26, 28, 626], "601": [233, 276, 352, 353, 517, 518], "601e": 50, "604": 622, "605": [599, 609], "60xx": [50, 216, 279, 294, 599, 612, 626], "6154": 628, "62": 52, "620": [599, 609], "623": [599, 614], "624": [599, 610], "6247": 628, "625": [599, 609], "6278": 628, "628": 51, "62824007": 596, "63": [2, 8, 20, 626, 632], "630": 20, "631": 626, "63580322265625": 20, "64": [2, 8, 20, 32, 35, 37, 40, 51, 219, 231, 280, 291, 549, 584, 599, 602, 632, 636], "640": [599, 609], "6406": [2, 8, 20], "649": [599, 609], "65": [52, 323], "650": [26, 27], "65535": [30, 35, 40, 262, 628], "66": [344, 387, 418, 495, 505, 509, 510, 516, 521], "660": [599, 610], "661468": [9, 20, 634], "663": [599, 610], "666": [599, 611], "667": 549, "67": [496, 547], "671600": 20, "677": [599, 610], "678": [626, 631], "68": [52, 494, 514, 515], "682": [599, 610], "685": [599, 612], "6854": 626, "689": [599, 610], "69": 324, "693": [599, 612], "695": [599, 610], "696": [599, 610], "69999694824219": 20, "699997": 20, "699999809265137": 20, "6b949a5b925b": [599, 606], "7": [10, 20, 23, 24, 26, 27, 29, 37, 40, 42, 43, 51, 131, 136, 140, 154, 176, 200, 204, 219, 233, 276, 292, 305, 327, 345, 354, 355, 418, 444, 445, 446, 447, 451, 453, 475, 493, 500, 501, 502, 503, 504, 508, 541, 551, 555, 606, 610, 619, 620, 625, 628, 636], "70": [42, 46, 148, 250, 263, 292, 305, 391, 408, 409, 599, 614, 615, 620], "700": [10, 599, 610, 628], "700000": 20, "704": [599, 610], "706": 51, "707": [599, 610], "71": 303, "713": [599, 610], "715": [599, 610], "716": [599, 610], "717": [599, 610], "718": 20, "72": [507, 599, 602], "722": [599, 610], "7230010": [10, 628], "726": [599, 610], "728": [599, 610], "729": [599, 610], "73": [462, 599, 602], "730": [599, 611], "7369": 626, "737": [599, 610], "74": 465, "740": [599, 610], "7400": 20, "741": [26, 27], "746": [599, 620], "748": 20, "749": 20, "75": [20, 26, 27, 52, 463], "750": 20, "750000": 20, "750675506": 20, "751": [24, 26, 27, 28], "753": [599, 611], "757": [599, 611], "76": 371, "760": [599, 611], "763": 20, "764": 20, "7654321": 176, "77": [9, 20, 24, 26, 27, 28, 43, 331, 332, 345, 452, 453, 454, 455, 457, 512, 527, 528, 529, 530, 531, 533, 534, 535, 538, 539, 540], "770": 51, "774b7a55db33": [599, 606], "77654033": [10, 628], "777": [24, 26, 27, 43], "7777": [24, 26, 27, 43], "78": [308, 393, 416, 422, 451, 511, 513, 536, 599, 603], "78187": [10, 628], "784578": 20, "785": [599, 611], "788": [599, 611], "789": [599, 611], "79": [440, 599, 603], "791": [599, 611], "791870": 20, "799": [599, 611], "799988": 20, "7fe0": [2, 20, 26, 28, 43, 51, 54, 68, 98, 133, 134, 135, 145, 147, 148, 149, 150, 151, 166, 219, 220, 221, 222, 232, 281, 285, 585, 592, 593, 599, 608, 612, 620, 626, 634], "8": [2, 11, 22, 23, 26, 27, 29, 30, 33, 35, 37, 38, 39, 40, 42, 43, 45, 46, 51, 82, 131, 133, 134, 135, 136, 178, 179, 216, 219, 221, 222, 224, 228, 229, 230, 232, 233, 236, 253, 254, 255, 262, 263, 264, 266, 269, 273, 274, 275, 276, 279, 281, 282, 289, 291, 292, 294, 304, 305, 313, 331, 343, 387, 393, 452, 459, 460, 482, 523, 542, 549, 560, 584, 601, 604, 608, 610, 612, 615, 618, 619, 620, 631, 636], "80": [2, 8, 20, 37, 42, 45, 46, 52, 54, 133, 134, 135, 148, 232, 247, 258, 263, 264, 281, 292, 305, 404, 406, 458, 636], "800": [37, 631], "8000": [2, 8, 20], "804": [599, 611], "81": [42, 45, 46, 52, 133, 134, 135, 148, 232, 248, 259, 263, 264, 281, 292, 305, 405, 406, 456, 599, 603], "810": [599, 611], "815": [599, 611], "819": [599, 611], "8192": [20, 57, 68, 184], "82": [334, 599, 603], "820": [599, 611], "822": [599, 612], "826": [459, 460, 549, 599, 612], "826203": [26, 27], "83": [2, 8, 20], "833": 626, "835": [599, 611], "838": [599, 611], "84": [599, 603], "840": [8, 9, 12, 24, 26, 42, 45, 46, 51, 133, 134, 135, 148, 219, 222, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 256, 257, 258, 259, 260, 263, 264, 281, 292, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 468, 469, 470, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 599, 609, 610, 612, 614, 615, 620, 624, 626], "848": [599, 612], "84af4b240add": [599, 606], "85": 52, "850": [599, 611], "8508": 38, "852": [20, 599, 611], "856": [599, 611], "8601": [551, 555, 559], "862": 51, "862399669": 20, "862399761": 20, "864": [599, 611], "86e6b75b": 628, "87": [20, 38, 631], "87000000000": [24, 26, 27, 28], "87006": 38, "871": [233, 276], "87507166259346337659265156363895084463": 549, "878": [599, 617], "88": [26, 27, 43, 303, 310, 323, 324, 328, 329, 367, 371, 374, 391, 417, 441, 462, 463, 465, 468, 494, 507, 538, 547, 599, 603], "887": [599, 612, 626], "888": [26, 27, 43], "89": 11, "891": [599, 612], "892": [599, 612], "894": [599, 612], "896": [599, 612], "899": [599, 612], "8d": 11, "9": [20, 23, 26, 27, 37, 43, 51, 52, 82, 178, 179, 216, 306, 307, 311, 313, 322, 332, 354, 355, 375, 376, 377, 388, 448, 471, 472, 481, 497, 500, 508, 522, 537, 549, 609, 612, 615, 620, 636], "90": [2, 8, 20, 42, 45, 46, 52, 133, 134, 135, 148, 232, 244, 257, 263, 264, 281, 292, 305, 333, 398, 401, 599, 612], "904": 43, "905": [43, 51], "906": 43, "9063": [2, 8, 20], "907": 51, "909": 43, "91": [2, 8, 20, 42, 45, 46, 133, 134, 135, 148, 232, 243, 256, 263, 264, 281, 292, 305, 397, 401, 443, 599, 604, 612], "910": 43, "911": 43, "912": [20, 599, 612], "914": 43, "915": [599, 612], "916": [43, 599, 602], "917": [599, 612], "92": [148, 305, 400, 401, 599, 609, 610], "921600": [37, 39], "921f9f01b866ep": [554, 557], "922": 43, "9223372036854775807": [131, 296], "923": 43, "92433900": [2, 8, 20], "925": 43, "927": 43, "929": 43, "93": [52, 148, 305, 399, 401, 599, 604, 610], "932": [599, 612], "938": 43, "940": [599, 612], "942": [43, 599, 612], "947": [599, 612], "95": [20, 599, 605, 608], "951": [599, 612], "954": 43, "955": [20, 43], "959": 43, "96": [599, 604], "968": [599, 612], "97": [599, 604], "971": [599, 612, 634], "973283917": 20, "98": [599, 605], "981": [599, 612], "9834": 549, "984": 20, "984375": [554, 557], "98890234": [10, 628], "98892001": 628, "98892003": 628, "99": [26, 27, 43, 46, 219, 235, 263, 305, 342, 526], "994": [599, 612], "999": [26, 27, 43, 599, 612], "9990268": [26, 27], "9999": [26, 27, 43, 625], "999999999999ap": [554, 557], "9b92b336e7d4": [599, 606], "A": [10, 20, 28, 29, 30, 33, 35, 37, 38, 39, 40, 43, 45, 53, 54, 55, 77, 78, 90, 105, 106, 108, 130, 132, 133, 134, 135, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 162, 163, 164, 166, 167, 174, 176, 177, 178, 179, 185, 186, 187, 207, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 268, 270, 271, 272, 273, 274, 275, 277, 280, 281, 282, 285, 286, 288, 290, 291, 292, 298, 523, 549, 550, 553, 558, 560, 571, 578, 581, 582, 596, 599, 609, 617, 620, 624, 626, 628, 631, 632, 634], "AS": [20, 32, 579], "AT": [32, 564, 599, 612, 617, 619], "And": [25, 26, 27, 28, 30, 599, 615, 624, 625, 626, 634, 636], "As": [44, 46, 48, 70, 553, 626, 631, 635], "At": [30, 35, 624, 635], "Be": 46, "But": 626, "By": [24, 26, 51, 174, 176, 557, 599, 603, 626, 632, 634], "For": [0, 17, 24, 26, 27, 29, 30, 33, 35, 37, 38, 39, 40, 43, 44, 48, 50, 51, 53, 54, 121, 129, 133, 134, 135, 140, 148, 149, 152, 174, 176, 207, 216, 231, 232, 233, 252, 253, 254, 261, 262, 265, 266, 267, 276, 280, 281, 282, 288, 289, 290, 292, 553, 558, 599, 605, 615, 620, 624, 625, 626, 628, 630, 631, 632, 634], "IN": [215, 295], "If": [24, 25, 26, 27, 28, 30, 32, 33, 35, 37, 38, 39, 40, 43, 44, 45, 51, 52, 53, 54, 55, 57, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 95, 98, 101, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 133, 134, 135, 136, 137, 140, 145, 146, 147, 148, 149, 151, 152, 155, 156, 160, 162, 163, 164, 166, 167, 168, 171, 175, 176, 177, 178, 184, 185, 186, 187, 199, 200, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 252, 253, 254, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 284, 287, 288, 289, 290, 291, 293, 294, 295, 297, 299, 300, 523, 549, 550, 553, 554, 555, 556, 558, 560, 561, 565, 566, 567, 568, 573, 577, 580, 584, 599, 605, 617, 620, 623, 624, 625, 626, 627, 628, 630, 631, 632, 634, 635, 636], "In": [24, 25, 26, 27, 30, 35, 38, 40, 43, 45, 48, 51, 53, 54, 77, 133, 134, 135, 176, 278, 293, 523, 553, 560, 599, 607, 613, 615, 619, 620, 624, 625, 626, 628, 631, 632, 634], "Into": 624, "It": [17, 26, 27, 30, 35, 43, 44, 48, 51, 53, 55, 133, 134, 135, 149, 176, 187, 253, 599, 605, 606, 624, 625, 626, 627, 628, 630, 634, 636], "Its": 129, "NEAR": [38, 631], "NOT": [216, 252, 261, 284], "Near": [42, 45, 133, 134, 135, 148, 232, 248, 259, 263, 264, 281, 599, 620, 631], "No": [20, 37, 42, 179, 570, 623, 631, 632], "Not": [553, 563, 564, 565, 566, 567, 568, 573, 574, 576, 579], "OF": [32, 187, 599, 614, 620, 632, 634], "ON": 20, "OR": 558, "Of": 10, "On": [20, 40, 184, 558, 627], "One": [16, 29, 48, 50, 53, 54, 109, 110, 111, 133, 134, 135, 223, 233, 252, 253, 261, 267, 268, 276, 290, 624, 625], "Or": [43, 630], "That": [44, 48], "The": [0, 2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 57, 68, 70, 77, 78, 79, 80, 98, 100, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 160, 162, 163, 164, 166, 168, 170, 171, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 199, 200, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 252, 253, 254, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 299, 300, 302, 523, 549, 550, 551, 553, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 596, 599, 602, 609, 610, 615, 620, 621, 624, 625, 626, 627, 630, 631, 632, 634, 635, 636], "Then": [629, 630], "There": [37, 44, 49, 51, 133, 134, 135, 232, 281, 599, 610, 624, 625, 626, 627, 631, 636], "These": [1, 6, 7, 15, 41, 43, 44, 599, 615, 620, 626], "To": [10, 24, 26, 28, 32, 33, 37, 38, 39, 43, 44, 46, 50, 52, 53, 133, 134, 135, 158, 164, 253, 265, 267, 288, 290, 299, 556, 599, 605, 610, 615, 624, 625, 626, 628, 630, 631, 632, 634, 636], "Will": [45, 110, 209], "With": [38, 133, 134, 135, 262, 523, 560, 631], "_": [179, 625], "_1sigmalowervalueofpopul": 635, "__class__": [551, 555], "__concepts_version__": [599, 620], "__contains__": [86, 599, 615], "__dir__": [599, 605], "__doc__": [0, 2, 8, 11, 14, 16, 20, 22], "__eq__": [599, 609, 617], "__getitem__": [133, 134, 135, 523, 560, 626], "__init__": [14, 129, 131, 133, 134, 135, 136, 160, 162, 163, 175, 176, 177, 207, 215, 252, 253, 261, 262, 295, 296, 297, 298, 299, 523, 551, 553, 554, 555, 556, 557, 558, 559, 560], "__iter__": [599, 600, 615, 626], "__main__": [0, 14, 25, 26], "__name__": [0, 14, 25, 26], "__ne__": [599, 609], "__new__": 552, "__next__": [599, 615], "__setattr__": 85, "__str__": [599, 609, 617, 626], "__traceback__": 158, "__write_like_origin": 187, "_blob": 14, "_build": 625, "_check_dataset": 628, "_cid_dict": 297, "_concepts_dict": 297, "_dataset__write_like_origin": [133, 134, 135], "_define_assess": 174, "_define_empti": 174, "_define_encap_doc": 174, "_define_generic_cont": 174, "_define_generic_content_id": 174, "_define_hanging_protocol": 174, "_define_imag": 174, "_define_impl": 174, "_define_implant_assi": 174, "_define_implant_group": 174, "_define_key_object_doc": 174, "_define_palett": 174, "_define_pati": 174, "_define_present": 174, "_define_radiotherapi": 174, "_define_rt_dos": [174, 628], "_define_rt_plan": 174, "_define_rt_structure_set": 174, "_define_rt_treatment_record": 174, "_define_seri": 174, "_define_spectroscopi": 174, "_define_sr_docu": 174, "_define_studi": 174, "_define_surface_scan": 174, "_dicom_dict": 43, "_from_codifi": [24, 26], "_list": 626, "_new": 14, "_pretty_str": [8, 626], "_recordifi": 628, "_storage_sopclass_uid": [599, 615, 620], "_t": 583, "_validate_arrai": 631, "_validate_plugin": 634, "a1": 4, "a2": 4, "a3": 4, "a_large_amount_of_data": 32, "a_large_jpeg2000_fil": 32, "ab": [523, 560, 584], "abc": 558, "abcd1234": [20, 626], "abil": [26, 27, 51, 133, 134, 135, 278, 293, 599, 607, 608, 615, 620, 621], "abl": [32, 46, 48, 599, 614, 620, 627, 628, 636], "about": [43, 44, 51, 54, 95, 279, 294, 626, 628, 631, 634, 636], "abov": [18, 24, 25, 26, 27, 28, 43, 48, 50, 53, 129, 133, 134, 135, 216, 253, 265, 267, 288, 290, 599, 609, 625, 628, 634], "absenc": 149, "absent": [37, 38, 558, 636], "absolut": [34, 38, 68, 105, 106, 107, 108, 133, 134, 135, 156, 160, 162, 163, 175, 176, 224, 232, 234, 269, 277, 281, 299, 553, 556, 599, 620, 631], "absorb_delimiter_item": 71, "abstract": [553, 628], "accept": [24, 26, 32, 44, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 129, 133, 134, 135, 152, 599, 614, 615, 617, 619, 624], "access": [2, 8, 20, 23, 26, 27, 30, 35, 37, 38, 43, 46, 48, 50, 55, 57, 70, 83, 100, 133, 134, 135, 166, 596, 599, 601, 608, 614, 615, 619, 620, 625, 627, 628, 629, 630, 631, 632, 633, 635], "accessionnumb": 625, "accident": [624, 628], "accomplish": 48, "accord": [32, 53, 129, 166, 198, 626, 628], "accordingli": [133, 134, 135], "account": [40, 599, 620], "achiev": [54, 144], "acknowledg": [599, 606], "acm": [16, 48, 111], "acq": 20, "acquisit": [2, 8, 20], "acquisitiondata": 625, "across": [599, 605, 620], "act": 626, "activ": 630, "actual": [10, 20, 25, 26, 29, 30, 35, 38, 40, 43, 50, 129, 133, 134, 135, 176, 187, 216, 219, 222, 253, 254, 262, 265, 267, 282, 288, 290, 296, 624, 628, 631, 632, 634], "ad": [20, 25, 26, 27, 33, 37, 38, 39, 43, 47, 54, 57, 68, 81, 83, 85, 86, 90, 92, 97, 100, 101, 103, 104, 107, 129, 132, 133, 134, 135, 136, 137, 140, 141, 143, 144, 145, 146, 147, 151, 153, 154, 155, 156, 174, 176, 177, 185, 186, 187, 200, 207, 208, 209, 210, 211, 212, 215, 221, 224, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 286, 288, 289, 290, 293, 294, 297, 298, 299, 467, 523, 566, 568, 584, 599, 600, 601, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 619, 620, 621, 623, 624, 627, 632, 635], "adam": 558, "adapt": [599, 610], "adapt_dataset_from_byt": 14, "add": [0, 2, 6, 10, 12, 15, 18, 19, 20, 25, 26, 27, 30, 35, 43, 44, 48, 50, 54, 109, 111, 112, 129, 132, 133, 134, 135, 136, 140, 142, 174, 176, 177, 187, 232, 253, 262, 266, 278, 281, 289, 293, 553, 599, 608, 611, 617, 619, 620, 621, 622, 624, 625, 626, 628, 630, 631, 632, 636], "add_argu": [25, 26], "add_custom": [174, 176, 628], "add_dict_entri": [43, 48, 112, 599, 608, 611], "add_new": [16, 48, 133, 134, 135, 136, 626], "add_new_priv": [48, 133, 134, 135, 599, 620], "add_pars": [25, 26], "add_plugin": [30, 35, 253, 262], "add_private_dict_entri": [16, 43, 48, 599, 611], "add_subpars": [25, 26], "addit": [20, 26, 27, 28, 30, 35, 40, 77, 133, 134, 135, 175, 176, 209, 210, 211, 212, 232, 253, 254, 262, 265, 267, 278, 281, 282, 288, 290, 293, 555, 558, 559, 607, 615, 617, 620, 627, 628, 631, 634], "addition": [278, 293, 558], "adher": 44, "adit": [599, 602], "adjust": 553, "admin": 630, "advanc": [30, 35, 54, 253], "advantag": [20, 599, 606], "ae": [2, 20, 26, 28, 32, 48, 200, 563, 579, 599, 608, 620, 626], "affect": [30, 35, 217, 218, 219, 220, 221, 222, 285, 553, 624, 625], "after": [2, 8, 20, 26, 27, 28, 29, 30, 35, 38, 48, 54, 133, 134, 135, 144, 146, 149, 155, 156, 171, 177, 182, 183, 184, 187, 200, 252, 253, 265, 267, 288, 290, 523, 553, 560, 599, 614, 617, 620, 624, 625, 626, 628, 630], "afterward": [156, 624], "ag": [20, 32], "again": [44, 53, 624, 628], "against": [44, 129, 176, 599, 604, 615], "agent": [2, 8, 20], "aid": [599, 607], "aim": [54, 599, 615], "al": 23, "algorithm": [33, 39, 549, 631], "alia": [131, 296, 599, 615], "alias": [599, 601, 614], "align": [50, 599, 621], "all": [4, 6, 8, 10, 12, 17, 20, 24, 26, 27, 28, 38, 40, 43, 44, 45, 47, 53, 55, 68, 70, 98, 111, 132, 133, 134, 135, 138, 139, 140, 144, 149, 152, 160, 162, 163, 166, 176, 178, 185, 186, 187, 215, 232, 253, 254, 262, 265, 267, 281, 282, 288, 290, 295, 297, 305, 523, 553, 560, 592, 593, 599, 600, 601, 602, 605, 607, 610, 612, 615, 617, 618, 619, 620, 621, 622, 624, 625, 626, 630, 631, 632, 634], "alloc": [2, 8, 20, 29, 37, 38, 39, 40, 42, 46, 54, 133, 134, 135, 219, 222, 232, 252, 253, 254, 261, 265, 266, 267, 278, 279, 281, 282, 283, 288, 289, 290, 291, 293, 294, 599, 619, 620, 621, 632, 634, 636], "allow": [16, 17, 24, 26, 27, 32, 37, 38, 40, 44, 48, 50, 57, 89, 129, 133, 134, 135, 174, 176, 207, 232, 266, 278, 281, 289, 293, 557, 599, 601, 602, 611, 614, 615, 617, 618, 619, 620, 621, 630, 631, 632], "allow_ds_float": [588, 599, 605], "allow_excess_fram": [29, 632], "alltransfersyntax": [599, 615], "almar": [599, 603], "almost": 51, "alon": 77, "along": [23, 176, 254, 282, 631], "alpha": [20, 223, 268, 523, 560, 599, 611, 612, 635], "alphabet": [133, 134, 135, 523, 558, 560, 599, 619], "alphanumer": [176, 178, 599, 620], "alreadi": [26, 28, 33, 37, 38, 39, 41, 45, 51, 54, 77, 110, 133, 134, 135, 137, 149, 177, 181, 187, 200, 215, 232, 266, 278, 281, 289, 293, 552, 599, 607, 620, 626, 628, 634, 636], "already_convert": 129, "also": [3, 17, 26, 27, 28, 29, 30, 32, 35, 38, 40, 43, 48, 51, 53, 54, 79, 119, 133, 134, 135, 171, 200, 232, 253, 254, 262, 265, 267, 281, 282, 288, 290, 299, 523, 553, 556, 558, 560, 599, 600, 601, 602, 603, 606, 607, 610, 611, 615, 620, 624, 625, 626, 627, 628, 630, 631, 634, 635, 636], "alter": 53, "altern": [10, 23, 43, 133, 210, 211, 228, 229, 230, 273, 274, 275, 599, 620, 624, 626, 628, 634], "although": [51, 176, 224, 234, 269, 277, 599, 620, 628, 634], "alwai": [26, 28, 46, 48, 51, 121, 129, 133, 134, 135, 136, 166, 219, 231, 232, 252, 253, 254, 261, 265, 267, 280, 281, 282, 288, 290, 292, 553, 599, 611, 615, 617, 620, 621, 631, 632, 634], "am": 625, "ambigu": [185, 186, 599, 608, 610, 611, 615], "american": 54, "amongst": 177, "amount": [32, 45, 68, 133, 134, 135, 217, 232, 252, 281, 553, 631, 632, 634, 636], "an": [2, 10, 11, 16, 23, 24, 26, 27, 28, 29, 30, 32, 33, 37, 38, 39, 40, 43, 44, 45, 48, 49, 50, 51, 53, 54, 55, 57, 68, 70, 77, 78, 79, 85, 86, 87, 90, 98, 107, 108, 110, 116, 119, 120, 126, 129, 132, 133, 134, 135, 136, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 161, 166, 167, 176, 177, 186, 187, 197, 209, 210, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 252, 253, 254, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 281, 282, 284, 286, 287, 289, 290, 291, 293, 294, 295, 297, 299, 302, 523, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 577, 584, 596, 599, 602, 603, 609, 611, 612, 614, 615, 617, 618, 620, 621, 624, 625, 626, 628, 630, 631, 632, 635, 636], "analog": [48, 133, 134, 135], "analys": [6, 21, 622], "anatom": 20, "ancestor": [176, 177, 185, 186], "angl": [2, 8, 20], "ani": [0, 10, 24, 26, 27, 29, 30, 32, 35, 37, 38, 40, 43, 44, 49, 50, 52, 68, 80, 93, 107, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 129, 132, 133, 134, 135, 137, 140, 142, 144, 158, 160, 161, 162, 163, 168, 176, 177, 187, 200, 207, 209, 210, 211, 212, 215, 216, 229, 230, 231, 232, 252, 253, 254, 261, 262, 265, 266, 267, 274, 275, 280, 281, 282, 286, 288, 289, 290, 297, 299, 300, 523, 551, 553, 554, 555, 556, 557, 558, 559, 560, 572, 576, 582, 583, 599, 601, 602, 611, 617, 620, 624, 625, 628, 630, 631, 632, 634], "annex": [10, 33, 37, 38, 39, 40, 51, 52, 129, 133, 134, 135, 140, 144, 147, 148, 149, 150, 151, 152, 154, 155, 174, 219, 225, 227, 228, 229, 230, 233, 266, 270, 272, 273, 274, 275, 276, 279, 289, 292, 294, 549, 628], "announc": 98, "anonym": [6, 15, 19, 43, 48, 599, 600, 601, 611, 622], "anoth": [44, 233, 276, 599, 615, 626], "answer": [39, 623, 626], "anterior": 20, "anymor": 94, "anyon": [599, 607], "anyth": [32, 48, 50, 51, 266, 289, 631], "anywher": [26, 28, 43, 626], "apertur": 18, "api": [54, 133, 134, 135, 253, 254, 262, 265, 267, 282, 288, 290, 599, 609, 624, 627, 635], "app": 22, "app14": [599, 617], "appear": [158, 628], "append": [4, 11, 18, 20, 43, 144, 215, 295, 549, 626, 636], "appli": [1, 6, 10, 16, 29, 37, 40, 51, 52, 68, 79, 81, 133, 134, 135, 176, 210, 211, 223, 224, 225, 226, 227, 228, 229, 230, 252, 253, 254, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 282, 288, 290, 594, 599, 612, 615, 620, 625, 630, 631, 636], "applic": [2, 20, 26, 27, 28, 32, 44, 45, 48, 200, 626, 631], "apply_color_lut": [51, 588, 599, 612, 620], "apply_icc_profil": [234, 277, 588, 599, 620], "apply_j2k_correct": [588, 599, 620], "apply_j2k_sign_correct": 29, "apply_jls_sign_correct": 29, "apply_modality_lut": [51, 226, 228, 229, 230, 271, 273, 274, 275, 588, 599, 612, 614, 620], "apply_presentation_lut": [588, 599, 620], "apply_rescal": [588, 599, 615, 620, 634], "apply_voi": [229, 230, 274, 275, 588, 599, 615, 620], "apply_voi_lut": [51, 226, 228, 230, 271, 273, 275, 588, 599, 612, 614, 615, 620], "apply_window": [228, 229, 273, 274, 588, 599, 615, 620], "approach": 213, "appropri": [45, 50, 51, 129, 132, 171, 207, 209, 215, 221, 252, 553, 582, 599, 620, 631, 632], "approv": [624, 625], "approx": [599, 602, 606], "approxim": 53, "appveyor": [599, 608], "apr": 625, "ar": [4, 10, 18, 24, 26, 27, 28, 29, 32, 33, 37, 38, 39, 40, 42, 43, 44, 46, 48, 49, 50, 51, 57, 68, 70, 77, 78, 82, 83, 86, 95, 98, 102, 103, 109, 111, 112, 129, 132, 133, 134, 135, 136, 137, 140, 142, 145, 147, 148, 149, 150, 151, 152, 160, 162, 163, 166, 171, 174, 176, 179, 185, 186, 187, 200, 215, 217, 218, 222, 223, 225, 227, 229, 230, 231, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 262, 265, 267, 268, 270, 272, 274, 275, 278, 280, 283, 286, 288, 290, 291, 293, 297, 299, 523, 553, 555, 556, 558, 559, 560, 561, 576, 579, 581, 583, 599, 605, 610, 611, 612, 614, 615, 617, 618, 620, 621, 623, 624, 625, 626, 628, 630, 631, 632, 634, 635, 636], "arang": [3, 636], "archibald": [10, 628], "archiv": 20, "area": 624, "aren": [176, 252, 253, 262, 599, 620, 626, 628, 632], "arg": [25, 26, 133, 134, 135, 158, 160, 161, 162, 163, 300, 523, 551, 555, 558, 559, 560, 599, 603], "arg2": [300, 599, 602], "argpars": [25, 26], "argument": [24, 25, 26, 27, 28, 43, 45, 54, 93, 132, 133, 134, 135, 185, 186, 187, 207, 209, 210, 211, 212, 214, 215, 295, 297, 299, 523, 553, 555, 556, 559, 560, 599, 601, 602, 610, 611, 612, 613, 614, 615, 620, 627, 628, 631, 634], "argv": [0, 4, 14], "arithmet": 553, "around": [43, 599, 620, 624], "arr": [2, 3, 38, 43, 50, 51, 52, 54, 133, 134, 135, 216, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 252, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 281, 287, 288, 289, 290, 292, 293, 631, 632, 634, 636], "arr_downsampl": 2, "arrai": [2, 4, 14, 20, 26, 28, 29, 38, 43, 50, 51, 52, 53, 54, 83, 98, 103, 129, 133, 134, 135, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 252, 253, 261, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 281, 288, 289, 290, 292, 293, 299, 552, 556, 599, 600, 610, 611, 614, 615, 620, 626, 632, 634], "array_equ": 631, "artifact": 625, "as_arrai": [29, 221, 253, 279, 294, 634], "as_buff": [29, 253], "as_float": 291, "as_fram": 252, "as_integer_ratio": [299, 553, 554, 556, 557], "as_pixel_opt": 588, "as_raw": [3, 52, 584, 599, 619, 636], "as_rgb": [29, 133, 134, 135, 254, 282, 631], "as_tupl": 553, "ascii": [32, 179, 205, 210, 523, 560, 599, 611], "ask": [39, 623, 624, 625], "aspect": 4, "assert": [37, 38, 624, 627, 631, 632, 634], "assess": 174, "assi": 174, "assign": [17, 43, 70, 129, 599, 605, 612, 618, 630], "associ": [133, 134, 135, 252, 261], "assum": [4, 25, 26, 38, 45, 51, 90, 149, 523, 560, 599, 608, 628, 631, 634, 636], "assume_implicit_vr_switch": [588, 599, 617], "astimezon": 555, "astyp": [632, 636], "at_top_level": 167, "attach": 176, "attempt": [29, 30, 35, 148, 186, 187, 584, 599, 608, 617, 620, 621, 626], "attr": 54, "attribut": [32, 40, 48, 70, 85, 129, 131, 133, 134, 135, 159, 160, 162, 163, 175, 176, 177, 187, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 282, 296, 297, 298, 299, 523, 551, 553, 554, 555, 556, 557, 558, 559, 560, 596, 599, 600, 610, 615, 618, 619, 620, 621, 626, 628, 630], "attributeerror": [185, 216, 217, 219, 221, 222, 253, 262, 599, 602, 618, 620, 626], "audio": [52, 636], "august": 23, "author": [2, 8, 9, 11, 12, 16, 17, 20, 22], "auto": [20, 133, 134, 135, 297, 555, 559, 599, 600], "auto_exampl": [5, 13, 19, 21], "auto_examples_jupyt": 6, "auto_examples_python": 6, "auto_format": [552, 553, 554, 599, 617], "autocomplet": [133, 134, 135, 297], "automat": [26, 27, 43, 45, 48, 50, 51, 53, 54, 98, 129, 133, 134, 135, 176, 185, 186, 187, 553, 554, 599, 608, 612, 614, 617, 620, 624, 625, 626, 632], "avail": [1, 6, 10, 15, 24, 26, 27, 28, 30, 34, 35, 42, 43, 48, 49, 51, 52, 53, 107, 132, 133, 134, 135, 140, 142, 145, 147, 151, 160, 162, 163, 176, 207, 217, 218, 220, 232, 236, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 262, 265, 267, 279, 281, 282, 286, 288, 290, 294, 298, 558, 566, 568, 596, 599, 601, 602, 606, 608, 609, 610, 612, 615, 628, 630, 631, 634, 635, 636], "available_plugin": [253, 262], "averag": [2, 8, 20], "averagin": 2, "avf": 636, "avg": 20, "avl": 636, "avoid": [32, 44, 104, 167, 184, 552, 599, 611, 612, 615, 628, 631, 634], "avr": 636, "awai": 628, "awar": [30, 32, 35, 53, 628], "ax": 3, "ax1": 636, "ax2": 636, "ax_aspect": 4, "axesimag": 49, "axi": 636, "axial": [1, 5, 6, 20, 26, 28, 48, 599, 611, 622, 626], "azimuth": 20, "b": [2, 8, 12, 16, 20, 22, 26, 27, 28, 38, 40, 43, 48, 50, 51, 129, 133, 134, 135, 160, 162, 163, 187, 210, 234, 277, 549, 553, 558, 624, 625, 626, 632, 634], "b1": 40, "b2": 40, "b6b3658f3b14": [599, 605], "b764": 628, "back": [2, 14, 16, 20, 39, 50, 51, 53, 54, 624, 625, 626, 628], "backend": [29, 133, 134, 135, 599, 620, 621, 631], "backslash": [133, 134, 135, 210, 558, 578, 599, 600, 601, 617], "backup": 176, "backward": [133, 134, 135, 599, 602, 608], "bad": [599, 608, 618], "balanc": 44, "bar": [599, 619], "bari": 635, "base": [6, 21, 23, 33, 37, 38, 39, 40, 71, 82, 133, 134, 135, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 256, 257, 258, 259, 260, 297, 551, 553, 555, 559, 588, 592, 593, 599, 602, 608, 612, 615, 622, 624, 625, 628, 631, 634, 636], "base64": [129, 133, 134, 135, 627], "baselin": [20, 40, 42, 45, 46, 51, 148, 245, 263, 292, 523, 599, 619, 631, 636], "basetag": [32, 43, 61, 86, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 129, 131, 133, 134, 135, 136, 164, 166, 167, 170, 176, 180, 182, 183, 184, 265, 267, 288, 290, 300, 301, 302, 564, 580, 599, 602, 617], "basic": [11, 26, 27, 28, 45, 52, 53, 55, 68, 72, 133, 134, 135, 140, 142, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 232, 281, 599, 612, 620, 628, 629, 631, 634, 636], "basic_offset_t": 68, "bb": 22, "bbh": 20, "beam": [11, 18, 24, 26, 27, 28, 599, 605], "beam0": 18, "beam1": 43, "beamdosespecificationpoint": [24, 26], "beamnam": [11, 18, 43], "beamnumb": [11, 24, 26, 27, 28], "beamsequ": [11, 18, 24, 26, 27, 28, 43, 133, 599, 605], "bec3": 628, "becaus": [10, 24, 26, 38, 39, 40, 43, 50, 51, 53, 54, 70, 158, 176, 624, 625, 626, 631, 632, 634], "becom": [97, 599, 605, 615, 624, 625, 628], "been": [10, 25, 26, 40, 42, 46, 48, 51, 83, 90, 92, 133, 134, 135, 140, 142, 145, 146, 147, 148, 149, 151, 168, 175, 176, 178, 187, 199, 200, 252, 253, 254, 261, 266, 282, 289, 523, 552, 553, 560, 599, 602, 609, 614, 617, 618, 620, 621, 624, 625, 626, 627, 631, 632, 634], "befor": [39, 46, 48, 92, 129, 133, 134, 135, 166, 177, 184, 226, 229, 230, 252, 253, 271, 274, 275, 523, 560, 599, 602, 605, 606, 608, 611, 624, 625, 626, 628, 634, 636], "beforehand": 630, "began": 635, "begin": [43, 101, 140, 155, 171, 299, 523, 556, 560], "behav": [44, 112, 215, 599, 609, 611, 628], "behavior": [43, 44, 57, 85, 86, 97, 133, 134, 135, 232, 254, 281, 282, 599, 606, 610, 614, 615], "being": [38, 40, 104, 113, 114, 115, 117, 118, 121, 123, 124, 125, 128, 133, 134, 135, 149, 160, 162, 163, 222, 262, 599, 600, 610, 617, 618, 620, 621, 628, 630, 631, 632, 634], "belong": [133, 134, 135, 175, 176, 212], "below": [26, 28, 32, 37, 38, 39, 42, 45, 48, 177, 187, 216, 219, 221, 222, 292, 584, 599, 602, 628, 632, 634, 635], "best": [29, 47, 70], "beta": 627, "better": [38, 54, 599, 603, 605, 609, 621], "between": [6, 21, 50, 51, 54, 110, 216, 233, 276, 523, 560, 599, 620, 622, 624, 625, 626, 631], "beyond": 631, "big": [29, 34, 35, 40, 46, 133, 134, 135, 145, 146, 147, 151, 155, 156, 160, 162, 163, 187, 219, 222, 237, 253, 263, 299, 305, 523, 550, 556, 599, 619, 620, 621, 636], "bigger": [53, 599, 614], "bin": [299, 556, 624, 625], "binari": [24, 26, 129, 133, 134, 135, 266, 289, 299, 553, 556, 599, 603, 611, 612, 620], "binaryio": [133, 134, 135, 164, 166, 167, 168, 170, 171, 172, 173, 180, 181, 182, 183, 184, 187, 252, 253, 261, 265, 267, 288, 290, 599, 620], "biopsi": 20, "birth": [2, 8, 17, 20], "bit": [2, 8, 20, 29, 30, 32, 33, 35, 38, 39, 40, 42, 46, 50, 51, 54, 133, 134, 135, 136, 152, 219, 222, 224, 225, 227, 232, 233, 252, 253, 254, 261, 262, 263, 265, 266, 267, 269, 270, 272, 276, 278, 279, 281, 282, 283, 288, 289, 290, 291, 293, 294, 299, 556, 599, 609, 610, 612, 617, 618, 619, 620, 621, 624, 625, 631, 634, 636], "bit_count": [299, 556], "bit_depth": [233, 276], "bit_length": [299, 556], "bits_alloc": [29, 30, 35, 231, 252, 261, 262, 280, 283], "bits_stor": [29, 30, 35, 133, 134, 135, 231, 252, 261, 262, 278, 280, 293], "bitsalloc": [33, 37, 38, 39, 45, 46, 129, 219, 221, 222, 252, 261, 284, 285, 291, 599, 610, 631, 632], "bitsstor": [26, 28, 37, 38, 219, 221, 285, 631, 632], "black": [33, 37, 38, 39, 599, 620], "blank": [16, 17, 110, 215, 552, 599, 601, 626], "blend": 20, "blob": 14, "block": [16, 18, 20, 26, 27, 28, 37, 48, 133, 134, 135, 136, 599, 614, 620, 625], "block1": 18, "block2": 18, "block_ds1": 18, "block_ds2": 18, "block_ds3": 18, "block_start": 136, "blocknam": 18, "blocksequ": 18, "blocktyp": 18, "blue": [33, 37, 38, 39, 40, 599, 614], "bn": 40, "boli": [26, 28], "bolu": [2, 8, 20], "bond": 14, "bone": 20, "bool": [29, 30, 34, 35, 57, 68, 82, 83, 95, 97, 102, 107, 116, 117, 126, 127, 129, 131, 133, 134, 135, 137, 140, 141, 152, 160, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 200, 213, 216, 217, 218, 219, 220, 221, 222, 229, 232, 233, 252, 253, 254, 261, 262, 265, 266, 267, 274, 276, 278, 279, 281, 282, 286, 287, 288, 289, 290, 291, 293, 294, 297, 299, 523, 550, 552, 553, 554, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 579, 580, 584, 599, 621], "boolean": 632, "bot": 152, "both": [29, 38, 44, 77, 82, 83, 98, 152, 176, 229, 274, 553, 599, 601, 608, 611, 614, 620, 627, 631], "bottom": [20, 54, 624, 625], "boundari": [148, 523, 560, 599, 620, 621], "bowti": 20, "box": [23, 54], "brace": [523, 560], "brachi": [26, 27, 28], "bracket": [43, 48, 626], "brain": [10, 628], "branch": [626, 630], "break": [44, 523, 560, 599, 615, 620, 628], "brett": [599, 607], "briefli": [628, 634], "broken": 51, "browser": 625, "bt": [233, 276], "bubbl": [133, 134, 135], "buffer": [14, 29, 57, 68, 133, 134, 135, 141, 143, 145, 146, 147, 150, 151, 155, 156, 160, 162, 163, 166, 187, 199, 219, 252, 253, 261, 299, 556, 599, 620], "buffered_dataset": [141, 143], "buffered_read_s": 57, "bufferediobas": [32, 68, 129, 141, 143, 599, 620], "bufferedread": [32, 141, 143], "bug": [603, 607, 611, 614, 617, 623, 624, 630], "build": [0, 4, 185, 186, 599, 608, 619, 624], "build_tre": 0, "built": [32, 54, 299, 556, 630], "bulk": [51, 129, 133, 134, 135, 588, 599, 612, 613, 616, 627, 634], "bulk_data_element_handl": [129, 133, 134, 135, 627], "bulk_data_handl": 627, "bulk_data_read": 627, "bulk_data_threshold": [129, 133, 134, 135, 599, 613, 627], "bulk_data_uri": 627, "bulk_data_uri_handl": [129, 133, 134, 135, 599, 615, 627], "bulkdatauri": [129, 133, 134, 135, 627], "bullet": [599, 602], "button": 20, "bypass": 57, "byte": [14, 24, 26, 29, 30, 32, 34, 35, 38, 40, 43, 45, 50, 51, 52, 53, 68, 78, 79, 80, 90, 91, 112, 129, 131, 132, 133, 134, 135, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 162, 163, 165, 166, 167, 168, 169, 171, 181, 182, 183, 184, 185, 186, 187, 192, 193, 197, 199, 200, 210, 214, 216, 234, 252, 253, 261, 262, 266, 277, 278, 279, 283, 284, 286, 289, 293, 294, 299, 523, 556, 558, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 599, 610, 611, 612, 617, 620, 621, 626, 628, 631, 632, 634, 636], "byte_str": [563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581], "bytearrai": [29, 30, 35, 133, 134, 135, 145, 146, 147, 151, 155, 156, 160, 162, 163, 252, 253, 261, 283, 299, 556], "bytelength": [167, 172], "byteord": [29, 34, 35, 299, 556, 636], "bytes_to_find": 181, "bytesio": [14, 16, 134, 160, 599, 620, 626], "byteslengthexcept": [599, 619], "bytestr": [187, 283], "bytestream": [148, 150], "c": [2, 10, 18, 20, 22, 24, 26, 27, 28, 32, 40, 43, 48, 51, 52, 94, 133, 134, 135, 216, 219, 225, 227, 228, 229, 230, 233, 270, 272, 273, 274, 275, 276, 292, 553, 579, 599, 606, 626, 627, 628, 630, 631, 632, 634, 636], "c313d2befb08": [599, 605], "cach": [624, 630], "cal": 20, "calcul": [599, 617, 619], "calibr": 20, "call": [10, 25, 26, 40, 43, 44, 45, 50, 53, 82, 86, 92, 130, 133, 134, 135, 149, 160, 162, 163, 164, 176, 183, 187, 207, 215, 252, 523, 552, 560, 599, 602, 605, 609, 615, 620, 626, 628, 631, 634], "call_back": 167, "callabl": [92, 129, 133, 134, 135, 164, 167, 170, 174, 207, 215, 252, 261, 583], "callback": [17, 25, 26, 132, 133, 134, 135, 207, 209, 210, 211, 212, 599, 608, 620], "caller": [166, 599, 602], "camel": [85, 599, 615, 621], "can": [1, 6, 10, 14, 17, 24, 25, 26, 27, 28, 30, 32, 35, 38, 40, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 57, 70, 97, 132, 133, 134, 135, 140, 141, 142, 162, 163, 166, 167, 174, 176, 187, 202, 207, 215, 234, 253, 262, 277, 297, 523, 550, 552, 553, 557, 560, 583, 596, 599, 600, 601, 602, 605, 614, 615, 618, 620, 624, 625, 626, 627, 628, 630, 631, 632, 634, 635, 636], "cancel": 176, "cannot": [43, 46, 86, 133, 134, 135, 176, 187, 215, 232, 281, 553, 557, 561, 599, 617, 620, 624, 628], "canon": 553, "capabl": 635, "capac": 46, "capit": [54, 523, 553, 560, 599, 605], "captur": 624, "carotid": [10, 628], "carri": [552, 553, 599, 607], "case": [25, 26, 29, 38, 43, 44, 48, 53, 57, 77, 79, 85, 133, 134, 135, 167, 232, 253, 278, 281, 293, 297, 523, 553, 558, 560, 599, 611, 615, 620, 621, 626, 627, 631, 632, 634, 636], "casefold": [523, 560], "caseless": [523, 560], "catch": [599, 602, 604], "caus": [30, 35, 561, 599, 601, 628], "caution": 626, "cb": 283, "cd": [624, 625, 628], "cell": 20, "center": [2, 8, 20, 228, 229, 230, 273, 274, 275, 523, 560, 626], "central": 2, "certain": [53, 133, 134, 135, 292, 625, 626], "certainli": 53, "ch": [38, 636], "ch1": 636, "ch2": 636, "ch_idx": 3, "ch_item": 3, "ch_sourc": 3, "chain": 20, "chan": 20, "chanc": 626, "chang": [10, 12, 25, 26, 27, 30, 35, 39, 44, 45, 50, 51, 54, 57, 68, 83, 97, 107, 129, 133, 134, 135, 152, 160, 162, 163, 176, 178, 185, 186, 187, 217, 218, 219, 220, 221, 222, 229, 232, 233, 252, 266, 274, 276, 278, 279, 281, 289, 292, 293, 294, 549, 553, 566, 568, 614, 623, 626, 627, 629, 630, 631, 632, 635], "channel": [3, 20, 38, 40, 52, 133, 134, 135, 219, 584, 632, 636], "channeldefinitionsequ": [3, 636], "channelsampleskew": 636, "channelsensit": 636, "channelsensitivityunitssequ": [3, 636], "channelsourcesequ": [3, 636], "chapter": [40, 549], "chapter_7": 625, "char": [523, 560], "charact": [10, 20, 26, 28, 32, 44, 48, 54, 57, 77, 78, 79, 80, 90, 129, 130, 132, 133, 134, 135, 136, 166, 167, 176, 177, 178, 179, 199, 202, 203, 204, 209, 210, 211, 523, 549, 558, 560, 561, 562, 566, 568, 571, 572, 578, 581, 582, 588, 599, 600, 601, 608, 610, 611, 614, 615, 617, 618, 619, 620, 624, 626, 627, 628], "character_encod": [133, 134, 135], "character_set": 626, "charl": 630, "charpyl": [599, 619, 630], "charset": [105, 588, 599, 619], "chdef": 636, "chdef_seq": 636, "check": [3, 12, 43, 44, 116, 117, 119, 120, 122, 126, 127, 133, 134, 135, 137, 179, 187, 200, 552, 562, 599, 605, 608, 610, 611, 614, 615, 617, 620, 621, 624, 625, 630, 632, 636], "checkout": [624, 625], "checksum": 20, "chief": 558, "child": 177, "children": 177, "chines": [599, 600, 608], "choic": [631, 632], "choos": [624, 625, 631], "chosen": [553, 632, 634, 636], "chtml": 54, "chunk": 57, "ci": [599, 620], "cid": [297, 298, 596, 635], "cid1234": 297, "cid270": 635, "cid4": 596, "cid6": 596, "cid_concept": 297, "cid_for_nam": 635, "circl": 632, "circleci": 625, "circumst": [140, 142], "citat": 23, "citizen": [85, 129, 133, 626], "clam": 0, "clarif": [624, 625], "clariti": [599, 608], "class": [2, 8, 9, 12, 14, 20, 26, 27, 28, 29, 30, 35, 43, 48, 51, 52, 54, 55, 57, 68, 70, 71, 82, 129, 131, 133, 134, 135, 136, 137, 160, 162, 163, 166, 175, 176, 177, 187, 200, 207, 215, 252, 253, 261, 262, 295, 296, 297, 298, 299, 459, 523, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 587, 588, 592, 593, 599, 600, 601, 602, 605, 606, 607, 608, 609, 610, 612, 614, 615, 618, 619, 620, 625, 626, 628, 634, 635], "classmethod": [129, 133, 134, 135, 558], "clean": [552, 599, 608, 624, 625], "clear": [48, 129, 133, 134, 135, 176, 215, 295, 599, 620], "cli": [599, 619, 621], "click": [624, 625], "clip": [20, 38], "clone": [26, 27, 624, 625, 630], "close": [68, 141, 143, 160, 162, 163, 166, 170, 233, 276, 599, 601, 602, 631, 632], "closest": [185, 186, 553], "clunie1": [2, 20, 26, 28, 48, 626], "cm": [9, 11, 49], "cmap": [9, 49, 634], "co": [133, 636], "code": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 32, 37, 43, 47, 48, 53, 78, 79, 97, 133, 134, 135, 164, 166, 169, 297, 523, 560, 588, 596, 599, 600, 602, 606, 607, 608, 610, 612, 615, 617, 620, 623, 625, 629, 630, 635, 636], "code_fil": 53, "codec": [523, 560], "codedict": 635, "codemean": [3, 636], "codestream": [29, 133, 134, 135, 232, 281, 286, 631], "codevalu": 636, "codifi": [25, 27, 47, 599, 607, 609, 617, 619, 620], "codingschemedesign": 636, "codingschemevers": 636, "coeffici": [20, 26, 27, 553], "coll": [26, 28], "collect": [20, 48, 57, 135, 167, 298, 588, 628], "collis": [599, 601], "color": [29, 30, 33, 34, 35, 37, 38, 39, 40, 47, 133, 134, 135, 223, 224, 233, 234, 252, 254, 262, 268, 269, 276, 277, 278, 282, 293, 599, 612, 614, 621, 631, 632, 634], "color_spac": [224, 234, 269, 277], "colorimetr": [224, 234, 269, 277], "colour": [223, 268], "colourspac": [98, 599, 617], "column": [0, 2, 8, 9, 20, 26, 28, 29, 30, 35, 38, 40, 50, 51, 133, 134, 135, 216, 219, 221, 222, 224, 231, 232, 233, 252, 253, 261, 262, 265, 266, 267, 269, 276, 278, 280, 281, 284, 285, 288, 289, 290, 292, 293, 631, 632, 634], "columnconfigur": 0, "com": [2, 8, 9, 11, 12, 17, 20, 22, 23, 624, 625, 630], "combin": [133, 134, 135, 300, 555, 626, 636], "comfort": 631, "comma": 54, "command": [25, 27, 41, 53, 133, 134, 135, 187, 297, 599, 607, 617, 619, 620, 621, 624, 625, 630], "command1": [25, 26], "command1modul": [25, 26], "command2": [25, 26], "command2modul": [25, 26], "comment": [2, 8, 20, 624], "commit": [599, 620], "common": [38, 48, 52, 53, 77, 599, 610, 628, 634, 636], "commonli": [46, 133, 134, 135, 253, 265, 267, 288, 290, 628, 634], "commun": [599, 615], "comp": [10, 20, 26, 28, 628], "compani": 48, "compar": [20, 57, 523, 553, 560, 599, 606, 609, 617, 620, 624, 625, 632], "compare_sign": 553, "compare_tot": 553, "compare_total_mag": 553, "comparison": [523, 553, 560, 599, 604, 609], "compat": [44, 45, 133, 134, 135, 551, 553, 555, 599, 602, 603, 605, 606, 607, 608, 620, 630], "compil": [471, 472], "complement": [35, 40, 55, 262, 299, 556], "complet": [20, 24, 26, 35, 53, 133, 134, 135, 147, 150, 184, 297, 599, 600, 624, 628, 630, 632], "complex": [51, 299, 554, 556, 557, 634], "compliant": [12, 53, 599, 608], "complic": [38, 628, 631], "compon": [37, 40, 81, 148, 177, 179, 221, 286, 558, 599, 600, 602, 617, 631], "compress": [20, 23, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 47, 51, 55, 68, 133, 134, 135, 140, 141, 142, 143, 148, 149, 236, 239, 240, 241, 243, 244, 247, 248, 252, 253, 254, 255, 256, 257, 258, 259, 261, 263, 264, 265, 267, 278, 282, 288, 290, 292, 293, 523, 588, 592, 593, 599, 608, 610, 612, 617, 618, 620, 621, 630, 632, 633], "compressedsampl": [2, 8, 9, 20, 26, 28, 70, 625, 626], "compression_ratio": 34, "comput": 20, "concaten": [38, 139, 152, 523, 560, 632], "concept": [296, 297, 588, 599, 620], "concern": 49, "conda": [631, 632, 634, 636], "condit": [166, 170, 553, 599, 608], "condition": [30, 636], "config": [32, 44, 557, 579, 588, 599, 605, 610, 611, 612, 614, 615, 617, 620], "configur": [0, 29, 37, 40, 44, 100, 129, 130, 133, 134, 135, 232, 252, 261, 278, 281, 292, 293, 588, 599, 610, 617, 618, 632], "conform": [57, 129, 133, 134, 135, 176, 179, 187, 200, 213, 222, 599, 608, 610, 611, 620, 626, 628, 631, 632, 634], "confus": [599, 620], "congratul": 626, "conjug": [299, 553, 554, 556, 557], "conjunct": [266, 289], "connect": [599, 615], "conserv": 213, "consid": [10, 25, 26, 53, 133, 134, 135, 523, 560, 624, 625, 627], "consist": [52, 134, 187, 252, 261, 296, 599, 605, 625, 634, 636], "consolid": [599, 606], "constant": [599, 615, 620, 621, 636], "constrain": 40, "constraint": [38, 40, 553, 554, 561], "construct": [551, 553, 554, 555, 558, 599, 605, 606, 617], "constructor": 215, "consumpt": [599, 610], "contain": [0, 10, 24, 26, 29, 30, 32, 35, 40, 41, 43, 44, 48, 50, 51, 52, 53, 54, 55, 57, 68, 70, 77, 79, 129, 131, 133, 134, 135, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 166, 167, 174, 181, 185, 186, 187, 200, 203, 207, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 252, 253, 254, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 300, 523, 551, 555, 558, 560, 562, 566, 568, 584, 596, 599, 607, 610, 617, 620, 621, 624, 626, 628, 631, 632, 634, 636], "content": [10, 12, 14, 20, 43, 57, 133, 134, 135, 145, 148, 216, 219, 220, 221, 222, 231, 232, 253, 280, 281, 292, 625, 626, 628, 631], "contentd": 12, "contenttim": 12, "context": [166, 302, 553, 588, 599, 608, 626], "contigu": 40, "continu": [139, 599, 600, 617], "contrast": [2, 8, 10, 20, 628], "contrib": 602, "contribut": [25, 26, 599, 602, 605, 606, 629], "contributing_cod": 625, "contributing_doc": 625, "contributor": 16, "control": [26, 27, 28, 29, 37, 38, 85, 86, 102, 103, 133, 134, 135, 253, 265, 267, 288, 290, 599, 605, 620, 628, 631], "controlpointsequ": 11, "conveni": [43, 48, 51, 68, 129, 210, 211, 599, 615, 620, 621, 627], "convent": [25, 26, 43, 558], "convers": [29, 30, 33, 35, 37, 38, 39, 40, 94, 129, 132, 133, 134, 135, 207, 209, 210, 211, 216, 219, 221, 222, 233, 254, 276, 282, 584, 599, 601, 611, 612, 614, 620, 627, 631, 634, 636], "convert": [14, 29, 30, 33, 35, 37, 38, 39, 40, 51, 77, 78, 80, 86, 89, 91, 94, 98, 130, 132, 133, 134, 135, 176, 187, 207, 209, 215, 216, 217, 218, 219, 220, 221, 222, 233, 252, 253, 254, 262, 265, 267, 276, 282, 288, 290, 299, 523, 553, 555, 556, 560, 584, 599, 602, 605, 608, 611, 612, 615, 616, 617, 620, 621, 625, 626, 631, 632, 636], "convert_ae_str": 61, "convert_atvalu": 61, "convert_color_spac": [39, 51, 588, 599, 617, 620, 621, 631, 634], "convert_da_str": 61, "convert_ds_str": 61, "convert_dt_str": 61, "convert_encod": 588, "convert_is_str": 61, "convert_numb": [61, 185, 186], "convert_obvalu": 61, "convert_owvalu": 61, "convert_pixel_data": [98, 133, 134, 135, 599, 620], "convert_pn": 61, "convert_raw_data_el": [61, 130, 207, 587, 599, 620], "convert_single_str": 61, "convert_sq": 61, "convert_str": 61, "convert_tag": 61, "convert_text": 61, "convert_tm_str": 61, "convert_ui": 61, "convert_un": 61, "convert_ur_str": 61, "convert_valu": 61, "convert_wrong_length_to_un": [588, 599, 617], "convolut": 20, "coord": 20, "coordin": [20, 26, 27, 43], "copi": [2, 10, 53, 133, 134, 135, 176, 523, 553, 560, 599, 605, 615, 618, 620, 624, 625, 628, 630], "copy_ab": 553, "copy_neg": 553, "copy_sign": 553, "copyfil": 628, "copyright": 625, "copytre": 628, "cor_aspect": 4, "core": [47, 55], "cornea": 596, "corner": 20, "coron": [1, 5, 6, 596, 599, 611, 622], "correct": [4, 16, 20, 24, 26, 29, 33, 34, 37, 38, 39, 40, 44, 46, 50, 52, 77, 81, 98, 133, 134, 135, 166, 181, 185, 186, 215, 221, 232, 266, 281, 289, 599, 609, 610, 612, 617, 618, 620, 624, 626, 636], "correct_ambiguous_vr": 71, "correct_ambiguous_vr_el": 71, "correct_unused_bit": 29, "correctli": [32, 48, 53, 98, 176, 217, 218, 553, 599, 602, 605, 608, 609, 611, 612, 615, 617, 618, 619, 620, 624], "correspond": [10, 17, 29, 30, 33, 35, 37, 38, 39, 42, 43, 45, 50, 51, 52, 54, 77, 107, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 132, 133, 134, 135, 136, 140, 142, 168, 175, 176, 177, 187, 207, 216, 223, 232, 252, 253, 254, 261, 262, 263, 264, 268, 278, 281, 282, 287, 292, 293, 300, 523, 550, 551, 555, 584, 599, 617, 620, 624, 625, 628, 631, 634, 636], "cosin": 636, "cost": 628, "couch": [26, 28], "couchdb": [599, 603], "could": [3, 24, 25, 26, 51, 53, 77, 78, 80, 215, 217, 599, 602, 603, 617, 624, 625], "count": [4, 131, 215, 295, 296, 299, 523, 556, 560], "counter": 20, "coupl": 628, "courier": 0, "cours": [10, 634], "cover": [30, 35, 626, 628, 630, 634, 636], "coverag": [599, 608, 624], "cp0": 11, "cp805": [599, 602], "cr": [10, 283, 628], "cr1": 628, "cr2": 628, "cr3": 628, "crash": [599, 609, 618, 619], "creat": [0, 4, 12, 14, 16, 18, 24, 25, 26, 27, 32, 43, 44, 48, 53, 55, 89, 129, 130, 132, 133, 134, 135, 160, 162, 163, 164, 174, 175, 176, 177, 187, 207, 215, 224, 234, 252, 253, 261, 262, 269, 277, 297, 298, 300, 523, 549, 551, 552, 554, 555, 557, 558, 588, 599, 602, 604, 617, 619, 620, 626, 630, 631, 634, 635, 636], "create_data_el": 217, "create_icc_transform": [224, 269, 588, 599, 620], "create_imag": 217, "creation": [2, 8, 12, 20, 26, 27, 28, 43, 174, 599, 611, 626, 628, 633], "creator": [2, 8, 16, 20, 26, 28, 48, 111, 112, 120, 123, 124, 125, 133, 134, 135, 136, 200, 299, 599, 609, 614, 619, 626, 628], "credit": 625, "ct": [1, 5, 6, 9, 10, 12, 20, 26, 28, 33, 37, 38, 39, 43, 45, 48, 49, 51, 70, 133, 134, 135, 176, 232, 281, 297, 599, 611, 622, 626, 627, 628, 631, 634], "ct01": [20, 48], "ct01_oc0": 20, "ct1": [9, 20, 26, 28, 70, 625, 626], "ct2": 628, "ct_compressed_bas": [45, 631], "ct_compressed_ext": [45, 631], "ct_rle_lossless": [45, 133, 134, 135, 232, 281], "ct_small": [9, 26, 28, 70, 166, 625, 626], "ctime": [551, 555], "cumul": [26, 27], "current": [0, 20, 24, 26, 28, 40, 44, 45, 54, 68, 97, 129, 133, 134, 135, 160, 162, 163, 176, 177, 185, 186, 193, 223, 233, 268, 276, 551, 553, 555, 558, 599, 617, 625, 628, 630], "curv": [17, 636], "curve_typ": 636, "curves_callback": 17, "custom": [8, 26, 28, 132, 133, 134, 135, 174, 176, 599, 600, 601, 608, 611, 615, 631, 634], "cython": 630, "d": [0, 2, 3, 8, 9, 10, 11, 12, 14, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 35, 37, 38, 39, 40, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 57, 61, 66, 70, 82, 83, 85, 86, 98, 102, 103, 109, 110, 111, 129, 132, 133, 134, 135, 140, 141, 142, 143, 166, 174, 176, 185, 186, 201, 207, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 254, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 553, 554, 558, 561, 566, 584, 599, 605, 606, 614, 617, 619, 624, 625, 626, 627, 628, 630, 631, 632, 634, 636], "da": [2, 12, 17, 20, 26, 27, 28, 32, 43, 48, 61, 66, 94, 133, 565, 579, 599, 608, 617, 626], "dai": [551, 555], "daniel": [599, 602], "darci": [11, 12, 16, 17], "data": [1, 2, 5, 6, 7, 10, 11, 13, 15, 16, 18, 19, 20, 23, 24, 26, 27, 28, 32, 33, 34, 37, 38, 39, 40, 41, 43, 44, 47, 49, 53, 54, 55, 57, 63, 64, 65, 66, 70, 78, 79, 80, 81, 83, 85, 98, 101, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 160, 162, 163, 164, 165, 166, 168, 170, 174, 176, 183, 199, 202, 203, 204, 207, 209, 210, 211, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 276, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 523, 549, 560, 577, 584, 588, 599, 600, 601, 602, 603, 604, 605, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 628, 629, 630], "data_el": [17, 133, 134, 135, 189, 192, 193, 196, 198, 203, 204, 626, 627], "data_elem": [599, 600, 626], "data_element_callback": [93, 99, 130, 588, 599, 620], "data_element_callback_kwarg": [588, 599, 620], "data_element_gener": [71, 167], "data_element_offset_to_valu": 71, "data_retrieved_for_tag_and_vr_via_uri": 627, "data_retrieved_via_uri": 627, "databas": 14, "datadict": [16, 588, 599, 608, 611, 626], "datael": [0, 47, 48, 50, 54, 57, 61, 79, 130, 132, 133, 134, 135, 164, 167, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 205, 206, 207, 217, 254, 282, 599, 600, 608, 609, 610, 611, 614, 618, 620, 626], "dataelem": [61, 79, 133, 134, 135, 168, 186, 202, 203, 582, 588, 599, 611, 614, 626], "dataelement_from_raw": [61, 599, 620, 626], "dataset": [0, 2, 6, 7, 8, 10, 11, 12, 13, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 32, 38, 39, 40, 44, 46, 47, 48, 49, 53, 54, 55, 74, 81, 85, 86, 92, 98, 101, 107, 108, 109, 110, 129, 130, 132, 138, 140, 141, 142, 143, 148, 150, 159, 160, 162, 163, 166, 167, 170, 172, 173, 174, 175, 176, 177, 185, 186, 187, 199, 200, 204, 207, 209, 210, 211, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 252, 253, 254, 261, 262, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 284, 285, 287, 288, 290, 291, 292, 293, 295, 523, 550, 584, 588, 599, 600, 601, 602, 603, 604, 605, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 621, 622, 625, 628, 629, 630, 632, 634, 636], "dataset_class": 129, "datastor": 107, "date": [2, 8, 9, 12, 17, 20, 23, 26, 27, 28, 32, 43, 44, 48, 94, 176, 551, 555, 588, 599, 608, 609, 611, 617, 626, 630], "datetim": [12, 94, 551, 555, 559], "datetime_convers": [32, 565, 567, 573, 588], "daughter": 133, "daunt": 624, "dave": [599, 602], "db": [14, 37, 133, 134, 135, 232, 281, 631], "dcm": [9, 11, 12, 24, 26, 27, 28, 32, 43, 45, 50, 51, 54, 70, 133, 134, 135, 141, 143, 166, 174, 207, 210, 211, 232, 265, 267, 281, 288, 290, 599, 615, 625, 626, 631, 635, 636], "dcm_qt_tree": [599, 606, 607], "dcmread": [0, 4, 9, 10, 11, 12, 14, 16, 43, 46, 51, 71, 92, 107, 134, 158, 162, 163, 164, 167, 170, 184, 207, 210, 211, 214, 265, 267, 288, 290, 550, 599, 608, 614, 615, 617, 620, 625, 626, 628, 634, 636], "dcmwrite": [14, 71, 133, 134, 135, 162, 163, 599, 608, 614, 615, 617, 620, 626], "dctool100": [2, 20, 26, 28, 48, 626], "dd": [23, 551], "ddt": 555, "de": 53, "deal": [23, 44, 50, 222, 599, 601, 610, 626], "debug": [588, 599, 605, 607, 621], "debug_on": 95, "decemb": [599, 619], "decid": [599, 620, 631], "decim": [32, 82, 102, 523, 552, 553, 554, 556, 557, 560, 561, 562, 599, 605, 606, 617], "decis": 39, "decod": [1, 5, 6, 38, 40, 41, 46, 51, 55, 61, 78, 79, 129, 133, 134, 135, 145, 147, 151, 152, 160, 162, 163, 166, 199, 217, 218, 220, 221, 222, 254, 262, 263, 265, 267, 282, 288, 290, 558, 563, 564, 565, 566, 567, 568, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 588, 591, 599, 603, 610, 611, 612, 615, 617, 618, 620, 621, 622, 628, 630, 631], "decode_byt": 588, "decode_data_sequ": [599, 620], "decode_el": 588, "decode_pixel_data": [253, 262], "decodefunct": 252, "decodeopt": [252, 253, 261], "decoder_depend": 30, "decoderunn": [30, 253], "decoding_plugin": [133, 134, 135, 253, 254, 265, 267, 282, 288, 290, 631, 634], "decomposit": 37, "decompress": [29, 41, 45, 46, 55, 133, 134, 135, 220, 253, 265, 267, 288, 290, 588, 599, 608, 612, 620, 621, 630, 632, 633, 634], "decon": 20, "decor": [599, 606], "decreas": [37, 133, 134, 135, 232, 281, 631], "deep": [599, 618], "deepcopi": [32, 599, 617, 620], "def": [0, 8, 11, 14, 17, 25, 26, 30, 35, 98, 132, 133, 134, 135, 174, 523, 560, 624, 627, 632], "default": [0, 9, 24, 26, 29, 32, 34, 35, 44, 46, 50, 51, 57, 77, 81, 82, 83, 85, 86, 89, 90, 91, 92, 93, 94, 95, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 129, 133, 134, 135, 137, 140, 144, 145, 146, 147, 151, 154, 155, 156, 160, 162, 163, 164, 166, 167, 176, 178, 185, 186, 187, 199, 200, 207, 209, 212, 215, 216, 219, 221, 222, 224, 228, 229, 230, 232, 233, 234, 252, 253, 254, 261, 262, 265, 266, 267, 269, 273, 274, 275, 276, 277, 278, 279, 281, 282, 284, 287, 288, 289, 290, 291, 293, 294, 295, 523, 549, 553, 555, 558, 560, 566, 568, 572, 583, 584, 599, 603, 605, 606, 608, 610, 611, 612, 613, 614, 615, 617, 620, 625, 626, 627, 628, 630, 631, 632, 634], "default_element_format": 133, "default_encod": [22, 558], "default_handl": 95, "default_sequence_element_format": 133, "defer": [133, 134, 135, 168, 599, 601, 605, 612, 618, 626], "defer_s": [164, 166, 167, 170, 184, 214, 599, 601], "deferreddatael": [599, 610, 611], "defin": [16, 17, 20, 25, 26, 33, 37, 38, 39, 40, 48, 50, 57, 129, 133, 134, 135, 136, 175, 176, 223, 268, 523, 553, 599, 605, 624, 626, 628, 631, 636], "definit": [176, 187, 588, 599, 608, 636], "deflat": [36, 42, 45, 46, 133, 134, 135, 219, 232, 235, 236, 255, 263, 264, 281, 523, 599, 614, 620, 621], "deflatedimageframecompress": [33, 599, 621, 631], "deflatedimageframecompressionencod": [33, 34], "defragment_data": [599, 620], "degre": 20, "del": [17, 18, 43, 48, 133, 626], "del_opt": [252, 261], "delai": [20, 26, 28], "delattr": 17, "delet": [12, 17, 53, 133, 134, 135, 252, 261, 523, 560, 599, 614, 624, 625], "delimit": [78, 148, 149, 150, 180, 182, 183, 184, 188, 523, 560, 583, 599, 615, 617], "delimiter_tag": 184, "deliveri": [26, 27], "delta": 20, "demand": 558, "demonstr": [16, 599, 600, 632], "denomin": [299, 553, 554, 556, 557], "depend": [20, 30, 35, 40, 45, 46, 51, 53, 98, 129, 133, 134, 135, 145, 146, 147, 176, 187, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 228, 229, 231, 232, 252, 253, 262, 268, 270, 272, 273, 274, 280, 281, 292, 579, 584, 599, 610, 611, 618, 625, 627, 628, 630, 632, 634, 636], "dependabot": [599, 620], "deprec": [92, 93, 96, 97, 99, 130, 133, 134, 135, 138, 139, 148, 149, 150, 152, 157, 187, 585, 586, 604, 605, 609, 610, 611, 614, 615, 617, 618, 619], "deprecationwarn": [599, 600], "depth": [32, 38, 51, 55, 177, 233, 276, 599, 612, 630, 631], "deriv": [2, 8, 20, 43, 82, 98, 129, 135, 599, 605, 626], "describ": [29, 40, 43, 53, 109, 111, 129, 133, 134, 135, 253, 553, 558, 627, 628, 634], "descript": [3, 16, 20, 25, 26, 27, 29, 34, 40, 43, 48, 55, 109, 110, 111, 112, 115, 125, 129, 136, 599, 600, 601, 614, 618, 620, 634], "descriptor": [10, 48, 176, 223, 225, 227, 228, 229, 268, 270, 272, 273, 274, 599, 612, 614, 620, 621, 628], "descriptor_character_set": [10, 176, 628], "descriptor_file_id": [10, 176, 628], "descripwidth": 129, "deseri": 627, "design": [53, 296, 297, 298, 635], "desir": [49, 215, 233, 276], "despit": 628, "destin": [162, 163], "detail": [24, 26, 40, 43, 44, 51, 53, 95, 129, 133, 134, 135, 167, 207, 302, 553, 557, 588, 599, 617, 620, 624, 625], "detector": 20, "determin": [40, 43, 50, 129, 133, 176, 209, 210, 211, 212, 225, 227, 270, 272, 299, 553, 556, 599, 620, 621, 628, 636], "determinist": 549, "dev0": 588, "develop": [25, 26, 27, 44, 599, 608], "devic": [2, 8, 20, 26, 27, 635], "di": 628, "diamet": 20, "dicm": [158, 171, 187, 200, 213, 626], "dicom": [1, 2, 4, 6, 7, 9, 13, 14, 15, 19, 21, 22, 23, 27, 28, 30, 32, 33, 35, 37, 38, 39, 40, 43, 45, 46, 47, 49, 50, 51, 52, 54, 55, 57, 60, 62, 70, 71, 73, 75, 77, 78, 79, 85, 90, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 126, 127, 128, 129, 133, 134, 135, 136, 140, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 160, 162, 163, 164, 166, 167, 169, 170, 171, 176, 187, 198, 200, 202, 204, 213, 215, 216, 219, 223, 225, 227, 228, 229, 230, 233, 253, 262, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 279, 288, 289, 290, 292, 294, 297, 299, 300, 523, 549, 553, 554, 557, 558, 560, 561, 577, 588, 596, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 615, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 631, 632, 634, 635], "dicom_character_set": 79, "dicom_dao": [599, 603], "dicom_filenam": 14, "dicombytesio": [71, 162, 599, 620], "dicomdir": [10, 55, 70, 174, 176, 177, 599, 607, 611, 612, 615, 618, 619, 620, 629], "dicomdirtest": [10, 628], "dicomfil": [24, 26, 71], "dicomfilelik": [14, 71, 160, 161, 599, 601], "dicominfo": [599, 600], "dicomio": [71, 149, 152, 157, 160, 162, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 599, 620], "dicomit": [599, 603], "dicomtre": [0, 21, 599, 600, 622], "dicomweb": [129, 133, 134, 135, 627], "dicond": [185, 186], "dicosquadrupoleresonanceqrstorag": [599, 615], "dicosquadrupoleresonancestorag": [599, 615], "dict": [14, 30, 35, 43, 93, 109, 111, 129, 132, 133, 134, 135, 174, 176, 207, 209, 210, 211, 212, 216, 231, 252, 253, 254, 261, 280, 282, 285, 286, 297, 599, 602, 617, 619, 634], "dict_item": [133, 134, 135], "dict_kei": [133, 134, 135], "dictionari": [6, 15, 19, 43, 47, 85, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 134, 135, 167, 231, 252, 261, 280, 523, 560, 588, 599, 601, 602, 604, 607, 608, 609, 610, 611, 612, 615, 617, 618, 620, 621, 622, 627, 635], "dictionary_is_retir": [599, 608], "dictionary_vr": 626, "did": [18, 599, 600, 620], "diff": [20, 624], "differ": [4, 6, 17, 21, 25, 26, 28, 32, 38, 39, 48, 51, 55, 133, 134, 135, 211, 233, 276, 553, 599, 602, 614, 622, 624, 625, 626, 627, 628, 631, 632, 634], "difficult": [53, 624], "difflib": 20, "dig": 628, "digit": [89, 136, 201, 523, 553, 560, 636], "dimens": [98, 133, 134, 135, 221, 253, 265, 267, 288, 290, 634], "dimitri": [599, 607], "dir": [43, 133, 134, 135, 297, 596, 599, 605, 618, 625, 635], "direct": [24, 26, 283, 553, 625, 627, 628], "directli": [10, 30, 35, 38, 43, 129, 252, 253, 261, 262, 552, 599, 620, 627, 628, 631, 632, 634, 635], "directori": [10, 174, 175, 176, 177, 179, 599, 600, 618, 620, 624, 625, 628, 630], "directory_record": [176, 588, 628], "directoryrecordsequ": 628, "directoryrecordtyp": [174, 176], "disabl": 631, "disadvantag": 53, "disagre": [599, 620], "discard": [523, 560], "discuss": [624, 628], "disk": [599, 615], "displai": [6, 20, 21, 26, 27, 28, 33, 37, 38, 39, 43, 47, 49, 101, 129, 133, 599, 600, 606, 611, 617, 622, 624, 632, 634, 636], "distanc": 20, "distinct": [599, 603], "distribut": [599, 603, 615, 630], "distutil": [599, 600], "div": 558, "dive": 624, "divid": 553, "divisionbyzero": 553, "django": [624, 625, 627], "do": [10, 14, 25, 26, 30, 35, 44, 45, 46, 48, 50, 51, 53, 55, 94, 130, 133, 134, 135, 176, 187, 193, 252, 261, 599, 605, 611, 617, 620, 624, 625, 626, 628, 631, 632, 635, 636], "do_command": [25, 26], "doc": [174, 625], "docstr": [54, 624], "document": [41, 44, 133, 134, 135, 174, 207, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 262, 265, 267, 282, 288, 290, 603, 608, 609, 620, 623, 629], "doe": [10, 12, 38, 48, 50, 51, 53, 90, 98, 110, 133, 134, 135, 158, 168, 187, 193, 217, 553, 561, 599, 615, 628], "doesn": [29, 40, 50, 85, 133, 134, 135, 216, 219, 222, 253, 265, 267, 278, 288, 290, 293, 599, 614, 621, 624, 630, 631, 632], "doi": 23, "domain": 634, "don": [8, 10, 18, 26, 27, 28, 32, 37, 43, 46, 48, 53, 252, 624, 625, 627, 628, 631, 632, 634], "done": [30, 35, 45, 523, 553, 560, 624, 625, 626], "dont_print": 8, "dose": [26, 27, 28, 70, 174, 176, 599, 605, 628], "dosesummationtyp": 628, "dot": [624, 626], "doubl": [32, 51, 54, 133, 134, 135, 219, 291, 592, 599, 612, 621, 634], "doublefloatpixeldata": [29, 30, 51, 252, 261, 285, 599, 617, 634], "down": [213, 624, 628], "download": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 107, 599, 615, 617, 618, 619, 621], "downsampl": [2, 39], "downsiz": [1, 5, 6, 51, 622], "downstream": 38, "dr": 558, "draw_circl": 632, "drop": [133, 134, 135, 599, 614, 615], "ds1": 627, "ds2": 133, "ds_byte": 14, "ds_decim": [102, 588, 599, 614], "ds_json": 627, "ds_numpi": [103, 588], "ds_or_path": 176, "ds_out": [265, 267, 288, 290, 634], "dsdecim": [32, 61, 89, 552, 566, 599, 617], "dsfloat": [32, 61, 552, 566, 599, 617], "dst": [555, 559, 628], "dt": [12, 32, 61, 66, 94, 567, 579, 599, 608, 617], "dtype": [43, 50, 51, 52, 54, 133, 134, 135, 221, 232, 233, 252, 253, 262, 266, 276, 278, 281, 289, 291, 293, 631, 632, 634], "dtype_corrected_for_endian": [599, 620], "due": [29, 133, 134, 135, 176, 252, 599, 606, 617, 619, 624, 628, 634], "dummi": [24, 26], "dummydatabas": 14, "dump": [129, 133, 134, 135], "dump_handl": [129, 133, 134, 135], "duplic": [599, 606], "durat": [20, 26, 28, 626], "dure": [37, 38, 43, 48, 110, 599, 618, 620, 624, 625, 631], "dvd": 628, "dwt": 37, "dynam": [16, 20], "e": [20, 24, 26, 27, 28, 30, 35, 43, 44, 50, 51, 54, 57, 86, 129, 133, 134, 135, 136, 166, 172, 173, 176, 177, 178, 215, 216, 253, 262, 266, 283, 289, 295, 551, 553, 558, 583, 599, 602, 609, 611, 615, 620, 624, 625, 626, 630], "e0": 152, "e000": [149, 152, 153, 154], "e0dd": 149, "e3ee934bbc": [599, 603], "e830f30b6781": [599, 606], "each": [0, 3, 10, 20, 29, 30, 34, 35, 37, 38, 39, 40, 43, 45, 50, 51, 52, 55, 70, 78, 132, 133, 134, 135, 140, 142, 148, 149, 152, 153, 154, 155, 156, 177, 178, 215, 222, 232, 233, 252, 253, 254, 261, 262, 265, 267, 276, 281, 282, 283, 288, 290, 523, 553, 558, 560, 584, 596, 599, 614, 617, 624, 626, 628, 631, 632, 634, 636], "earlier": 626, "easi": [51, 631], "easier": [48, 134, 599, 620, 625], "easiest": 23, "easili": [17, 599, 600, 602], "ecg": [52, 70, 636], "echo": [2, 8, 20], "echofindingobservationtyp": 635, "edit": [10, 53, 599, 609, 610, 612, 624, 625, 630], "editor": [624, 625], "eeee": [187, 599, 620], "effect": [43, 149, 549, 632], "effici": [10, 164, 176, 266, 289, 561, 631, 636], "effort": 29, "eg": 4, "einthoven": 636, "either": [26, 27, 30, 35, 37, 38, 40, 43, 44, 48, 53, 98, 129, 133, 134, 135, 145, 147, 151, 171, 176, 216, 224, 234, 252, 261, 266, 269, 277, 284, 289, 291, 292, 297, 299, 300, 553, 556, 558, 565, 573, 596, 599, 615, 620, 625, 626, 628, 630, 631, 632, 634], "elem": [0, 8, 17, 26, 28, 43, 50, 54, 79, 129, 133, 134, 135, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 205, 206, 216, 299, 301, 599, 602, 626], "element": [2, 10, 12, 16, 17, 18, 20, 24, 25, 26, 27, 28, 29, 37, 38, 39, 40, 41, 45, 47, 49, 50, 51, 52, 53, 54, 55, 57, 68, 78, 79, 81, 83, 85, 86, 94, 95, 98, 101, 102, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 148, 149, 150, 164, 165, 166, 167, 168, 176, 183, 184, 185, 186, 187, 200, 202, 203, 207, 209, 210, 211, 212, 216, 217, 219, 221, 222, 224, 226, 231, 232, 234, 252, 253, 254, 261, 265, 267, 269, 271, 277, 278, 280, 281, 282, 284, 285, 288, 290, 291, 292, 293, 297, 299, 300, 551, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 584, 585, 588, 599, 600, 601, 602, 603, 604, 605, 608, 609, 610, 611, 612, 614, 615, 617, 618, 619, 620, 621, 625, 628, 630, 631, 632, 634, 636], "element_format": [133, 134, 135], "element_offset": [133, 134, 135, 136], "element_v": [25, 26], "element_valu": [25, 26], "elementcallback": 92, "els": [3, 4, 8, 33, 37, 38, 39, 45, 133, 167, 181, 184, 552, 553, 626, 632], "embed": [599, 615], "emin": 553, "emit": 57, "empti": [32, 68, 129, 133, 134, 135, 137, 145, 147, 148, 150, 151, 152, 160, 215, 266, 286, 289, 295, 523, 553, 554, 558, 560, 577, 599, 600, 608, 611, 612, 613, 614, 615, 617, 620, 626, 628, 632, 634, 636], "empty_valu": 129, "empty_value_for_vr": 129, "emul": [43, 97, 133, 134, 135], "enabl": [29, 34, 44, 94, 133, 134, 135, 631], "enable_futur": 97, "encap": [32, 45, 174, 588, 599, 608, 610, 620, 631, 634], "encapsul": [29, 32, 40, 45, 51, 133, 134, 135, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 232, 253, 262, 278, 281, 293, 588, 599, 600, 610, 615, 620, 634], "encapsulate_buff": [32, 140, 142, 143, 599, 620], "encapsulate_ext": [133, 134, 135, 232, 281], "encapsulate_extend": [45, 140, 141, 143, 599, 615, 620, 631], "encapsulate_extended_buff": [32, 140, 141, 142, 599, 620], "encapsulated_length": 68, "encapsulatedbuff": [68, 141, 143, 599, 620], "encapul": 68, "encasul": 523, "enclos": 48, "encod": [29, 30, 32, 33, 40, 41, 42, 45, 46, 51, 52, 55, 57, 68, 77, 78, 79, 80, 129, 130, 132, 133, 134, 135, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 160, 162, 163, 164, 167, 172, 173, 176, 187, 194, 198, 199, 200, 202, 203, 204, 206, 209, 210, 211, 212, 222, 232, 234, 252, 253, 264, 265, 267, 277, 278, 281, 288, 290, 293, 523, 550, 553, 558, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 588, 591, 599, 605, 608, 609, 610, 611, 612, 617, 618, 619, 620, 621, 626, 627, 631, 632, 634], "encode_pixel_data": [253, 262], "encode_str": 588, "encodefunct": 261, "encodeopt": [252, 261], "encoder_depend": 35, "encoderunn": 35, "encoding_plugin": [45, 133, 134, 135, 232, 262, 281, 631], "encount": [48, 90], "encourag": [599, 605], "end": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 26, 144, 146, 155, 156, 167, 182, 184, 252, 253, 266, 289, 299, 523, 556, 560, 599, 605, 612, 631], "endian": [2, 12, 16, 20, 26, 27, 28, 29, 34, 35, 40, 43, 45, 46, 48, 133, 134, 135, 145, 146, 147, 149, 151, 153, 154, 155, 156, 160, 162, 163, 164, 167, 176, 181, 182, 183, 184, 187, 193, 200, 219, 222, 235, 237, 238, 242, 253, 254, 262, 263, 278, 282, 293, 305, 523, 550, 563, 564, 565, 566, 567, 568, 572, 573, 574, 576, 577, 579, 580, 599, 602, 610, 614, 619, 620, 621, 626, 631, 632, 634, 636], "endswith": [523, 560], "energi": [26, 28], "enforc": [43, 47, 215, 599, 605], "enforce_file_format": [12, 133, 134, 135, 187, 599, 620, 626], "enforce_standard": [137, 200, 626], "enforce_valid_valu": [588, 599, 605, 611, 612, 615, 617, 618], "engin": 553, "english": 54, "enhanc": [20, 223, 268, 602], "ensur": [4, 32, 33, 37, 38, 39, 44, 48, 97, 133, 134, 135, 137, 166, 176, 187, 215, 266, 289, 553, 554, 599, 605, 608, 617, 619, 620, 621, 624, 634], "ensure_file_meta": [133, 134, 135], "enter": 23, "entir": [43, 133, 166, 169, 217, 221, 253, 265, 267, 288, 290, 624, 626, 631, 634], "entireti": [133, 134, 135, 254, 282], "entiti": [2, 20, 26, 28, 32, 48, 176, 200, 626], "entri": [16, 25, 26, 27, 43, 47, 51, 109, 110, 111, 112, 119, 120, 599, 601, 618, 624, 625], "entropy_src": [549, 599, 620], "entry_point": [25, 26], "enum": [599, 618, 620], "enumer": [0, 4, 636], "env": 628, "environ": [26, 27, 44, 599, 600, 615, 630], "eoc": [148, 599, 612], "eof": [160, 162, 163, 184], "eoferror": [160, 162, 163, 184], "eoi": [148, 599, 612], "eol": [599, 619], "equal": [29, 40, 144, 149, 299, 523, 553, 554, 556, 557, 560, 599, 609, 610, 611], "equival": [43, 133, 134, 135, 145, 147, 151, 252, 261, 266, 289, 553, 599, 609], "error": [24, 26, 34, 38, 53, 57, 77, 87, 88, 97, 129, 133, 134, 135, 232, 281, 523, 553, 560, 561, 588, 599, 602, 603, 606, 608, 609, 610, 611, 612, 614, 615, 619, 620, 621, 624, 626, 630, 631], "escap": [599, 620], "especi": [40, 53, 624, 631, 634], "estim": 20, "et": 23, "etc": [17, 18, 43, 51, 54, 129, 133, 134, 135, 216, 599, 600, 606, 617, 624, 628, 631], "euc_kr": [22, 558], "eval": [599, 621], "even": [32, 38, 48, 50, 133, 134, 135, 140, 144, 149, 166, 171, 253, 254, 265, 266, 282, 288, 289, 553, 599, 615, 626, 628, 632, 634], "everi": [68, 92, 253, 262, 283, 628, 636], "everyth": [176, 624, 628], "evolut": 44, "exact": [43, 553, 554, 556, 557], "exactli": [26, 27, 50, 52, 299, 553, 554, 556, 557, 626], "exam": 20, "exampl": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 29, 30, 35, 40, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 85, 86, 109, 110, 111, 129, 133, 134, 135, 141, 142, 143, 166, 174, 176, 207, 210, 211, 231, 232, 252, 262, 265, 267, 280, 281, 288, 290, 299, 523, 549, 553, 556, 558, 560, 588, 599, 600, 601, 602, 604, 605, 607, 611, 615, 617, 620, 621, 622, 623, 624, 625, 627, 628, 631, 632, 634, 636], "examples_jpeg2k": 70, "examples_overlai": 70, "examples_rgb_color": 70, "examples_ybr_color": 70, "exc": 86, "exce": [140, 142, 599, 621], "except": [44, 48, 50, 51, 57, 77, 85, 86, 87, 98, 133, 134, 135, 158, 174, 176, 187, 200, 215, 253, 262, 302, 553, 588, 599, 602, 604, 607, 608, 611, 612, 615, 617, 618, 620, 624, 626, 628, 631, 634], "excess": [145, 147, 151, 599, 611, 620], "exclud": [24, 26, 27, 28, 53, 133, 216, 252, 261, 284], "exclude_s": [24, 26], "exclus": 553, "exec": [599, 621], "execut": [5, 13, 19, 21, 132, 558, 622], "exist": [9, 16, 30, 35, 39, 43, 44, 53, 54, 110, 133, 134, 135, 168, 176, 187, 200, 224, 232, 269, 278, 281, 293, 599, 619, 620, 623, 624, 625, 631], "exit": [0, 14, 24, 26, 27, 28], "exp": 553, "expand": [10, 26, 28, 283, 523, 560, 599, 618, 625, 628], "expand_ybr422": [599, 618, 620], "expandtab": [523, 560], "expans": [599, 617], "expect": [38, 43, 133, 134, 135, 145, 147, 151, 216, 217, 219, 222, 252, 253, 261, 265, 267, 284, 288, 290, 599, 609, 611, 615, 619, 624, 631], "experiment": [599, 606, 632], "explain": 54, "explan": [37, 38, 39, 634], "explanatori": 636, "explicit": [2, 12, 20, 26, 28, 40, 45, 46, 48, 57, 90, 133, 134, 135, 149, 160, 162, 163, 167, 187, 200, 219, 235, 237, 238, 253, 254, 263, 278, 282, 293, 305, 523, 550, 558, 599, 602, 603, 611, 612, 614, 617, 620, 626, 631, 634], "explicitli": [50, 51, 89, 599, 610, 617, 628], "explicitvrlittleendian": [12, 32, 632], "explor": [26, 27, 48], "expon": 553, "exponenti": 553, "export": [24, 26, 44, 599, 617], "exposur": 20, "expr": 214, "express": [26, 27, 523, 560, 630], "extend": [42, 45, 46, 68, 133, 134, 135, 140, 142, 143, 145, 147, 151, 215, 232, 246, 252, 261, 263, 281, 295, 599, 615, 620, 631], "extended_length": 68, "extended_offset": [68, 145, 147, 151, 252, 261], "extendedoffsett": [45, 142, 143, 631], "extendedoffsettablelength": [45, 142, 143, 631], "extens": [43, 79, 134, 599, 610, 617], "extern": [107, 599, 615, 617], "extra": [26, 28, 29, 43, 253, 599, 620, 630, 632], "extract": 98, "extrem": [599, 619], "ez_setup": [599, 607], "f": [0, 2, 3, 4, 8, 9, 10, 11, 12, 18, 20, 32, 129, 133, 134, 135, 174, 176, 265, 267, 288, 290, 523, 560, 624, 628, 631, 636], "f1ae573d9de5": [599, 606], "facilit": 253, "fact": [98, 626], "factor": [20, 52, 599, 606, 636], "factori": [215, 253, 262, 301, 552, 599, 602, 617, 620], "fail": [30, 35, 98, 133, 134, 135, 599, 602, 603, 608, 624, 625, 628], "failur": [57, 523, 560, 599, 614, 620, 624], "fairli": [54, 631], "fall": [223, 268], "fallback": [228, 273, 599, 610], "fals": [3, 4, 10, 14, 29, 30, 32, 35, 44, 48, 54, 57, 68, 70, 81, 82, 83, 86, 89, 91, 94, 95, 96, 97, 98, 102, 103, 104, 107, 116, 117, 126, 127, 129, 131, 133, 134, 135, 137, 140, 142, 160, 162, 163, 164, 166, 170, 171, 176, 178, 179, 182, 183, 184, 187, 200, 213, 219, 221, 232, 233, 252, 253, 254, 262, 265, 267, 276, 279, 281, 282, 288, 290, 291, 294, 299, 523, 550, 552, 553, 554, 556, 560, 562, 563, 564, 565, 566, 567, 568, 572, 573, 574, 576, 577, 579, 580, 584, 599, 605, 609, 614, 617, 619, 626, 628, 631, 632, 634, 636], "famili": [558, 631], "familiar": [41, 54, 626, 628, 634, 636], "family_comma_given": [9, 558], "family_nam": [558, 599, 617], "family_name_ideograph": 558, "family_name_phonet": 558, "far": [46, 129, 631], "farm": 558, "fast": [213, 301], "faster": [46, 599, 602, 614, 617], "fatq": 20, "favor": [599, 604, 618], "fc790f01f5": [599, 603], "fd": [20, 32], "fe": 152, "featur": [44, 54, 599, 607, 623, 624], "feedback": [599, 606], "fetch": [45, 51, 631], "fetch_data_fil": 630, "fewer": [160, 162, 163, 252, 562], "ff": [20, 152], "ffee": 152, "fffc": [2, 20, 26, 28, 626], "fffe": [149, 152, 153, 154], "ffffp10": [554, 557], "fidel": [20, 48], "fiduci": 174, "field": [11, 20, 26, 28, 43, 91, 129, 131, 149, 296, 523, 551, 555, 559, 560, 599, 617], "fifth": 558, "fig": [3, 634, 636], "fil": 20, "file": [2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 19, 21, 25, 27, 28, 43, 44, 46, 47, 48, 49, 50, 51, 52, 55, 70, 73, 75, 86, 90, 95, 101, 105, 106, 107, 108, 110, 133, 134, 135, 137, 141, 143, 157, 158, 161, 162, 164, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 187, 189, 198, 199, 200, 202, 203, 204, 213, 232, 252, 253, 265, 267, 281, 288, 290, 588, 600, 601, 602, 604, 605, 608, 611, 612, 614, 615, 617, 618, 619, 620, 622, 624, 625, 626, 629, 631, 632, 634], "file_meta": [2, 12, 20, 26, 27, 28, 32, 43, 45, 46, 48, 133, 134, 135, 137, 141, 142, 143, 187, 200, 254, 282, 599, 602, 614, 620, 628, 631, 632, 634], "file_metadata": [599, 604], "file_path": [14, 213], "file_set": [175, 177], "file_value_tel": 129, "filebas": [14, 71, 149, 152, 157, 199, 588], "filedataset": [70, 107, 166, 170, 187, 588, 599, 602, 604, 617, 618, 620, 626, 628, 634], "fileexistserror": [133, 134, 135, 187, 599, 620], "fileid": 175, "fileinst": [10, 176, 177, 588, 599, 620, 628], "filemetadataset": [12, 24, 26, 32, 134, 137, 141, 142, 143, 169, 187, 200, 588, 599, 614, 626, 632], "filenam": [24, 26, 27, 28, 105, 106, 107, 108, 133, 134, 135, 168, 169, 176, 178, 187, 599, 614, 620, 624, 628], "filename_or_obj": [134, 168], "fileobj": [170, 626], "fileobj_typ": [134, 168], "fileread": [71, 213, 588, 625, 626], "fileset": [10, 588, 599, 615, 617, 618, 620], "filespec": [24, 25, 26, 27, 28], "filespec_help": [25, 26], "filespec_pars": [25, 26], "filetyp": [25, 26], "fileutil": [71, 588], "filewrit": [71, 133, 134, 135, 588, 626], "fill": [4, 29, 523, 560, 624, 625], "fillchar": [523, 560], "filter": [20, 26, 27, 133, 134, 135, 297], "final": [2, 17, 107, 140, 145, 146, 147, 187, 626, 631, 632, 636], "find": [10, 17, 20, 23, 25, 26, 45, 94, 133, 134, 135, 169, 176, 181, 182, 183, 185, 186, 523, 560, 624, 625, 626, 628, 632, 635, 636], "find_byt": [71, 182, 183, 599, 606], "find_delimit": [71, 183], "find_valu": [10, 176, 628], "finit": [553, 561], "first": [3, 20, 26, 28, 33, 37, 38, 39, 40, 43, 44, 48, 51, 53, 54, 68, 77, 78, 80, 98, 107, 131, 133, 134, 135, 145, 146, 147, 148, 149, 151, 152, 155, 156, 171, 176, 184, 215, 250, 253, 254, 265, 267, 282, 286, 288, 290, 295, 296, 523, 553, 558, 560, 599, 610, 611, 612, 620, 623, 624, 625, 628, 631, 632, 634, 636], "firstnam": 12, "fit": [599, 609], "five": [54, 558], "fivechamb": 596, "fix": [29, 133, 134, 135, 167, 210, 211, 607, 623, 624, 626], "fix_meta_info": [599, 610, 620], "fixer": [599, 608, 620], "fixm": 2, "fl": [20, 26, 28, 32, 626], "flag": [16, 20, 44, 97, 133, 134, 135, 171, 176, 181, 182, 183, 553, 599, 614, 617, 628], "flat": 628, "flatten": [133, 134, 135], "flexibl": [599, 620], "flip": [2, 8, 20], "float": [11, 32, 34, 37, 43, 51, 54, 82, 89, 129, 133, 134, 135, 164, 166, 167, 168, 170, 184, 214, 219, 232, 252, 261, 281, 291, 552, 553, 554, 555, 556, 557, 561, 577, 592, 599, 605, 606, 612, 615, 617, 619, 621, 626, 631, 634], "float32": 632, "float64": [225, 227, 229, 230, 270, 272, 274, 275, 566, 632], "floatpixeldata": [29, 30, 51, 252, 261, 285, 599, 617, 632, 634], "fly": [599, 615], "fma": [553, 635], "fname": 4, "focal": 20, "folder": [599, 602, 620], "follow": [10, 25, 26, 27, 28, 29, 30, 35, 37, 40, 43, 44, 45, 46, 51, 54, 68, 70, 133, 134, 135, 137, 148, 149, 152, 176, 184, 187, 200, 231, 232, 253, 262, 265, 267, 278, 280, 281, 288, 290, 293, 523, 553, 558, 560, 599, 612, 615, 617, 620, 621, 624, 625, 626, 628, 631, 632, 635, 636], "font": 0, "foo": [35, 630], "for_addit": [175, 628], "for_mov": 175, "for_remov": 175, "forc": [16, 29, 133, 134, 135, 158, 166, 170, 171, 176, 187, 232, 281, 599, 603, 605, 607, 626], "force_encod": [187, 599, 620], "force_implicit": 176, "force_rgb": 29, "force_ybr": 29, "foreign": [20, 599, 600], "forg": [630, 631, 632, 634, 636], "forget": [18, 53], "fork": [599, 619, 624, 625, 630], "form": [20, 40, 50, 51, 52, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 129, 133, 134, 135, 253, 265, 267, 288, 290, 300, 549, 558, 634], "format": [6, 7, 12, 13, 20, 24, 26, 27, 28, 32, 35, 43, 44, 46, 129, 133, 134, 135, 140, 142, 144, 149, 166, 187, 202, 219, 222, 523, 551, 553, 554, 555, 558, 559, 560, 577, 599, 600, 601, 602, 608, 611, 617, 618, 620, 622, 626, 628, 630, 631, 634], "format_map": [523, 560], "format_number_as_d": [61, 599, 617], "format_str": 558, "formatted_lin": [133, 134, 135, 599, 601], "found": [10, 48, 50, 51, 52, 107, 133, 134, 135, 166, 171, 176, 181, 184, 253, 262, 297, 523, 560, 599, 621, 626, 628, 630, 631, 634], "found_at": 181, "foundat": 635, "four": [54, 98, 176, 184], "fourchamb": 596, "fourth": 558, "fp": [16, 149, 152, 157, 164, 166, 167, 171, 172, 173, 180, 181, 182, 183, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "fpa": 20, "fraction": [26, 27, 28], "fractiongroupnumb": [24, 26], "fractiongroupsequ": [24, 26, 27, 28], "fragment": [51, 68, 138, 139, 140, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 599, 612, 620], "fragments_per_fram": [54, 140], "frame": [2, 8, 20, 29, 30, 32, 35, 36, 38, 40, 42, 45, 46, 51, 68, 70, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 216, 221, 224, 232, 233, 236, 252, 253, 255, 261, 262, 263, 264, 265, 266, 267, 269, 276, 278, 281, 288, 289, 290, 292, 293, 599, 608, 610, 612, 617, 620, 621, 634], "frame1": [140, 141, 143], "frame2": [140, 141, 143], "frame3": [141, 143], "frame_iter": 631, "frame_length": [252, 261], "framework": 630, "free": [37, 38, 133, 134, 135], "frequenc": [2, 8, 20, 52, 636], "frequent": 628, "friendli": [523, 626, 628], "from": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 57, 68, 70, 73, 77, 78, 80, 82, 85, 86, 92, 98, 109, 110, 119, 120, 129, 130, 131, 132, 133, 134, 135, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 157, 160, 161, 162, 163, 164, 165, 168, 171, 174, 175, 176, 177, 178, 185, 186, 187, 199, 200, 202, 207, 210, 211, 215, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 231, 232, 233, 234, 252, 253, 254, 261, 265, 267, 269, 270, 271, 272, 276, 277, 278, 280, 281, 282, 288, 290, 293, 295, 523, 549, 551, 553, 554, 555, 557, 558, 559, 560, 562, 580, 596, 599, 602, 603, 604, 605, 606, 607, 610, 611, 614, 615, 616, 617, 620, 621, 622, 624, 625, 626, 628, 630, 631, 632, 634, 635, 636], "from_byt": [299, 556], "from_float": 553, "from_json": [129, 133, 134, 135, 599, 612, 615, 627], "from_named_compon": [558, 599, 617], "from_named_components_veterinari": [558, 599, 617], "fromhex": [554, 557], "fromisocalendar": [551, 555], "fromisoformat": [551, 555, 559], "fromordin": [551, 555], "fromtimestamp": [551, 555], "front": [523, 560, 624], "full": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 26, 38, 48, 107, 134, 166, 252, 553, 599, 608, 609, 610, 615, 628], "func": [25, 26, 132, 207, 625], "function": [17, 20, 25, 26, 27, 29, 30, 32, 35, 37, 38, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 59, 60, 68, 70, 71, 73, 75, 82, 92, 99, 103, 110, 111, 129, 132, 133, 134, 135, 138, 139, 149, 150, 152, 157, 164, 167, 169, 170, 174, 176, 185, 186, 187, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 234, 252, 253, 254, 261, 262, 265, 267, 268, 269, 277, 282, 283, 288, 290, 297, 300, 467, 551, 552, 553, 555, 561, 584, 585, 588, 589, 591, 594, 595, 599, 600, 601, 602, 607, 608, 610, 611, 612, 615, 617, 620, 625, 626, 627, 628, 631, 632, 634, 636], "further": [40, 628, 631, 634, 635], "furthermor": 561, "furthest": [177, 185, 186], "fuse": 553, "futur": [47, 97, 133, 134, 135, 599, 605, 615, 635], "future_behavior": [44, 588, 599, 615], "f\u00e9lix": [599, 606], "g": [2, 8, 9, 11, 12, 17, 20, 22, 24, 26, 27, 30, 35, 39, 40, 43, 44, 50, 51, 54, 57, 86, 129, 133, 134, 135, 136, 166, 215, 216, 253, 262, 295, 551, 553, 558, 583, 599, 602, 609, 611, 615, 620, 626, 632], "g1": 40, "g2": 40, "gain": 20, "galleri": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 622], "gantri": [11, 20, 26, 28], "gantryangl": 11, "gb18030": 22, "gcc": 625, "gdcm": [30, 35, 39, 45, 46, 133, 134, 135, 217, 232, 243, 244, 245, 246, 247, 248, 249, 250, 260, 281, 599, 602, 608, 611, 615, 617, 618, 620, 621, 634], "gdcm_fix_big_endian": 29, "gdcm_handler": 98, "ge": 20, "ge_genesis_ff": [20, 48], "gems_acqu_01": 20, "gems_iden_01": [20, 48], "gems_imag_01": 20, "gems_imps_01": 20, "gems_parm_01": 20, "gems_pati_01": 20, "gems_rela_01": 20, "gems_sers_01": 20, "gems_stdy_01": 20, "gender": 54, "gener": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 25, 26, 27, 35, 39, 43, 44, 46, 53, 133, 134, 135, 138, 139, 148, 154, 164, 170, 178, 232, 254, 278, 281, 282, 293, 295, 300, 523, 549, 557, 584, 599, 601, 602, 606, 608, 620, 623, 625, 631], "generate_filenam": [588, 599, 620], "generate_frag": [138, 139, 149, 157, 599, 620], "generate_fragmented_fram": [148, 599, 620], "generate_fram": [138, 139, 150, 221, 599, 620, 634], "generate_instance_uid": [133, 134, 135, 232, 254, 278, 281, 282, 293, 631], "generate_multiplex": [3, 133, 134, 135, 584, 599, 615, 636], "generate_pixel_data": [599, 612, 620], "generate_pixel_data_frag": [599, 620], "generate_pixel_data_fram": [599, 620], "generate_uid": [10, 39, 133, 134, 135, 176, 232, 254, 278, 281, 282, 293, 599, 611, 620], "genesi": 20, "geometri": 0, "get": [2, 9, 10, 14, 26, 27, 32, 43, 44, 46, 48, 49, 50, 51, 52, 54, 57, 94, 98, 129, 133, 134, 135, 160, 162, 163, 174, 291, 588, 599, 602, 603, 611, 615, 617, 624, 625, 629, 630, 631, 634], "get_charset_fil": 588, "get_data": 252, "get_decod": [588, 634], "get_encod": 588, "get_entri": 120, "get_expected_length": [216, 599, 620], "get_fram": [261, 599, 620, 634], "get_frame_offset": [599, 612, 620], "get_image_pixel_id": [599, 620], "get_item": [133, 134, 135, 599, 620], "get_j2k_paramet": [599, 620], "get_nr_fram": [599, 620], "get_opt": [30, 35, 252, 261], "get_overlay_arrai": 216, "get_palette_fil": [588, 599, 612], "get_path": [43, 51, 70, 588, 626, 628, 634], "get_pixeldata": [98, 217, 218, 219, 220, 221, 222], "get_private_entri": 119, "get_private_item": [133, 134, 135], "get_tag": 136, "get_testdata_fil": [9, 10, 11, 588, 599, 615, 617, 618, 620, 625], "gggg": 626, "ggggeeee": 299, "gildong": [22, 558], "git": [24, 26, 27, 624, 625, 630], "github": [23, 599, 608, 623, 624, 625, 630], "give": [553, 561, 599, 601, 602, 626], "given": [2, 11, 24, 26, 27, 28, 29, 32, 37, 38, 46, 52, 68, 78, 80, 129, 130, 132, 133, 134, 135, 136, 137, 145, 147, 160, 162, 163, 166, 168, 174, 176, 187, 216, 219, 221, 222, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 283, 299, 523, 553, 554, 556, 558, 560, 577, 584, 599, 614, 617, 626, 628, 630, 631, 634, 636], "given_nam": [558, 599, 617], "given_name_ideograph": 558, "given_name_phonet": 558, "glob": [4, 10, 105, 106, 108, 628], "global": [100, 208, 599, 618], "glossari": [37, 38, 39, 41, 634], "glow": 20, "gmail": [2, 8, 9, 11, 12, 17, 20, 22], "gn": 40, "go": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 169, 624, 625, 626, 628, 630, 632], "gone": 625, "good": [53, 54, 624, 625, 631], "googl": 623, "got": 625, "goyett": [599, 607], "gracefulli": [599, 615, 620], "grai": [9, 49, 634], "graphic": [0, 51], "grayscal": [30, 33, 35, 37, 38, 39, 40, 51, 133, 134, 135, 278, 293, 634], "greater": [32, 40, 57, 133, 134, 135, 144, 149, 232, 278, 281, 292, 293, 549, 553, 599, 608, 620, 627], "greek": [599, 600], "green": [33, 37, 38, 39, 40, 599, 614], "gregorian": [551, 555], "grep": [26, 27], "greyscal": [37, 38], "grid": 0, "group": [2, 12, 17, 20, 26, 27, 28, 40, 43, 48, 50, 52, 119, 121, 129, 133, 134, 135, 136, 137, 166, 174, 176, 187, 200, 216, 252, 261, 265, 267, 288, 290, 299, 300, 301, 558, 584, 588, 599, 602, 605, 609, 614, 615, 623, 624, 626, 634, 636], "group_dataset": [133, 134, 135, 634], "group_elem": 301, "grouplength": 121, "guarante": [44, 46, 48, 553], "gui": [599, 600], "guid": [30, 35, 42, 45, 54, 133, 134, 135, 232, 281, 588, 599, 611, 617, 620, 623, 625, 626, 631], "guillaum": [2, 8, 9, 11, 12, 17, 20, 22], "gunnar": [599, 606], "gzip": [599, 605, 611], "h": [2, 8, 12, 20, 22, 24, 26, 27, 28], "ha": [2, 10, 14, 20, 23, 24, 25, 26, 27, 30, 32, 35, 37, 38, 39, 40, 44, 45, 48, 51, 53, 54, 83, 90, 92, 129, 133, 134, 135, 144, 145, 147, 149, 151, 152, 167, 168, 175, 176, 177, 187, 188, 199, 215, 216, 217, 218, 219, 220, 221, 222, 252, 254, 261, 266, 282, 287, 289, 299, 523, 549, 550, 552, 553, 560, 584, 599, 601, 602, 604, 609, 610, 612, 613, 614, 619, 620, 624, 625, 626, 627, 628, 630, 631, 632, 634, 636], "habit": 626, "had": [133, 134, 135, 254, 282, 550, 599, 610, 617, 624], "halchenko": [599, 607], "halv": 283, "hand": [40, 53, 553, 599, 615], "handi": 43, "handl": [47, 48, 51, 53, 77, 98, 129, 133, 134, 135, 183, 201, 523, 560, 585, 588, 599, 600, 603, 605, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 619, 620, 626, 627, 630, 634], "handler": [45, 54, 81, 95, 98, 133, 134, 135, 216, 217, 218, 219, 220, 221, 222, 584, 588, 599, 608, 610, 612, 613, 614, 615, 617, 618, 620, 624, 627], "handler_nam": [133, 134, 135], "hang": 174, "happi": [624, 625], "harder": 43, "has_bot": [140, 141, 142], "has_inst": 177, "hasattr": 4, "hash": [549, 599, 611, 617], "hasn": [148, 624, 625], "have": [12, 14, 25, 26, 27, 28, 32, 33, 37, 38, 39, 40, 43, 44, 45, 46, 48, 50, 51, 53, 54, 98, 129, 133, 134, 135, 137, 140, 142, 145, 146, 149, 152, 166, 169, 176, 178, 187, 200, 216, 219, 221, 222, 231, 232, 252, 253, 261, 262, 265, 266, 267, 280, 281, 288, 289, 290, 523, 550, 553, 560, 563, 574, 584, 599, 605, 608, 610, 611, 614, 618, 620, 621, 623, 624, 625, 626, 627, 628, 630, 631, 632, 634, 636], "haven": [54, 599, 620, 624, 626], "hdr": 20, "head": [10, 54, 628], "header": [20, 37, 158, 166, 171, 599, 601, 620, 626], "health": [24, 26, 53], "height": 20, "helic": 20, "hello": [16, 626], "help": [14, 24, 25, 26, 27, 28, 44, 45, 48, 167, 599, 602, 610, 617, 619, 623, 624, 625], "helper": 136, "henc": [40, 187], "here": [10, 24, 26, 28, 30, 35, 48, 55, 100, 133, 134, 135, 183, 253, 262, 625, 626, 627, 628, 635], "heurist": [167, 599, 608], "hex": [50, 54, 129, 133, 134, 135, 136, 554, 557, 599, 602], "hexadecim": [554, 557, 626], "hf": [2, 8, 20], "hh": [555, 559], "hierarch": [6, 21, 148, 249, 250, 292, 599, 612, 622], "hierarchi": [176, 628], "high": [2, 8, 20, 40, 46, 54, 112, 133, 134, 135, 239, 240, 241, 278, 293, 599, 612, 632, 634], "highbit": [631, 632], "higher": [37, 39, 41, 133, 134, 135, 151, 553, 599, 602, 627], "highest": [523, 560, 599, 617], "highli": [599, 619], "hint": 32, "hispe": 20, "histogram": 20, "histori": 20, "hold": [215, 295, 299, 556], "holmberg": [599, 607], "holog": [599, 618], "home": [70, 628], "hong": [22, 558], "hood": 43, "hook": [99, 132, 588, 599, 620], "horiz": 20, "horizont": 283, "hors": 558, "host": [20, 299, 556], "hot_iron": [223, 268], "hot_metal_blu": [223, 268], "hounsfield": [51, 634], "hour": [555, 559], "how": [2, 3, 8, 9, 10, 12, 14, 16, 17, 18, 20, 24, 26, 30, 35, 40, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 110, 129, 145, 146, 176, 599, 600, 604, 624, 625, 626, 627, 628, 629, 631, 632, 634, 636], "howev": [10, 25, 26, 29, 32, 33, 37, 38, 39, 40, 42, 43, 45, 46, 133, 134, 135, 148, 149, 152, 215, 278, 293, 557, 624, 625, 626, 628, 631, 634], "htj2k": [42, 263, 599, 620], "htj2klossless": [599, 620], "htj2klosslessrpcl": [599, 620], "html": [54, 625], "http": [23, 54, 624, 625, 627, 630], "hu": [51, 634], "human": [523, 558, 626], "hypothet": 54, "hz": [3, 52, 636], "i": [0, 2, 3, 4, 10, 17, 20, 22, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 61, 66, 70, 72, 74, 77, 78, 80, 82, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 97, 98, 104, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 142, 145, 147, 148, 149, 150, 151, 152, 153, 154, 158, 160, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 199, 200, 201, 204, 207, 210, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 252, 253, 254, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 302, 523, 549, 551, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 572, 573, 574, 576, 577, 579, 580, 585, 586, 596, 599, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 621, 623, 624, 625, 626, 627, 628, 630, 631, 632, 634, 635, 636], "i2": 631, "ibh": 20, "icc": [224, 234, 269, 277, 599, 620], "icc_profil": [234, 277], "icon": [624, 625], "id": [0, 2, 8, 9, 10, 12, 17, 20, 48, 133, 134, 135, 136, 175, 176, 177, 178, 179, 285, 599, 601, 618, 626, 628], "id00001": [26, 28], "idea": [624, 625], "ideal": 46, "iden": 20, "ident": [553, 599, 605, 634], "identif": 10, "identifi": [32, 40, 44, 48, 53, 196, 297, 523, 560, 599, 620], "ideograph": 558, "idx": 0, "ie": 129, "iec": [37, 38, 40, 45, 233, 276, 286, 401, 406, 409, 413, 549, 631], "ignor": [44, 57, 77, 85, 86, 112, 129, 133, 134, 135, 180, 523, 553, 560, 578, 588, 599, 613, 617, 620, 625], "ii": [626, 636], "iii": 636, "illustr": [1, 3, 4, 6, 7, 8, 9, 15, 16, 18, 20, 37, 38, 43, 55, 631], "im": [2, 632, 634], "im000000": [10, 628], "im000001": [10, 628], "im000002": [10, 628], "im000003": [10, 628], "im000004": 10, "im000005": 10, "im000006": 10, "im1": 634, "im2": 634, "imag": [5, 8, 9, 10, 12, 17, 20, 26, 28, 30, 34, 35, 36, 42, 45, 46, 47, 48, 50, 51, 70, 133, 134, 135, 141, 142, 143, 144, 148, 149, 152, 174, 176, 217, 219, 220, 221, 222, 223, 231, 232, 233, 236, 239, 240, 241, 243, 244, 247, 248, 252, 253, 254, 255, 256, 257, 258, 259, 261, 263, 264, 265, 267, 268, 276, 278, 280, 281, 282, 284, 287, 288, 290, 291, 292, 293, 299, 554, 556, 557, 591, 594, 599, 602, 609, 611, 615, 617, 620, 621, 622, 626, 628, 630, 632, 634], "image_handl": [599, 610, 611], "image_process": [5, 622], "imagecm": [224, 234, 269, 277], "imagecmstransform": [224, 234, 269, 277], "imagecodec": [30, 35], "imageri": 634, "imagetyp": 626, "imaginari": [299, 554, 556, 557], "img2d": 4, "img3d": 4, "img_shap": 4, "imit": 97, "immedi": 51, "immut": [29, 253, 551, 555, 559, 599, 611], "implant": [174, 176], "implement": [2, 12, 20, 26, 27, 28, 30, 35, 43, 48, 53, 137, 162, 163, 200, 459, 523, 560, 599, 615, 626], "implementationclassuid": 12, "implicit": [16, 26, 27, 40, 43, 46, 90, 133, 134, 135, 160, 162, 163, 164, 167, 176, 187, 219, 242, 263, 523, 550, 572, 599, 602, 609, 611, 617, 620], "implicit_vr": [133, 134, 135, 187, 523, 550, 599, 620], "implicitli": 45, "import": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 30, 32, 33, 35, 37, 38, 39, 40, 43, 44, 45, 46, 48, 49, 50, 51, 52, 70, 85, 86, 109, 110, 129, 133, 134, 135, 141, 142, 143, 174, 176, 207, 210, 211, 232, 253, 262, 265, 267, 281, 288, 290, 523, 549, 596, 599, 605, 608, 620, 621, 624, 625, 626, 627, 628, 630, 631, 632, 634, 635, 636], "import_path": [253, 262], "importantli": [628, 634], "importerror": [217, 218, 220, 566, 568, 599, 616, 624], "imposs": 176, "improp": [599, 612, 614], "improv": [44, 599, 606, 609, 610, 617, 619, 620, 621, 623, 631], "imshow": [4, 9, 49, 632, 634], "imxxxxxx": 176, "includ": [24, 25, 26, 29, 44, 50, 53, 129, 133, 134, 135, 140, 174, 176, 187, 216, 252, 261, 284, 302, 523, 553, 555, 559, 560, 588, 599, 601, 603, 605, 607, 608, 620, 621, 624, 625, 626, 628, 631, 636], "include_orphan": 176, "inclus": 40, "incompat": [599, 602, 608, 630], "incorrect": [148, 253, 262, 599, 603, 609, 611, 612, 620], "incorrectli": [599, 600], "incorrectmodalityworklistentri": 635, "increas": [37, 133, 134, 135, 232, 281, 599, 602, 619, 631], "increment": [20, 178], "incur": 561, "indent": [8, 133, 134, 135, 177, 626], "indent_char": [133, 177], "indent_format": [133, 134, 135], "indent_str": 8, "independ": 187, "index": [26, 28, 33, 37, 38, 39, 43, 51, 52, 131, 133, 134, 135, 151, 176, 177, 178, 215, 228, 229, 230, 252, 253, 261, 262, 267, 273, 274, 275, 290, 295, 296, 523, 560, 584, 599, 615, 620, 625, 634, 636], "indexerror": [215, 295], "indic": [2, 8, 20, 40, 48, 50, 68, 98, 129, 133, 134, 135, 160, 162, 163, 253, 265, 288, 299, 553, 556, 599, 606, 624, 625, 626, 634], "indirectli": [30, 35], "individu": [53, 233, 276, 558, 596, 599, 605, 615, 617], "inequ": [599, 609, 610], "inexact": 553, "inf": [553, 561], "infer_sq_for_un_vr": [57, 599, 618], "infil": 626, "infin": [553, 554, 557], "infinit": 553, "info": [11, 20, 164, 167, 170, 182, 183, 184, 523, 599, 602, 603, 605, 607], "inform": [2, 6, 7, 8, 9, 12, 13, 20, 24, 26, 27, 28, 31, 36, 41, 43, 45, 48, 51, 53, 54, 81, 101, 129, 133, 134, 135, 137, 166, 169, 171, 187, 200, 232, 253, 254, 262, 265, 267, 281, 282, 288, 290, 558, 599, 600, 602, 605, 608, 612, 614, 615, 620, 622, 624, 625, 626, 631, 634, 636], "inherit": [32, 141, 143, 599, 617, 620], "init": [599, 617], "init_valu": 135, "initi": [54, 134, 135, 136, 182, 183, 207, 215, 295, 558, 624, 634], "initial_byt": 160, "initialis": [599, 620], "inlin": [133, 134, 135, 599, 620, 627], "inlinebinari": [129, 133, 134, 135], "input": [20, 24, 26, 51, 215, 224, 233, 252, 266, 269, 276, 289, 558, 599, 615, 621], "input_output": [13, 622], "insensit": [43, 133, 134, 135, 297], "insert": [0, 215, 295, 523, 560, 625, 626], "insid": [17, 599, 601, 632], "instal": [44, 46, 55, 98, 133, 134, 135, 221, 253, 254, 262, 265, 267, 282, 288, 290, 599, 600, 607, 617, 625, 626, 629, 631, 632, 634, 636], "instanc": [2, 8, 10, 12, 20, 26, 27, 28, 30, 32, 35, 39, 43, 46, 48, 51, 53, 70, 79, 89, 129, 130, 132, 133, 134, 135, 137, 141, 143, 160, 162, 163, 166, 167, 174, 175, 176, 177, 187, 200, 207, 215, 223, 224, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 268, 269, 278, 281, 282, 288, 290, 293, 295, 298, 523, 552, 553, 554, 560, 587, 592, 593, 599, 611, 617, 620, 621, 626, 631, 632, 634, 635], "instancecreationd": [24, 26], "instancecreationtim": [24, 26], "instancenumb": 628, "instead": [2, 29, 35, 38, 43, 51, 52, 53, 57, 92, 93, 96, 99, 130, 133, 134, 135, 148, 149, 150, 152, 157, 164, 174, 176, 187, 207, 232, 253, 281, 523, 557, 558, 560, 585, 586, 599, 602, 605, 609, 610, 611, 614, 615, 617, 618, 620, 624, 625, 626, 627, 628, 630, 632, 634, 636], "institut": [2, 8, 20], "instruct": [624, 625, 626], "int": [29, 30, 32, 34, 35, 43, 57, 68, 78, 86, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 140, 144, 145, 147, 148, 150, 151, 152, 154, 155, 156, 160, 162, 163, 164, 165, 166, 167, 170, 172, 173, 176, 177, 178, 181, 182, 183, 184, 199, 214, 215, 216, 224, 228, 229, 230, 232, 233, 234, 252, 253, 261, 262, 265, 266, 267, 269, 273, 274, 275, 276, 277, 278, 281, 283, 284, 285, 286, 287, 288, 289, 290, 293, 295, 299, 300, 301, 523, 551, 552, 553, 554, 555, 556, 557, 558, 560, 572, 577, 580, 584, 626, 630, 632], "int16": [43, 51, 52, 133, 134, 135, 278, 293, 632, 634, 636], "int64": 568, "int8": [133, 134, 135, 278, 293], "integ": [29, 30, 32, 35, 38, 40, 51, 152, 215, 252, 261, 266, 287, 289, 291, 295, 299, 523, 549, 553, 554, 556, 557, 560, 599, 603, 605, 615, 631, 634, 636], "integr": 20, "intend": [30, 33, 35, 39, 40, 133, 134, 135, 252, 261, 262, 624, 631], "intens": [33, 34, 37, 38, 39, 40, 631], "intent": [224, 234, 269, 277], "intention": [523, 560], "interact": [10, 43, 48, 133, 134, 135, 628], "intercept": [20, 43, 225, 227, 270, 272], "interchang": [51, 628], "interest": [14, 50, 623, 626, 634], "interfac": [27, 41, 297, 596, 599, 617, 620, 630], "interleav": [34, 38, 636], "interleave_mod": 34, "intermedi": [43, 55, 553], "intern": [129, 133, 134, 135, 164, 606], "interpret": [2, 8, 20, 29, 33, 39, 40, 50, 51, 133, 134, 135, 217, 218, 219, 220, 221, 222, 232, 233, 252, 253, 254, 261, 265, 267, 276, 278, 281, 282, 283, 288, 290, 293, 523, 551, 560, 599, 612, 620, 631, 632, 634, 636], "interscan": 20, "interv": [233, 276, 631, 632, 636], "intricaci": 253, "introduc": [599, 618, 624, 631, 634], "introduct": [28, 35, 47, 55, 624, 625, 628, 629, 633, 636], "intuit": 631, "invalid": [44, 57, 77, 78, 86, 90, 91, 137, 210, 287, 549, 599, 611, 615, 617, 619, 620, 621], "invalid_key_behavior": [97, 588, 599, 615], "invalid_keyword_behavior": [97, 588, 599, 615], "invaliddicomerror": [166, 171, 588, 599, 603, 626], "invalidoper": 553, "invers": [40, 551, 553, 555], "io": [14, 16, 32, 129, 134, 141, 143, 160, 162, 163, 588, 599, 620, 626], "iobas": [162, 163], "iod": [40, 187, 291, 628, 632, 636], "ipsum": 549, "ipynb": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "ipython": [133, 134, 135, 297, 599, 600], "ir": [599, 612], "irrevers": 37, "is_arrai": [252, 261], "is_avail": [30, 35, 98, 216, 217, 218, 219, 220, 221, 222, 253, 262, 584, 599, 610], "is_binari": [252, 261], "is_buff": [129, 131, 252, 261], "is_canon": 553, "is_cid": 297, "is_compress": [523, 631, 634], "is_conformant_file_id": 588, "is_dataset": [252, 261], "is_decompress": [133, 134, 135, 599, 621], "is_defl": 523, "is_dicom": [588, 599, 608], "is_empti": 129, "is_encapsul": [253, 262, 523], "is_fil": [10, 628], "is_finit": 553, "is_implicit_vr": [16, 45, 131, 133, 134, 135, 160, 162, 163, 164, 165, 167, 172, 173, 187, 199, 523, 572, 599, 611, 620], "is_infinit": 553, "is_integ": [554, 557], "is_little_endian": [14, 16, 45, 131, 133, 134, 135, 149, 152, 160, 162, 163, 164, 167, 172, 173, 180, 182, 183, 184, 185, 186, 187, 199, 523, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 579, 580, 599, 620], "is_n": [253, 262], "is_nan": 553, "is_norm": 553, "is_original_encod": [133, 134, 135], "is_priv": [43, 129, 175, 299, 523, 599, 608], "is_private_cr": 299, "is_qnan": 553, "is_raw": 131, "is_retir": [16, 109, 110, 111, 119, 120, 129, 523, 599, 608], "is_root": 177, "is_sign": [286, 553], "is_snan": 553, "is_stag": [175, 176, 628], "is_subnorm": 553, "is_transfer_syntax": 523, "is_undefined_length": [45, 129, 133, 134, 135, 254, 282, 599, 612], "is_valid": 523, "is_valid_d": [61, 599, 617], "is_zero": 553, "isalnum": [523, 560], "isalpha": [523, 560], "isascii": [523, 560], "isdecim": [523, 560], "isdigit": [523, 560], "isfloat": [61, 599, 619], "isidentifi": [523, 560], "isinst": 631, "iskeyword": [523, 560], "islow": [523, 560], "ismultivalu": [599, 611, 614], "isn": [38, 133, 134, 135, 145, 147, 151, 167, 187, 291, 523, 549, 599, 611, 615, 620, 625, 626, 634], "isnumer": [523, 560], "iso": [26, 27, 37, 38, 40, 45, 233, 276, 286, 401, 406, 409, 413, 549, 551, 555, 559, 599, 612, 631], "iso2022_jp": 22, "iso8859": [22, 133, 134, 135, 164, 167, 199, 572], "iso_ir": [10, 20, 26, 28, 48, 79, 626, 627, 628], "iso_ir_100": 626, "isocalendar": [551, 555], "isoformat": [551, 555, 559], "isol": 630, "isovue300": 20, "isoweekdai": [551, 555], "isprint": [523, 560], "isspac": [523, 560], "isstr": [599, 611], "isstringorstringlist": [599, 611], "issu": [24, 26, 28, 30, 35, 38, 53, 77, 78, 80, 88, 133, 134, 135, 287, 599, 602, 603, 604, 605, 606, 611, 620, 621, 623, 624, 630], "issue18": [599, 600], "issue22": [599, 600], "issue27": [599, 600], "issue33": [599, 600], "issue36": [599, 601], "issue38": [599, 601], "issue40": [599, 601], "issue41": [599, 601], "istitl": [523, 560], "isupp": [523, 560], "ital": 54, "italic": 54, "item": [0, 6, 8, 9, 15, 19, 20, 24, 26, 27, 28, 32, 43, 52, 53, 54, 68, 129, 133, 134, 135, 140, 142, 144, 146, 148, 149, 150, 152, 153, 154, 155, 156, 157, 173, 180, 204, 215, 295, 599, 600, 601, 602, 605, 608, 611, 612, 617, 618, 622, 626, 628, 636], "itemdelimitertag": 167, "itemis": 154, "items": [133, 134, 135, 253, 278, 293], "iter": [10, 17, 43, 133, 134, 135, 144, 145, 146, 147, 148, 149, 150, 154, 164, 177, 178, 185, 188, 215, 221, 252, 253, 262, 265, 288, 295, 299, 302, 523, 556, 560, 599, 601, 609, 620, 628, 634], "iter_arrai": [29, 253, 634], "iter_buff": [29, 253], "iter_decod": 252, "iter_encod": [262, 631], "iter_pixel": [29, 46, 133, 134, 135, 588, 599, 620, 632, 634], "iteral": [133, 134, 135, 599, 601], "itis_tsn": 635, "its": [10, 24, 25, 26, 27, 29, 30, 32, 35, 37, 38, 39, 40, 43, 44, 83, 129, 133, 134, 135, 152, 176, 177, 184, 215, 216, 217, 218, 219, 220, 221, 222, 224, 234, 254, 269, 277, 282, 523, 553, 560, 584, 599, 610, 615, 620, 626, 628, 631, 634], "itself": [10, 39, 43, 48, 54, 107, 162, 163, 185, 186, 523, 560, 599, 615, 624, 625, 628], "itu": [37, 38, 233, 276, 549, 631], "iv": 20, "j": 22, "j2k": [32, 141, 143, 599, 620], "j2k_cr": [37, 133, 134, 135, 232, 281, 631], "j2k_psnr": [37, 133, 134, 135, 232, 281, 631], "jame": 14, "jan": [85, 626], "januari": [23, 551, 555], "japanes": [599, 600, 605, 608], "jfk": 20, "ji": [599, 611], "jls_error": [38, 133, 134, 135, 232, 281, 631], "joan": [129, 133], "john": [133, 558], "join": [11, 523, 560, 632], "jonathan": [599, 606, 607], "jp2": [37, 286, 599, 620], "jpe2000lossless": 37, "jpeg": [29, 32, 36, 40, 42, 45, 46, 51, 81, 133, 134, 135, 140, 142, 148, 217, 218, 219, 220, 221, 222, 232, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 253, 256, 257, 258, 259, 263, 264, 265, 267, 281, 286, 288, 290, 292, 401, 406, 409, 413, 523, 599, 610, 612, 614, 615, 617, 620, 630, 634], "jpeg2000": [30, 35, 37, 46, 148, 263, 599, 610, 612, 631], "jpeg2000compressedpixeltransfersyntax": [599, 615, 620], "jpeg2000encod": [34, 37, 599, 620], "jpeg2000lossi": [599, 610], "jpeg2000lossless": [32, 141, 142, 143, 631], "jpeg2000losslessencod": [34, 37, 599, 620], "jpeg2000mc": [599, 615, 620], "jpeg2000mclossless": [599, 615, 620], "jpeg2000multicompon": [599, 610, 615, 620, 624], "jpeg2000multicomponentlossless": [599, 610, 615, 620, 624], "jpeg2000transfersyntax": [599, 615, 620], "jpeg2k": [45, 70, 599, 610, 631, 634], "jpeg2kimageplugin": [42, 46], "jpeg_l": [46, 133, 134, 135, 218, 599, 608, 620], "jpeg_ls_handl": 98, "jpegbaselin": [599, 610, 615, 620], "jpegbaseline8bit": [45, 523, 599, 615, 620, 631], "jpegbaselinelossy12bit": [599, 610], "jpegbaselinelossy8bit": [599, 610], "jpegextend": [599, 610, 615, 620], "jpegextended12bit": [599, 615, 620], "jpegimageplugin": 46, "jpeglossless": [599, 615, 620], "jpeglosslessp14": [599, 610], "jpeglosslesssv1": [599, 615, 620], "jpeglossycompressedpixeltransfersyntax": [599, 615, 620], "jpeglslossi": [599, 615, 620], "jpeglslossless": [38, 631], "jpeglslosslessencod": [34, 38, 599, 620], "jpeglsnearlossless": [38, 599, 615, 620, 631], "jpeglsnearlosslessencod": [34, 38, 599, 620], "jpeglssupportedcompressedpixeltransfersyntax": [599, 615, 620], "jpeglstransfersyntax": [599, 615, 620], "jpegtransfersyntax": [599, 615, 620], "jpegxl": [599, 621], "jpegxljpegrecompress": [599, 621], "jpegxllossless": [599, 621], "jpg": [599, 617], "jpiphtj2kreferenc": [599, 620], "jpiphtj2kreferenceddefl": [599, 620], "json": [129, 133, 134, 135, 299, 599, 611, 612, 616, 617, 620, 629], "json_data": 627, "json_dataset": [133, 134, 135], "json_kei": [299, 599, 619], "jsonmodel": 133, "jul": 588, "juli": 23, "julien": [599, 607], "june": 23, "jupyt": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "just": [10, 12, 14, 25, 26, 27, 28, 43, 48, 53, 90, 129, 133, 134, 135, 164, 232, 281, 599, 611, 615, 624, 625, 626, 628, 634], "justifi": [523, 560], "k": [178, 599, 620], "kb": 166, "keep": [37, 133, 134, 135, 176, 232, 254, 281, 282, 628, 630, 631, 632, 634], "keep_def": [133, 134, 135, 599, 620], "keepend": [523, 560], "kei": [4, 34, 43, 86, 129, 133, 134, 135, 136, 174, 177, 216, 231, 280, 297, 299, 523, 560, 599, 615, 624], "kept": [133, 134, 135, 553, 599, 601, 630], "kernel": 20, "keyerror": [113, 114, 115, 117, 118, 119, 120, 123, 124, 125, 133, 134, 135, 599, 620, 626], "keysview": 298, "keyword": [17, 26, 27, 28, 29, 43, 48, 51, 52, 54, 85, 86, 93, 107, 109, 110, 118, 119, 121, 126, 128, 129, 132, 133, 134, 135, 166, 176, 185, 186, 187, 207, 209, 210, 211, 212, 216, 219, 221, 222, 229, 232, 233, 252, 253, 254, 261, 262, 265, 266, 267, 274, 276, 279, 281, 282, 284, 285, 288, 289, 290, 291, 292, 294, 297, 300, 523, 560, 584, 596, 599, 603, 605, 608, 610, 611, 615, 619, 620, 621, 625, 626, 628, 630, 634, 635], "khz": 636, "kind": 48, "klein": [599, 603], "know": [10, 40, 43, 48, 626, 627, 628], "knowledg": 634, "known": [39, 40, 42, 43, 44, 48, 51, 57, 85, 97, 129, 130, 133, 134, 135, 223, 268, 299, 301, 556, 599, 609, 612, 614, 615, 617, 626, 635], "korean": [558, 599, 605], "kvp": 20, "kwarg": [132, 133, 134, 135, 160, 161, 162, 163, 176, 187, 207, 209, 210, 211, 212, 231, 232, 252, 253, 254, 261, 262, 265, 267, 280, 281, 282, 288, 290, 523, 551, 555, 558, 559, 560], "l": [20, 23, 29, 36, 42, 45, 46, 133, 134, 135, 148, 232, 247, 248, 253, 258, 259, 263, 264, 265, 267, 281, 288, 290, 292, 406, 599, 610, 620, 630], "label": [22, 26, 28, 30, 35, 253, 262], "lack": 626, "lambda": 4, "lami": [599, 607], "landmark": 20, "languag": [599, 600, 605], "larg": [20, 32, 45, 48, 53, 133, 134, 135, 136, 140, 142, 167, 184, 232, 281, 552, 599, 601, 602, 609, 611, 612, 615, 617, 631, 634, 636], "large_compressed_dataset": 32, "large_dataset": 32, "larger": [24, 26, 166, 278, 293, 553, 630], "largest": [2, 8, 20, 553], "last": [20, 26, 28, 43, 48, 54, 86, 98, 144, 149, 215, 295, 599, 605, 618, 626, 628, 631, 634], "lastli": [624, 625], "later": [2, 8, 20, 30, 100, 553, 554, 599, 606, 624, 626], "latest": [48, 630], "latin5": [599, 608], "latter": [145, 146, 147, 151, 155, 156, 632], "layer": [34, 37, 133, 134, 135, 232, 281, 631], "layout": [10, 176], "lazi": 50, "lead": [52, 57, 70, 523, 553, 554, 560, 563, 599, 603, 608, 619, 636], "leaf": [175, 176, 177], "leaf_nod": 176, "learn": [54, 624, 628, 631, 632, 634], "least": [30, 35, 37, 40, 42, 133, 134, 135, 232, 253, 267, 281, 290, 523, 560, 580, 628, 631, 632], "leav": [10, 16, 26, 27, 110, 626], "left": [20, 37, 50, 133, 134, 135, 232, 281, 523, 553, 560, 625, 631], "legaci": 44, "lemaitr": [2, 8, 9, 11, 12, 17, 20, 22], "lemaitre58": [2, 8, 9, 11, 12, 17, 20, 22], "len": [0, 3, 4, 8, 10, 14, 33, 37, 38, 39, 523, 560, 626, 628, 631, 634, 636], "length": [2, 8, 12, 20, 26, 27, 28, 43, 44, 45, 48, 52, 57, 68, 91, 121, 129, 131, 133, 134, 135, 140, 142, 143, 144, 145, 147, 149, 151, 152, 153, 154, 160, 162, 163, 164, 180, 183, 200, 216, 219, 222, 232, 252, 254, 261, 266, 278, 281, 282, 284, 289, 293, 299, 523, 549, 553, 556, 560, 599, 604, 605, 609, 611, 615, 617, 618, 619, 620, 621, 626, 632], "length_of_undefined_length": 71, "less": [10, 40, 160, 162, 163, 553, 599, 620, 631, 632, 636], "let": [45, 599, 612, 624, 625, 626, 628, 631], "letter": [20, 43, 133, 134, 135], "level": [20, 26, 27, 28, 37, 41, 54, 133, 134, 135, 167, 176, 177, 599, 605, 617, 620, 625, 626, 627, 628, 634], "lib": 628, "libjpeg": [42, 46, 599, 620, 630], "librari": [2, 23, 25, 26, 43, 44, 51, 279, 294, 599, 602, 605, 625], "licens": [2, 8, 9, 11, 12, 16, 17, 20, 22, 599, 601, 602, 625], "like": [18, 25, 26, 29, 38, 43, 44, 48, 50, 53, 73, 75, 86, 112, 133, 134, 135, 157, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 181, 183, 184, 187, 199, 200, 202, 203, 204, 224, 234, 252, 253, 261, 265, 267, 269, 277, 288, 290, 555, 599, 602, 612, 615, 618, 620, 625, 626, 627, 628, 631, 632, 634], "limit": [10, 26, 27, 38, 39, 42, 47, 176, 523, 560, 561, 562, 599, 605, 611, 615, 621, 635], "linac": 133, "line": [11, 20, 23, 24, 25, 27, 28, 41, 44, 48, 50, 53, 86, 133, 134, 135, 176, 297, 523, 560, 599, 606, 617, 624, 625, 626, 628, 631, 634], "linear": [599, 617], "link": [37, 38, 54, 625], "linspac": 632, "linux": [44, 599, 608, 625, 630], "list": [4, 6, 7, 8, 10, 13, 20, 26, 28, 30, 32, 34, 35, 37, 38, 39, 40, 42, 43, 45, 68, 77, 78, 79, 80, 98, 105, 106, 108, 129, 130, 133, 134, 135, 138, 140, 141, 142, 143, 145, 147, 151, 152, 155, 156, 164, 166, 167, 170, 172, 176, 177, 185, 186, 194, 198, 199, 203, 204, 206, 215, 216, 232, 252, 253, 261, 262, 265, 267, 281, 288, 290, 295, 297, 298, 523, 549, 558, 560, 565, 566, 567, 568, 571, 572, 573, 574, 577, 578, 581, 582, 588, 596, 599, 602, 605, 606, 612, 615, 617, 618, 620, 622, 625, 626, 628, 630, 631, 634], "list_beam": 11, "liter": [25, 26], "littl": [2, 12, 16, 20, 26, 27, 28, 29, 34, 35, 40, 43, 45, 46, 48, 133, 134, 135, 145, 146, 147, 149, 151, 153, 154, 155, 156, 160, 162, 163, 164, 167, 176, 182, 183, 184, 187, 200, 219, 222, 235, 238, 242, 254, 262, 263, 278, 282, 293, 299, 523, 550, 556, 563, 564, 565, 566, 567, 568, 572, 573, 574, 576, 577, 579, 580, 599, 602, 614, 620, 626, 631, 632, 634, 636], "little_endian": [133, 134, 135, 187, 523, 550, 599, 620], "live": [624, 625], "ljust": [523, 560], "ll": [43, 45, 624, 625, 626, 631, 632, 634, 636], "ln": [553, 635], "lo": [2, 12, 16, 17, 18, 20, 26, 27, 32, 48, 133, 581, 626, 628], "load": [1, 5, 6, 10, 12, 14, 16, 167, 175, 176, 184, 599, 611, 615, 616, 617, 622, 634], "loc": 20, "local": [44, 70, 107, 551, 555, 599, 618, 621, 624, 625, 626, 630], "localhost": 625, "localtim": [551, 555], "locat": [2, 4, 8, 9, 20, 95, 133, 134, 135, 136, 148, 175, 182, 625, 628], "log": [95, 133, 134, 135, 599, 605, 618, 620, 621, 624], "log10": 553, "logarithm": 553, "logb": 553, "logger": [95, 599, 606, 620], "logic": [553, 599, 602], "logical_and": 553, "logical_invert": 553, "logical_or": 553, "logical_xor": 553, "long": [12, 32, 38, 183, 187, 580, 599, 619, 626, 632], "longer": [57, 83, 129, 219, 599, 609, 610, 612, 615, 617, 620, 628], "look": [53, 185, 186, 624, 625, 626], "lookup": [33, 37, 38, 39, 51, 113, 114, 115, 117, 118, 128, 132, 207, 212, 223, 225, 227, 228, 229, 268, 270, 272, 273, 274, 523, 560, 599, 615, 626], "lookuperror": [77, 78, 523, 560], "loonei": [599, 606, 607], "loop": [24, 26, 53], "lorem": 549, "loss": [78, 80, 553, 554, 561, 599, 615, 631], "lossi": [33, 37, 38, 39, 42, 45, 46, 133, 134, 135, 148, 232, 248, 259, 281, 292, 631, 634], "lossl": 32, "lossless": [36, 40, 42, 45, 46, 51, 133, 134, 135, 140, 142, 148, 221, 222, 232, 240, 241, 244, 247, 248, 249, 250, 251, 257, 258, 259, 260, 262, 263, 264, 281, 292, 599, 614, 617, 618, 620, 621, 634], "losslessli": [37, 38], "lossy_error": 34, "lot": [599, 608, 626, 634], "low": [136, 627], "lower": [20, 133, 134, 135, 136, 176, 523, 553, 560, 599, 620, 628, 635], "lowercas": [54, 523, 560], "lowest": [299, 523, 553, 556, 560], "lrcp": 37, "lsb": 222, "lstrip": [523, 560], "lt": [2, 20, 32], "ltd": 111, "lut": [47, 223, 225, 226, 227, 228, 229, 230, 268, 270, 271, 272, 273, 274, 275, 599, 612, 614, 615, 617, 620, 621], "lutdata": [599, 619], "m": [12, 22, 558, 624, 625, 628, 630, 631, 632, 634, 636], "maco": [599, 618, 630], "made": [39, 133, 134, 135, 144, 148, 176, 187, 599, 601, 602, 614, 620, 624, 625, 628, 631], "mai": [23, 24, 26, 27, 29, 30, 34, 35, 37, 38, 40, 44, 48, 50, 51, 53, 79, 97, 100, 133, 134, 135, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 160, 162, 163, 176, 187, 200, 222, 231, 232, 252, 253, 254, 262, 265, 267, 280, 281, 282, 288, 290, 523, 550, 553, 558, 560, 574, 576, 599, 612, 620, 624, 625, 626, 628, 630, 631, 632, 634, 636], "main": [24, 25, 26, 43, 53, 55, 119, 599, 602, 624, 625, 626, 630, 632], "mainli": [49, 133, 134, 135, 523, 560, 599, 606], "mainloop": [0, 22], "major": [47, 97, 615, 620], "make": [29, 30, 35, 37, 38, 40, 43, 44, 48, 53, 133, 134, 135, 523, 549, 560, 561, 599, 602, 611, 617, 620, 621, 626, 628, 630, 631, 632], "maketran": [523, 560], "mamp": 20, "manag": [10, 30, 35, 48, 68, 163, 166, 176, 207, 252, 261, 298, 587, 599, 608, 615, 626, 628], "mani": [40, 44, 49, 51, 140, 142, 145, 146, 599, 601, 605, 606, 620, 623, 632, 634], "manipul": [2, 23, 129, 630], "manner": [626, 631], "manual": [94, 187, 632], "manufactur": [2, 8, 20, 133], "map": [51, 129, 133, 174, 523, 560, 599, 620, 625], "march": 23, "mark": [599, 607], "marker": [144, 148, 171, 184, 599, 612, 617], "markup": [54, 625], "mask": 122, "mason": [11, 12, 16, 17, 23], "massag": 20, "match": [10, 29, 40, 45, 51, 85, 94, 105, 106, 107, 108, 133, 134, 135, 168, 174, 176, 216, 217, 219, 222, 232, 252, 253, 254, 265, 267, 281, 282, 288, 290, 297, 558, 599, 605, 608, 615, 620, 628, 631, 632, 634, 636], "materi": 623, "matplotlib": [3, 4, 9, 47, 632, 634, 636], "matter": [599, 610, 626, 634], "matthew": [599, 607], "max": [20, 38, 225, 227, 270, 272, 553, 631], "max_mag": 553, "maxbytestodisplai": [129, 599, 611], "maxdepth": 625, "maximum": [26, 27, 37, 38, 40, 42, 53, 129, 140, 142, 178, 233, 262, 276, 278, 293, 523, 549, 553, 560, 599, 619, 620, 621, 631, 632], "maxsplit": [523, 560], "mayb": 158, "mb": [5, 13, 19, 21, 166, 584, 622], "mct": [34, 37, 631], "mdc": 635, "mean": [40, 46, 222, 296, 523, 549, 560, 596, 624, 626, 628, 631, 632, 634, 635], "meaningless": 299, "meant": [169, 213], "measur": [68, 152, 155, 174], "mechan": [30, 35, 253, 262, 631], "media": [2, 12, 20, 26, 27, 28, 43, 48, 70, 137, 198, 200, 626, 628], "mediastoragesopclassuid": [12, 628], "mediastoragesopinstanceuid": 12, "medic": [20, 54, 628, 634], "meet": [10, 35, 144, 262, 599, 605, 631, 632], "mem": [5, 13, 19, 21, 622], "member": [43, 553], "memori": [6, 16, 21, 30, 32, 46, 133, 134, 135, 166, 167, 168, 184, 219, 233, 265, 267, 276, 288, 290, 599, 602, 610, 611, 612, 620, 622, 628, 632], "memory_dataset": [14, 21, 622], "memoryview": [29, 160, 162, 163, 252, 253, 261], "mention": [46, 626], "merg": [624, 625], "messag": [24, 26, 27, 28, 95, 302, 599, 602, 611, 619, 620, 621, 624, 626, 628], "met": [30, 35, 51, 170, 216, 217, 218, 219, 220, 221, 222, 584, 599, 610], "meta": [2, 8, 12, 20, 26, 27, 28, 43, 48, 53, 101, 133, 134, 135, 137, 166, 169, 187, 200, 232, 265, 267, 281, 288, 290, 599, 602, 605, 608, 614, 626, 634], "metadata": [599, 617], "metadata_process": [19, 622], "meterset": [26, 27, 28], "method": [17, 23, 29, 30, 33, 35, 37, 38, 40, 43, 45, 48, 50, 52, 98, 101, 129, 131, 133, 134, 135, 136, 140, 142, 145, 146, 147, 151, 155, 156, 160, 162, 163, 166, 174, 175, 176, 177, 187, 207, 215, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 281, 295, 296, 297, 298, 299, 523, 551, 553, 554, 555, 556, 557, 558, 559, 560, 599, 602, 605, 608, 610, 617, 619, 620, 626, 627, 628, 631, 634, 635], "micro": 12, "microsecond": [555, 559], "microvolt": 636, "mid": [20, 26, 28, 43, 634], "middl": 558, "middle_nam": 558, "middle_name_ideograph": 558, "middle_name_phonet": 558, "might": [39, 48, 262, 636], "mike": [599, 603], "millisecond": [555, 559], "min": [10, 38, 225, 227, 270, 272, 553, 628, 631, 632], "min_mag": 553, "mind": [39, 631, 634], "minim": [26, 28, 30, 46, 133, 134, 135, 187, 200, 253, 265, 267, 288, 290, 553, 599, 620, 632], "minimum": [30, 33, 35, 37, 38, 39, 133, 134, 135, 200, 232, 281, 553, 631, 632, 634], "minor": 628, "minut": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 555, 559], "misc": [588, 599, 608], "miscellan": 588, "misinterpret": 29, "mismatch": 631, "miss": [9, 35, 107, 133, 134, 135, 137, 166, 171, 185, 187, 200, 216, 219, 221, 222, 223, 253, 262, 268, 599, 607, 608, 611, 612, 618, 620, 621, 624, 626, 628, 630, 634], "missing_depend": [253, 262], "mistak": 77, "mit": [2, 8, 9, 11, 12, 16, 17, 20, 22, 23, 599, 601, 602], "mitig": [599, 620, 621], "mitra": [599, 618], "mix": [599, 611], "mixedmodality3dcammodel": 635, "mm": [20, 23, 551, 555, 559], "mmap": [599, 620], "mmm": [555, 559], "mobil": 20, "mod": 20, "modal": [2, 8, 9, 10, 20, 26, 28, 43, 47, 225, 226, 227, 229, 230, 270, 271, 272, 274, 275, 599, 612, 628, 635], "modalitytoread": 635, "mode": [9, 20, 26, 28, 32, 34, 38, 84, 87, 88, 129, 134, 160, 162, 163, 265, 267, 288, 290, 553, 599, 612, 624, 630], "model": [2, 8, 20, 24, 26, 43, 53, 129, 133, 134, 135, 627, 636], "modern": [599, 606], "modif": [134, 624, 626, 628], "modifi": [6, 15, 30, 35, 46, 50, 51, 53, 55, 107, 133, 134, 135, 176, 232, 254, 278, 281, 282, 293, 599, 612, 615, 620, 629, 632], "modul": [10, 25, 26, 30, 35, 37, 38, 39, 44, 49, 51, 52, 70, 86, 95, 98, 133, 134, 135, 202, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 252, 253, 254, 262, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 284, 287, 288, 290, 291, 292, 293, 523, 550, 560, 584, 585, 586, 588, 596, 599, 600, 606, 607, 610, 615, 617, 618, 620, 621, 626, 628, 631, 634, 636], "modulenotfounderror": [253, 262], "mondai": [551, 555], "monochrome1": [10, 33, 37, 38, 39, 40, 133, 134, 135, 219, 221, 278, 293, 628], "monochrome2": [2, 8, 20, 33, 37, 38, 39, 40, 133, 134, 135, 219, 221, 278, 293, 628, 631, 632, 634], "monospac": 0, "month": 555, "more": [0, 24, 26, 27, 29, 32, 35, 37, 38, 40, 43, 44, 45, 46, 48, 50, 51, 52, 54, 68, 100, 129, 133, 134, 135, 140, 144, 145, 147, 148, 149, 152, 167, 170, 176, 179, 184, 187, 188, 202, 232, 252, 253, 254, 262, 265, 267, 281, 282, 288, 290, 292, 297, 523, 553, 558, 560, 561, 599, 600, 601, 602, 604, 605, 612, 620, 621, 624, 625, 626, 627, 628, 630, 631, 634, 636], "morenc": [599, 606], "most": [29, 40, 44, 46, 53, 86, 133, 134, 135, 253, 265, 267, 288, 290, 299, 556, 599, 602, 605, 606, 626, 628, 631, 634, 635], "mostli": 131, "move": [0, 94, 100, 175, 176, 599, 605, 606, 620, 625, 628], "mpeg": [437, 599, 615], "mpeg2mphlf": [599, 620], "mpeg2mpmlf": [599, 620], "mpeg4hp41bdf": [599, 620], "mpeg4hp41f": [599, 620], "mpeg4hp422df": [599, 620], "mpeg4hp423df": [599, 620], "mpeg4hp42stereof": [599, 620], "mplx": 3, "mplx_label": 3, "mr": [2, 8, 10, 17, 20, 51, 70, 558, 628], "mr1": [2, 8, 20], "mr_small": 70, "mra": [10, 628], "mrg": [624, 625], "mri": [1, 5, 6, 51, 622], "mrt50h1": [2, 8, 20], "msb": 222, "msec": 20, "msg": [86, 626], "msh": 635, "much": [38, 42, 43, 561, 599, 602, 605, 606, 614], "multi": [35, 40, 51, 61, 70, 83, 133, 134, 135, 140, 148, 149, 150, 151, 152, 176, 215, 216, 252, 253, 262, 265, 267, 278, 288, 290, 292, 293, 576, 588, 599, 608, 610, 612, 614, 620, 621, 626, 634, 636], "multi_str": [61, 71], "multifram": [599, 615], "multipl": [4, 30, 32, 35, 37, 40, 43, 48, 50, 51, 79, 110, 112, 113, 123, 129, 133, 134, 135, 148, 150, 151, 152, 224, 228, 229, 230, 232, 233, 252, 253, 261, 262, 266, 269, 273, 274, 275, 276, 281, 289, 295, 553, 558, 577, 599, 612, 618, 620, 626, 631, 632, 634], "multiplex": [3, 52, 133, 134, 135, 584, 599, 615, 636], "multiplex_1": 52, "multiplex_2": 52, "multiplex_arrai": [52, 133, 134, 135, 584, 599, 615, 636], "multiplexgrouplabel": [3, 636], "multipli": 553, "multiv": [61, 588, 626], "multivalu": [32, 61, 83, 205, 206, 210, 564, 565, 566, 567, 568, 571, 579, 582, 583, 599, 605, 621], "must": [25, 26, 30, 33, 35, 37, 38, 39, 40, 43, 44, 45, 50, 51, 57, 86, 89, 133, 134, 135, 136, 140, 142, 152, 166, 174, 176, 179, 181, 183, 187, 215, 216, 223, 224, 226, 229, 230, 232, 233, 234, 266, 268, 269, 271, 274, 275, 276, 277, 278, 281, 289, 293, 299, 523, 553, 556, 560, 562, 580, 599, 617, 626, 627, 628, 631, 632, 636], "mutabl": 133, "mutablemap": [133, 134, 135], "mutablesequ": [32, 77, 130, 132, 133, 134, 135, 164, 167, 172, 173, 209, 210, 211, 212, 563, 564, 565, 566, 567, 568, 571, 573, 574, 577, 579, 581, 582, 583], "my": [10, 48, 133, 134, 135, 176, 627], "my_decod": 30, "my_decoder_func": 30, "my_encod": 35, "my_encoder_func": 35, "my_inst": 174, "my_json_dump": [133, 134, 135], "my_packag": [30, 35], "my_record": 174, "my_waveform": 636, "mypi": 630, "myprint": [8, 599, 600], "myself": [599, 607], "n": [2, 8, 11, 14, 20, 26, 28, 200, 216, 219, 221, 222, 225, 227, 228, 229, 230, 270, 272, 273, 274, 275, 292, 523, 553, 560, 584, 628], "naiv": 555, "name": [0, 2, 6, 8, 9, 10, 11, 12, 14, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43, 44, 45, 46, 48, 53, 54, 107, 110, 112, 119, 120, 123, 124, 125, 129, 133, 134, 135, 137, 159, 160, 162, 163, 166, 200, 207, 223, 232, 252, 253, 254, 261, 262, 263, 264, 265, 267, 268, 281, 282, 288, 290, 292, 297, 298, 523, 551, 553, 555, 558, 560, 599, 600, 601, 602, 605, 608, 609, 610, 615, 617, 618, 619, 620, 622, 624, 625, 626, 628, 631, 634, 635, 636], "name_prefix": 558, "name_prefix_ideograph": 558, "name_prefix_phonet": 558, "name_suffix": 558, "name_suffix_ideograph": 558, "name_suffix_phonet": 558, "namedtemporaryfil": [12, 17], "namedtupl": 296, "nan": [553, 554, 557, 561], "nanz": [599, 602], "nativ": [29, 40, 45, 130, 133, 134, 135, 253, 262, 265, 267, 288, 290, 299, 526, 556, 592, 599, 620], "natur": [523, 553, 560], "navig": 625, "ncit": 635, "ndarrai": [29, 38, 43, 46, 49, 50, 51, 52, 54, 81, 83, 98, 104, 133, 134, 135, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 252, 253, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 281, 288, 289, 290, 292, 293, 294, 566, 568, 584, 599, 608, 612, 615, 620, 621, 631, 632, 636], "ndc": 635, "nearest": [177, 553], "necessari": [29, 38, 43, 44, 133, 134, 135, 144, 149, 278, 293, 299, 553, 556, 558, 628, 636], "necessarili": [48, 50, 599, 620], "need": [25, 26, 27, 30, 35, 38, 39, 40, 43, 44, 45, 46, 48, 50, 52, 53, 54, 78, 80, 94, 98, 133, 134, 135, 164, 170, 232, 252, 253, 281, 578, 581, 599, 602, 617, 620, 624, 625, 626, 627, 628, 630, 631, 632, 634, 636], "needs_to_convert_to_rgb": [98, 217, 218, 219, 220, 221, 222], "neg": [299, 553, 556], "negat": 553, "neither": [85, 86, 176, 225, 227, 229, 270, 272, 274, 553], "nema": 54, "ness": [599, 602], "nest": [26, 28, 43, 133, 599, 606, 619], "network": [599, 615], "neu": 635, "neutral": 54, "never": [32, 82, 133, 134, 135, 523, 553, 560, 624, 634], "new": [10, 16, 17, 18, 26, 27, 39, 47, 53, 54, 55, 68, 70, 109, 110, 111, 112, 129, 133, 134, 135, 160, 162, 163, 175, 176, 177, 207, 215, 232, 233, 252, 253, 254, 261, 262, 276, 281, 282, 297, 298, 523, 551, 555, 558, 559, 560, 600, 601, 602, 605, 606, 607, 610, 611, 612, 614, 615, 617, 620, 623, 626, 629, 631, 636], "new_dict_item": [16, 109, 111], "new_entries_dict": [16, 109, 111], "new_fileset": 10, "newdefineduid": 624, "newer": 48, "newli": [44, 133, 134, 135, 599, 614], "newlin": 20, "next": [44, 48, 97, 133, 134, 135, 167, 176, 177, 599, 602, 615, 628, 636], "next_indent_str": 8, "next_minu": 553, "next_plu": 553, "next_toward": 553, "nfound": 10, "nice": [215, 253, 262, 624], "nikitathespid": [599, 602], "nil": [599, 607], "no_meta": 626, "no_meta_path": 626, "node": [175, 176, 177, 626], "nois": [34, 37, 133, 134, 135, 232, 281, 631], "nomin": [26, 28], "non": [24, 26, 32, 43, 44, 109, 110, 111, 112, 127, 129, 133, 134, 135, 137, 148, 174, 176, 187, 200, 222, 249, 250, 265, 267, 288, 290, 292, 305, 523, 553, 557, 560, 561, 563, 566, 568, 574, 576, 599, 603, 604, 608, 609, 610, 611, 612, 615, 619, 620, 626, 634], "none": [0, 2, 8, 10, 14, 20, 32, 34, 54, 68, 77, 79, 82, 83, 92, 95, 97, 98, 99, 107, 109, 110, 111, 112, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 145, 147, 148, 150, 151, 157, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 214, 215, 223, 224, 232, 233, 234, 252, 253, 254, 261, 262, 265, 267, 268, 269, 276, 277, 278, 281, 282, 287, 288, 290, 293, 295, 296, 297, 298, 300, 302, 523, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579, 581, 582, 583, 584, 596, 599, 608, 611, 612, 615, 624, 626, 630, 632, 635], "nor": [85, 86], "norigin": 10, "normal": [9, 16, 20, 25, 26, 27, 32, 43, 70, 553, 599, 620], "not_dicom": 626, "notat": [26, 27, 28, 523, 553, 560, 561, 626], "note": [10, 18, 24, 26, 27, 28, 29, 32, 44, 48, 54, 83, 94, 110, 112, 133, 134, 135, 136, 144, 148, 153, 154, 166, 170, 171, 183, 193, 215, 225, 226, 227, 229, 230, 233, 270, 271, 272, 274, 275, 276, 523, 551, 553, 554, 555, 557, 558, 559, 560, 561, 602, 625, 626, 627, 634, 635, 636], "notebook": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "noth": [33, 37, 38, 39, 628], "notic": [626, 628], "notimplementederror": [98, 133, 134, 135, 218, 219, 220, 222, 291], "notimplementerror": [599, 601], "noun": 54, "noutput": 16, "novemb": 23, "now": [12, 20, 129, 133, 134, 135, 549, 555, 599, 601, 602, 605, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 621, 624, 625, 626, 628, 631, 636], "np": [3, 4, 38, 216, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 252, 253, 261, 262, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 281, 288, 290, 291, 292, 293, 584, 631, 632, 634, 636], "nr_channel": 3, "nr_fragment": [144, 154], "nr_frame": [148, 150], "nr_retri": [160, 162, 163], "nr_sampl": 3, "nsew": 0, "nucleu": [2, 8, 20], "null": [144, 216, 252, 261, 266, 284, 289, 574], "number": [2, 8, 11, 18, 20, 24, 26, 27, 28, 29, 30, 35, 40, 43, 46, 48, 50, 54, 110, 112, 131, 133, 134, 135, 136, 140, 144, 145, 147, 148, 149, 150, 151, 154, 156, 160, 162, 163, 165, 166, 167, 176, 177, 178, 181, 184, 199, 201, 202, 214, 215, 216, 232, 252, 253, 261, 262, 278, 281, 283, 284, 292, 293, 295, 296, 299, 300, 523, 549, 551, 553, 554, 555, 556, 557, 559, 560, 561, 599, 600, 604, 607, 611, 617, 618, 620, 621, 625, 626, 628, 630, 632, 634, 635, 636], "number_class": 553, "number_of_fram": [29, 30, 35, 145, 147, 151, 231, 252, 261, 262, 280, 634], "numberofbeam": [24, 26], "numberofblock": 18, "numberofbrachyapplicationsetup": [24, 26], "numberoffractionsplan": [24, 26], "numberoffram": [219, 221, 222, 284, 285, 287, 292, 632, 634], "numberofframesinoverlai": 216, "numberofwaveformchannel": [3, 52, 584, 636], "numberofwaveformsampl": [3, 584, 636], "numer": [43, 176, 178, 299, 523, 553, 556, 560, 577, 599, 603, 612, 617, 619], "numpi": [2, 3, 4, 23, 29, 30, 35, 37, 38, 39, 43, 45, 46, 49, 50, 51, 52, 54, 83, 98, 103, 104, 133, 134, 135, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 252, 253, 254, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 282, 288, 289, 290, 291, 292, 294, 566, 568, 584, 599, 600, 608, 610, 611, 612, 614, 618, 620, 624, 630, 631, 632, 634, 636], "numpy_handl": [98, 588, 599, 617], "numpypi": [599, 610], "o": [20, 22, 72, 74, 265, 267, 288, 290, 599, 620, 634], "ob": [2, 12, 20, 26, 27, 28, 32, 43, 45, 48, 133, 134, 135, 144, 192, 200, 254, 282, 569, 599, 603, 618, 620, 626, 627, 631, 632, 634], "obj": [133, 134, 135], "object": [0, 10, 14, 29, 30, 32, 35, 43, 48, 49, 54, 86, 100, 104, 129, 132, 133, 134, 135, 136, 141, 143, 145, 146, 147, 151, 155, 156, 160, 162, 163, 166, 167, 168, 170, 171, 174, 176, 187, 208, 215, 224, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 256, 257, 258, 259, 260, 265, 267, 269, 277, 288, 290, 295, 299, 301, 555, 556, 558, 588, 599, 601, 602, 611, 612, 614, 617, 618, 620, 626, 628, 636], "observ": 635, "observationsubjectclass": 635, "observertyp": 635, "obviou": 632, "obvious": 636, "obxxxx1a": 70, "occasion": [625, 626, 628], "occur": [87, 88, 133, 134, 135, 553, 599, 612, 624, 628], "occurr": [131, 215, 295, 296, 523, 560], "octob": 23, "od": [32, 187, 599, 608, 609, 617, 620, 632, 634], "odd": [43, 133, 134, 135, 136, 216, 252, 253, 261, 284, 299, 599, 609, 618, 620, 626, 632], "off": [20, 26, 27, 44, 95, 167, 599, 606, 614, 625], "offer": [26, 27, 51, 133, 134, 135, 297, 634], "offic": 558, "offici": [43, 113, 114, 115, 116, 117, 118, 119, 126, 127, 128, 129, 523, 599, 605, 606, 626, 636], "offlin": 630, "offset": [2, 8, 20, 45, 48, 50, 68, 129, 133, 134, 135, 136, 140, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 160, 162, 163, 171, 172, 173, 176, 182, 183, 232, 252, 253, 261, 281, 572, 580, 599, 612, 615, 618, 620, 628, 631], "offsetofreferencedlowerleveldirectoryent": 174, "offsetofthenextdirectoryrecord": 174, "often": [49, 51, 110, 627], "ok": [38, 85, 86, 176, 624], "ol": [32, 187, 599, 608, 609, 617, 620], "old": [133, 134, 135, 523, 560, 599, 600, 601, 605, 608, 614], "older": [553, 630], "onc": [45, 48, 83, 110, 112, 624, 625, 635], "one": [10, 24, 26, 30, 35, 37, 40, 42, 43, 46, 51, 52, 53, 68, 84, 87, 88, 109, 111, 129, 132, 133, 134, 135, 139, 140, 142, 144, 147, 148, 149, 152, 168, 169, 174, 176, 177, 178, 184, 188, 202, 207, 223, 224, 232, 233, 234, 253, 254, 261, 262, 265, 267, 268, 269, 276, 277, 278, 281, 282, 288, 290, 293, 297, 523, 553, 554, 560, 599, 605, 608, 618, 620, 624, 626, 628, 630, 631, 632, 634, 635, 636], "ones": [299, 523, 556, 560, 623, 626, 628, 631], "onli": [10, 24, 26, 27, 28, 29, 30, 35, 37, 38, 40, 42, 43, 44, 46, 50, 51, 53, 54, 57, 81, 98, 110, 112, 113, 114, 115, 117, 118, 119, 120, 128, 129, 132, 133, 134, 135, 137, 148, 152, 166, 169, 176, 178, 185, 186, 187, 200, 207, 219, 224, 232, 233, 234, 240, 241, 244, 252, 253, 254, 257, 261, 262, 265, 266, 267, 269, 276, 277, 278, 279, 281, 282, 288, 289, 290, 291, 293, 294, 300, 523, 557, 560, 562, 599, 605, 607, 608, 609, 610, 611, 612, 614, 615, 617, 620, 624, 626, 627, 628, 631, 634], "onlin": 23, "open": [9, 23, 25, 26, 32, 141, 143, 161, 167, 265, 267, 288, 290, 599, 602, 624, 625, 626], "openjpeg": [37, 42, 45, 46, 630, 631, 634], "oper": [2, 8, 20, 29, 33, 37, 38, 39, 43, 44, 46, 47, 48, 86, 133, 134, 135, 160, 162, 163, 225, 226, 227, 229, 230, 252, 253, 265, 267, 270, 271, 272, 274, 275, 288, 290, 523, 553, 560, 599, 602, 610, 612, 615, 626, 630, 634], "operand": [553, 599, 617], "opt": 636, "optim": [133, 134, 135], "optimis": [599, 617], "optimist": [599, 615], "option": [2, 8, 17, 20, 25, 27, 28, 30, 31, 35, 36, 44, 46, 49, 68, 82, 83, 95, 105, 106, 107, 108, 110, 112, 129, 133, 134, 135, 137, 140, 144, 145, 146, 147, 148, 150, 151, 154, 155, 156, 160, 162, 163, 164, 166, 167, 170, 176, 177, 178, 184, 187, 199, 210, 211, 215, 216, 219, 221, 222, 223, 224, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 261, 262, 265, 266, 267, 268, 269, 273, 274, 275, 276, 277, 278, 279, 281, 282, 284, 288, 289, 290, 291, 292, 293, 294, 295, 296, 300, 523, 549, 550, 555, 558, 559, 560, 563, 564, 565, 566, 567, 568, 571, 572, 573, 574, 576, 578, 579, 580, 581, 582, 583, 584, 588, 599, 601, 602, 608, 612, 615, 617, 620, 621, 628, 631, 634, 636], "order": [4, 29, 30, 34, 35, 37, 38, 40, 51, 98, 132, 133, 134, 135, 136, 148, 177, 181, 185, 186, 187, 199, 222, 232, 250, 262, 266, 281, 289, 299, 523, 553, 556, 599, 600, 607, 610, 612, 624, 631, 632, 634, 636], "ordereddict": [599, 607], "ordin": [523, 551, 555, 560], "org": [54, 627], "organ": [26, 27, 558], "organ_at_risk": [26, 27], "orient": [2, 8, 20], "origin": [2, 10, 20, 24, 26, 28, 29, 40, 45, 48, 50, 53, 90, 133, 134, 135, 168, 176, 219, 226, 232, 252, 253, 254, 271, 281, 282, 299, 523, 549, 553, 554, 556, 557, 558, 560, 599, 620, 624, 625, 626, 631, 634, 636], "original_character_set": [133, 134, 135, 599, 620], "original_encod": [133, 134, 135, 187, 199, 599, 620], "original_str": [558, 599, 610], "orphan": 176, "orthogon": 4, "oserror": 168, "other": [2, 8, 17, 20, 24, 30, 32, 33, 35, 40, 42, 44, 45, 46, 48, 49, 50, 51, 53, 170, 187, 192, 193, 200, 266, 289, 523, 553, 558, 560, 620, 624, 626, 628, 631, 632, 634], "othermod": 635, "otherpatientid": [17, 599, 601], "otherpatientidssequ": [17, 626], "otherwis": [24, 26, 29, 30, 35, 40, 43, 89, 98, 116, 117, 121, 122, 126, 127, 128, 129, 133, 134, 135, 140, 145, 146, 147, 151, 155, 156, 164, 176, 178, 179, 182, 183, 187, 213, 224, 226, 228, 229, 230, 232, 233, 234, 252, 253, 254, 261, 262, 265, 266, 267, 269, 271, 273, 274, 275, 276, 277, 278, 279, 281, 282, 288, 289, 290, 291, 293, 294, 523, 550, 553, 558, 560, 562, 563, 564, 565, 566, 567, 568, 572, 573, 574, 576, 577, 579, 580], "our": [38, 624, 625, 626, 628, 631, 632, 636], "out": [0, 51, 53, 142, 143, 176, 215, 266, 289, 295, 553, 554, 599, 615, 623, 624, 625, 626, 628, 632, 636], "outfil": [24, 26, 626], "outlin": 48, "output": [13, 16, 20, 24, 26, 27, 46, 51, 53, 54, 133, 134, 135, 224, 225, 227, 234, 253, 265, 267, 269, 270, 272, 277, 283, 288, 290, 551, 555, 559, 599, 612, 614, 622, 624, 625, 626, 628], "ov": [32, 187, 599, 612, 617, 620], "over": [10, 20, 26, 27, 50, 599, 620, 621, 626, 628], "overflow": 20, "overflowerror": [299, 553, 554, 556, 557], "overlai": [47, 51, 70, 133, 134, 135, 279, 294, 588, 599, 612, 615, 620, 626], "overlap": [523, 560], "overlay_arrai": [47, 133, 134, 135, 599, 612], "overlay_data_handl": [599, 615, 620], "overlaybitposit": 216, "overlaybitsalloc": 216, "overlaycolumn": 216, "overlayrow": 216, "overrang": 20, "overrid": [29, 135, 174, 224, 231, 234, 269, 277, 280, 552, 599, 610, 628], "overview": 628, "overwrit": [10, 133, 134, 135, 187, 583, 599, 620], "ow": [2, 20, 26, 28, 32, 45, 50, 52, 133, 134, 135, 187, 193, 253, 254, 282, 570, 599, 603, 614, 619, 620, 626, 632, 634], "own": [8, 24, 25, 26, 27, 43, 48, 53, 133, 134, 135, 176, 187, 599, 609, 619, 626, 628, 634, 636], "p": [4, 10, 22, 24, 26, 57, 226, 271, 558, 599, 605, 628], "p0xxxxxx": 176, "p14": [42, 263], "p1xxxxxx": 176, "p25": [2, 8, 20], "p2xxxxxx": 176, "p98": 22, "pack": [22, 40, 50, 133, 134, 135, 253, 265, 266, 267, 278, 279, 288, 289, 290, 293, 294, 599, 609, 610, 615, 618, 621], "pack_bit": [50, 133, 134, 135, 278, 293, 588, 599, 610, 615, 620], "packag": [25, 26, 27, 46, 47, 49, 133, 134, 135, 216, 217, 218, 219, 220, 221, 222, 253, 254, 262, 265, 267, 282, 288, 290, 584, 599, 600, 603, 608, 615, 617, 620, 621, 628, 630, 634], "packbit": [39, 631], "packed_byt": 50, "pad": [2, 3, 8, 20, 26, 28, 133, 134, 135, 140, 144, 149, 205, 216, 252, 254, 261, 266, 282, 284, 289, 523, 553, 560, 599, 609, 611, 612, 615, 617, 618, 626, 632], "padraig": [599, 606, 607], "page": [38, 599, 608, 611, 623, 624, 625, 630], "pair": [25, 26, 135, 176, 231, 280, 299, 553, 554, 556, 557], "palett": [33, 37, 38, 39, 40, 47, 106, 133, 134, 135, 174, 176, 223, 268, 278, 293, 599, 612, 614, 621], "palette_color": [51, 70], "panchal": [599, 602], "papadopoulo": [599, 607], "paramet": [0, 10, 20, 24, 26, 51, 52, 53, 54, 57, 68, 77, 78, 79, 80, 82, 83, 95, 97, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 162, 163, 164, 166, 167, 168, 170, 171, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 199, 200, 202, 203, 204, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 252, 253, 254, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 300, 302, 523, 549, 550, 553, 554, 557, 558, 561, 562, 563, 564, 565, 566, 567, 568, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 599, 605, 607, 609, 615, 617, 618, 626, 628, 631, 634], "parametr": [51, 624], "pare": 213, "parent": [0, 26, 27, 132, 136, 160, 162, 163, 176, 177, 599, 609, 620, 628], "parent_dataset": [599, 620], "parent_encod": [167, 199], "parent_seq": [599, 620], "pars": [166, 170, 286, 555, 588, 599, 600, 612, 614, 615, 620], "parse_basic_offset": [152, 599, 620], "parse_frag": [599, 620], "parser": [25, 26], "part": [10, 27, 28, 32, 33, 37, 38, 39, 40, 44, 48, 51, 52, 54, 112, 129, 133, 134, 135, 136, 140, 144, 147, 148, 149, 150, 151, 152, 154, 155, 166, 179, 185, 186, 187, 200, 204, 216, 219, 225, 227, 228, 229, 230, 233, 266, 270, 272, 273, 274, 275, 276, 279, 289, 292, 294, 297, 299, 523, 549, 554, 556, 557, 558, 560, 599, 602, 605, 617, 624, 625, 626, 627, 628, 633, 636], "part05": [54, 625], "parti": [47, 558, 630], "partial": [297, 599, 602], "particular": [26, 27, 43, 50, 51, 90, 133, 134, 135, 169, 599, 602, 612, 626, 634, 635], "particularli": [51, 53], "partit": [523, 560], "pass": [37, 38, 43, 45, 50, 51, 54, 93, 105, 106, 108, 132, 133, 134, 135, 140, 142, 207, 215, 599, 602, 621, 624, 625, 628, 631, 632, 634], "past": [40, 149, 171, 200], "pat": 43, "pat_nam": 9, "patch": [599, 602, 623, 624], "path": [0, 9, 10, 11, 12, 17, 24, 26, 27, 28, 30, 35, 43, 46, 51, 54, 70, 105, 106, 107, 108, 133, 134, 135, 159, 166, 175, 176, 179, 187, 207, 210, 211, 213, 253, 262, 265, 267, 288, 290, 599, 615, 620, 625, 628, 634], "pathlib": [0, 10, 12, 70, 159, 179, 626, 628, 634], "pathlik": [133, 134, 135, 166, 168, 169, 176, 187, 265, 267, 288, 290, 599, 614], "patient": [2, 8, 9, 10, 12, 17, 20, 26, 27, 28, 133, 134, 135, 174, 176, 558, 599, 601, 608, 618, 625, 626, 628], "patient_id": 10, "patient_nam": 558, "patient_name_ideograph": 558, "patient_name_phonet": 558, "patientbirthd": [17, 43], "patientid": [9, 10, 12, 14, 17, 26, 28, 43, 133, 174, 176, 626, 628], "patientnam": [9, 10, 12, 14, 26, 28, 43, 70, 85, 86, 129, 133, 166, 174, 176, 300, 599, 611, 625, 626, 628, 630], "patientsbirthd": [599, 601], "patientsetupsequ": 43, "patientsex": [43, 133, 134, 135], "patientsnam": [85, 86], "pattern": [20, 26, 28, 105, 106, 108, 599, 620], "paus": [632, 634], "paxxxxxx": 176, "pc": 628, "peak": [34, 37, 133, 134, 135, 232, 281, 631], "penalti": 552, "peopl": 628, "pep": [599, 601, 604, 608], "per": [2, 8, 20, 29, 30, 33, 35, 37, 38, 39, 40, 42, 43, 51, 57, 132, 133, 134, 135, 140, 142, 148, 179, 207, 219, 232, 252, 261, 262, 278, 281, 292, 293, 599, 605, 612, 615, 626, 631, 632, 634], "per_fram": [233, 276, 599, 617], "perceptu": [224, 234, 269, 277], "perform": [2, 30, 35, 37, 38, 40, 44, 45, 46, 84, 113, 114, 115, 117, 118, 128, 132, 133, 134, 135, 137, 176, 207, 221, 232, 253, 254, 262, 265, 267, 281, 282, 288, 290, 553, 570, 599, 606, 609, 610, 630, 631, 634, 636], "perman": 110, "persist": [132, 168], "person": [6, 17, 21, 32, 54, 558, 599, 610, 617, 622, 635], "person_nam": 22, "person_names_callback": 17, "personnam": [22, 32, 61, 129, 571, 599, 600, 611, 614, 615, 617, 620, 630], "personname3": [599, 606, 611, 614], "personnameunicod": [599, 614, 620], "pet": [51, 223, 268], "pet_20_step": [223, 268], "peter": [10, 628], "phase": 20, "phonet": 558, "photometr": [2, 8, 20, 29, 33, 39, 40, 51, 133, 134, 135, 217, 218, 219, 220, 221, 222, 232, 233, 252, 253, 254, 261, 265, 267, 276, 278, 281, 282, 283, 288, 290, 293, 599, 612, 631, 632, 634], "photometric_interpret": [29, 30, 35, 133, 134, 135, 231, 252, 261, 262, 278, 280, 293, 634], "photometricinterpret": [10, 33, 37, 38, 39, 219, 221, 284, 285, 628, 631, 632, 634], "photon": [26, 28], "physic": [51, 628], "physician": [2, 8, 20], "pi": 636, "pickl": [32, 599, 608, 612, 617, 621], "pierr": [599, 602], "pil": [224, 234, 269, 277, 599, 602, 610], "pillow": [30, 35, 46, 49, 133, 134, 135, 220, 224, 234, 243, 244, 245, 246, 269, 277, 599, 608, 610, 612, 614, 617, 620, 624, 634], "pillow_handl": [98, 624], "pilsupportedcompressedpixeltransfersyntax": [599, 615, 620], "pip": [26, 27, 624, 625, 631, 632, 634, 636], "pipe": [26, 27], "pitch": 20, "pixel": [2, 4, 6, 7, 8, 13, 20, 23, 24, 26, 28, 32, 34, 41, 43, 47, 49, 50, 53, 54, 55, 68, 81, 98, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 166, 170, 216, 217, 218, 219, 220, 221, 222, 585, 588, 599, 600, 602, 603, 608, 609, 610, 611, 612, 614, 615, 617, 618, 620, 621, 622, 624, 626, 629, 630], "pixel_arrai": [2, 4, 9, 29, 38, 39, 43, 46, 47, 49, 54, 133, 134, 135, 588, 599, 601, 612, 620, 631, 632, 634], "pixel_array_opt": [29, 133, 134, 135, 599, 620], "pixel_byt": 43, "pixel_data_handl": [133, 134, 135, 585, 588, 599, 610, 617, 620], "pixel_dtyp": [252, 599, 620], "pixel_keyword": [29, 30, 252, 261], "pixel_properti": [252, 253], "pixel_represent": [29, 30, 35, 231, 252, 261, 262, 280], "pixelarrai": [599, 600, 601], "pixeldata": [2, 29, 30, 32, 33, 37, 38, 39, 43, 45, 51, 53, 138, 140, 141, 142, 143, 252, 261, 285, 599, 611, 612, 631, 632, 634], "pixeldataarrai": [599, 600], "pixelrepresent": [33, 37, 38, 39, 219, 221, 222, 285, 291, 599, 611, 631, 632], "pixels1": 20, "pixelspac": [4, 9], "place": [33, 37, 38, 39, 40, 45, 46, 133, 134, 135, 215, 224, 232, 233, 254, 269, 276, 281, 282, 295, 553, 599, 608, 626, 628, 631, 632], "placehold": [133, 134, 135], "plain": [599, 602], "plan": [26, 27, 28, 43, 70, 174], "plan1": [26, 28], "plan_d": 18, "planar": [29, 37, 40, 51, 133, 134, 135, 232, 252, 261, 278, 281, 292, 293, 599, 610, 632], "planar_configur": [29, 30, 231, 252, 261, 280], "planarconfigur": [219, 221, 222, 285, 292, 599, 608, 632], "plane": [4, 20, 30, 34, 38, 40, 51, 216, 262], "pleas": [0, 14, 25, 26, 28, 43, 133, 134, 135, 138, 139, 148, 149, 150, 152, 157, 187, 207, 253, 265, 267, 288, 290, 599, 606, 617, 620, 624, 625], "plot": [1, 5, 6, 7, 13, 599, 611, 622, 636], "plot_add_dict_entri": [16, 19, 622], "plot_anonym": [17, 19, 622], "plot_dicom_differ": [20, 21, 622], "plot_downsize_imag": [2, 5, 622], "plot_printing_dataset": [8, 13, 622], "plot_read_dicom": [9, 13, 622], "plot_read_fileset": [10, 13, 622], "plot_read_rtplan": [11, 13, 622], "plot_sequ": [18, 19, 622], "plot_waveform": [3, 5, 622], "plot_write_dicom": [12, 13, 622], "plt": [3, 4, 9, 49, 632, 634, 636], "plugin": [31, 36, 41, 45, 46, 55, 133, 134, 135, 221, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 265, 267, 281, 282, 288, 290, 599, 617, 618, 621, 630, 631, 634], "plugin_label": [30, 35], "plural": 10, "pn": [2, 12, 17, 20, 32, 43, 66, 129, 133, 134, 135, 558, 571, 599, 612, 617, 625, 626, 628], "point": [17, 24, 25, 26, 27, 28, 32, 53, 184, 219, 291, 523, 553, 554, 557, 560, 561, 599, 601, 606, 617, 624, 626, 635], "poor": [37, 42], "pop": [133, 134, 135, 215, 295, 599, 611], "popitem": [133, 134, 135], "popul": [0, 12, 53, 299, 556, 635], "popular": 630, "portion": 43, "posit": [2, 8, 20, 24, 26, 27, 28, 68, 145, 146, 147, 149, 151, 152, 155, 156, 158, 160, 162, 163, 171, 181, 182, 183, 200, 215, 252, 253, 295, 299, 523, 553, 554, 556, 557, 560], "posix": [551, 555], "posixpath": [43, 70, 626], "possibl": [17, 30, 38, 40, 43, 44, 51, 94, 129, 133, 134, 135, 151, 160, 162, 163, 174, 185, 186, 187, 222, 253, 279, 294, 523, 560, 561, 599, 608, 610, 611, 612, 617, 620, 627, 628, 634, 635], "possibli": [51, 133, 134, 135, 253], "post": [20, 130, 599, 614], "posterior": 20, "potenti": [53, 631], "ppscan": 20, "pq": [523, 560], "pr": [599, 618, 624, 625], "practic": [38, 47, 70, 176, 224, 234, 269, 277], "pre": [26, 28, 43, 130, 599, 620, 621, 624], "preambl": [133, 134, 135, 166, 171, 187, 200, 213, 599, 608, 626], "preced": [48, 599, 620], "precis": [81, 89, 286, 553, 554, 558, 561, 599, 617], "predefin": 44, "predict": [148, 250], "prefer": [599, 621, 626], "prefer_lut": [229, 274, 599, 615], "prefix": [24, 26, 27, 28, 54, 158, 166, 171, 178, 187, 200, 472, 523, 549, 558, 560, 599, 611, 620, 624, 625, 626, 635], "preliminari": [599, 600, 603], "prepar": [599, 606], "prepend": 134, "prerequisit": [47, 631, 632, 634, 636], "prescrib": 20, "prescript": [26, 27], "presenc": [149, 223, 268, 626], "present": [16, 24, 26, 27, 28, 40, 50, 80, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 131, 133, 134, 135, 137, 148, 149, 150, 152, 158, 166, 171, 174, 176, 177, 187, 200, 215, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 254, 262, 268, 269, 270, 271, 272, 273, 274, 275, 277, 280, 281, 282, 295, 296, 523, 560, 599, 601, 609, 611, 612, 620, 626, 632, 634, 636], "preserv": [133, 134, 135, 187, 599, 607, 614], "pretti": [177, 624], "prettier": 43, "prettifi": 177, "prevent": [599, 612], "previou": [53, 177, 178, 599, 605, 608, 614, 615, 620], "previous": [40, 133, 134, 135, 168, 599, 610, 614, 617], "primari": [20, 26, 28, 33, 48, 626], "primarili": [599, 603, 631], "primer": 625, "print": [0, 2, 4, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 22, 37, 38, 43, 50, 110, 112, 133, 134, 135, 265, 288, 599, 601, 612, 622, 625, 626, 628, 634, 636], "printabl": [523, 560], "prior": [40, 45, 133, 134, 135, 149, 187, 233, 253, 262, 276, 599, 620, 631, 634], "prioriti": [187, 199, 599, 620], "privat": [6, 15, 17, 19, 20, 24, 26, 27, 28, 40, 43, 47, 53, 109, 110, 111, 112, 119, 120, 123, 124, 125, 127, 129, 130, 133, 134, 135, 136, 174, 175, 176, 200, 299, 467, 523, 550, 588, 599, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 614, 615, 617, 618, 619, 620, 621, 622, 626, 628], "private_block": [16, 48, 133, 134, 135], "private_cr": [16, 48, 111, 112, 120, 123, 124, 125, 133, 134, 135, 136, 299], "private_creator_el": 136, "private_elem": 626, "privateblock": [48, 133, 134, 135, 588], "privaterecorduid": 176, "privileg": 630, "probabl": [23, 53, 628], "problem": [599, 617, 626], "proc": 20, "procedur": 628, "process": [20, 25, 26, 30, 35, 37, 38, 40, 46, 130, 133, 134, 135, 148, 233, 245, 246, 249, 250, 252, 253, 261, 265, 267, 288, 290, 523, 552, 591, 599, 602, 614, 617, 619, 620, 624, 625, 631, 634, 636], "produc": [12, 24, 26, 29, 51, 53, 54, 299, 553, 556, 599, 607, 612, 617, 620], "product": [20, 553], "profil": [224, 234, 269, 277, 599, 620], "program": [26, 27, 49, 599, 600, 605], "progress": [37, 599, 619, 625], "project": [9, 10, 20, 98, 624, 625, 630], "projector": 20, "prolept": [551, 555], "promot": [599, 605], "prompt": 43, "pronoun": 54, "proof": [47, 97], "propag": [599, 612], "proper": [54, 599, 602], "properli": [624, 634], "properti": [10, 14, 29, 30, 35, 43, 46, 57, 68, 129, 133, 134, 135, 160, 162, 163, 175, 176, 177, 252, 253, 261, 262, 297, 298, 299, 523, 558, 599, 600, 602, 605, 608, 609, 615, 620, 621, 628, 631, 632], "protect": 44, "protocol": [174, 299, 556], "provid": [30, 35, 40, 43, 48, 51, 55, 98, 129, 133, 134, 135, 145, 147, 151, 216, 219, 221, 222, 253, 262, 584, 599, 606, 627, 630, 631, 634, 635], "ps3": [22, 558], "psnr": [133, 134, 135, 232, 281], "pt000000": [10, 628], "pt000001": [10, 628], "pt000002": [10, 628], "pt000003": 10, "ptv": [26, 27], "ptxxxxxx": 176, "pubchem_cid": 635, "public": [40, 133, 134, 135, 187], "pull": [25, 26, 28, 623, 630], "puls": 20, "punctuat": [523, 560], "purpos": [37, 38, 631], "push": [624, 625], "put": 188, "px": 38, "py": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 43, 53, 85, 86, 98, 599, 600, 603, 604, 605, 606, 607, 608, 616, 622, 624, 626, 628, 630, 631, 634], "py3": 630, "pydicom": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 25, 29, 30, 32, 33, 35, 37, 38, 39, 41, 46, 50, 51, 52, 53, 54, 61, 71, 585, 588, 600, 602, 603, 604, 605, 606, 607, 608, 609, 612, 614, 615, 617, 622, 624, 625, 626, 627, 628, 629, 631, 632, 634, 635, 636], "pydicom_futur": [44, 599, 615], "pydicom_seri": [599, 603, 606, 607], "pydicom_subcommand": [25, 26], "pydicom_test": [10, 628], "pyjpegl": [38, 45, 133, 134, 135, 218, 232, 247, 248, 258, 259, 281, 599, 620, 631], "pylibjpeg": [29, 39, 45, 46, 133, 134, 135, 221, 232, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 256, 257, 260, 262, 281, 599, 615, 617, 620, 621, 631, 632, 634], "pylibjpeg_handl": 98, "pypi": [599, 608, 610, 630], "pyplot": [3, 4, 9, 49, 632, 634, 636], "pyproject": [26, 27, 44, 599, 619], "pysid": [599, 606], "pytest": [599, 619], "python": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 41, 42, 43, 44, 48, 49, 53, 54, 55, 77, 78, 80, 95, 133, 134, 135, 217, 218, 220, 523, 560, 599, 600, 602, 603, 605, 606, 607, 608, 609, 610, 611, 614, 615, 616, 617, 619, 620, 621, 624, 625, 626, 627, 630, 631, 632, 634, 636], "python3": 628, "pythoncod": [24, 26], "q": [26, 27, 28, 624, 631], "qt": [599, 606], "qualiti": [34, 37, 38, 133, 134, 135, 232, 281, 631], "quantiti": [51, 584, 636], "quantiz": 553, "queri": [10, 94, 176, 628], "question": 623, "quickli": [169, 628], "quiet": [26, 27, 28, 553], "quinci": 558, "quit": [37, 53, 599, 602, 624], "r": [20, 40, 129, 133, 134, 135, 523, 560, 627, 631, 632], "r1": 40, "r100": [599, 601], "r102": [599, 601], "r103": [599, 601], "r104": [599, 601], "r105": [599, 601], "r109": [599, 601], "r110": [599, 601], "r111": [599, 601], "r113": [599, 601], "r2": 40, "r45": [599, 600], "r46": [599, 600], "r50": [599, 600], "r51": [599, 600], "r55": [599, 600], "r64": [599, 600], "r65": [599, 600], "r67": [599, 600], "r68": [599, 600], "r69": [599, 600], "r70": [599, 600], "r72": [599, 600], "r73": [599, 600], "r78ba350a3eb8": [599, 606], "r91": [599, 601], "r95": [599, 601], "r96": [599, 601], "r97": [599, 601], "r98": [599, 601], "ra": 20, "radiotherapi": 174, "radiu": 632, "radix": 553, "radlex": 635, "rai": [20, 26, 28, 626], "rais": [44, 57, 77, 78, 80, 82, 83, 85, 86, 98, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 123, 124, 125, 131, 133, 134, 135, 136, 137, 149, 152, 158, 160, 162, 163, 166, 168, 171, 176, 184, 185, 187, 200, 215, 216, 217, 218, 219, 220, 221, 222, 253, 262, 266, 279, 289, 291, 294, 295, 296, 299, 302, 523, 549, 553, 554, 556, 557, 560, 561, 566, 568, 580, 588, 599, 603, 604, 609, 611, 612, 615, 617, 618, 620, 626, 628, 631, 634], "raise_orphan": 176, "randbelow": [549, 599, 620], "random": [549, 599, 620], "rang": [20, 30, 35, 38, 40, 50, 94, 215, 225, 227, 262, 265, 270, 272, 288, 295, 523, 553, 560, 599, 610, 612, 626, 631], "rare": [599, 620], "rate": [26, 27], "rather": [24, 26, 27, 28, 50, 53, 129, 133, 134, 135, 176, 215, 231, 280, 553, 599, 600, 601, 608, 612, 614, 617, 620, 626], "ratio": [20, 34, 37, 38, 39, 133, 134, 135, 232, 281, 299, 553, 554, 556, 557, 631], "ration": [299, 556], "raw": [29, 30, 35, 38, 43, 50, 51, 52, 129, 130, 131, 132, 133, 134, 135, 145, 147, 151, 157, 164, 168, 174, 207, 209, 210, 211, 212, 253, 262, 265, 267, 288, 290, 584, 599, 605, 611, 614, 620, 631, 632, 634, 636], "raw_data_el": [130, 582], "raw_data_elem": 168, "raw_el": [210, 211], "raw_element_kwarg": [132, 207], "raw_element_valu": [132, 207, 210, 211, 588], "raw_element_value_fix_separ": [207, 588], "raw_element_value_retri": 588, "raw_element_vr": [132, 207, 588], "rawdatael": [61, 92, 130, 132, 133, 134, 135, 164, 168, 186, 198, 209, 210, 211, 212, 582, 599, 620], "rawiobas": [162, 163], "raybaut": [599, 602], "rb": [32, 134, 141, 143, 265, 267, 288, 290, 626], "rbg": [599, 617], "rd000000": 628, "re": [10, 16, 50, 55, 137, 224, 269, 471, 472, 623, 624, 625, 626, 628, 630, 631, 632, 634, 636], "reach": [170, 182, 184, 252], "reachabl": 625, "read": [0, 2, 6, 7, 8, 13, 14, 16, 17, 18, 20, 24, 26, 27, 28, 29, 32, 43, 44, 48, 50, 51, 53, 55, 57, 68, 71, 77, 83, 90, 95, 107, 133, 134, 135, 138, 139, 145, 146, 147, 149, 151, 155, 156, 157, 158, 160, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 180, 181, 183, 184, 213, 217, 219, 252, 253, 265, 267, 288, 290, 550, 556, 557, 588, 599, 600, 601, 602, 603, 604, 605, 608, 609, 610, 611, 612, 614, 615, 617, 618, 619, 620, 622, 625, 627, 628, 629, 634, 635], "read_byt": 14, "read_data_el": 164, "read_dataset": [14, 71, 170], "read_deferred_data_el": 71, "read_dicomdir": [599, 607], "read_encod": [133, 134, 135, 599, 620], "read_exact": [160, 162, 163], "read_fil": [599, 601, 602, 603, 608, 617, 620], "read_file_meta_info": [71, 134], "read_implicit_vr": [133, 134, 135, 599, 620], "read_item": [599, 620], "read_little_endian": [133, 134, 135, 599, 620], "read_onli": 219, "read_ow": [599, 600], "read_parti": [71, 166, 213, 626], "read_preambl": [71, 213, 626], "read_sequ": 71, "read_sequence_item": 71, "read_siz": [181, 182, 183, 184], "read_tag": [160, 162, 163], "read_u": [160, 162, 163], "read_ul": [160, 162, 163], "read_undefined_length_valu": 71, "readabl": [68, 133, 134, 135, 145, 146, 147, 151, 155, 156, 166, 599, 620], "readablebuff": [134, 145, 146, 147, 151, 155, 156, 160, 162, 163, 166], "reader": 54, "readfil": [599, 601], "readi": [624, 625], "reading_validation_mod": [44, 57, 77, 78, 80, 96, 133, 134, 135, 599, 618], "readm": 10, "real": [299, 554, 556, 557, 624, 625, 636], "realli": [43, 599, 602, 611], "reason": [54, 625, 634], "rebuild": 625, "recalcul": 628, "receiv": [20, 200], "recent": [86, 624, 625, 626, 628, 631, 634], "recommend": [23, 25, 26, 30, 37, 38, 43, 44, 45, 46, 94, 133, 134, 135, 140, 142, 176, 215, 224, 266, 269, 289, 295, 626, 628, 630, 631], "recon": 20, "reconstruct": [20, 37], "record": [10, 20, 174, 175, 176, 177, 599, 612, 618, 628], "record_gen": 628, "record_typ": [177, 628], "recordinuseflag": 174, "recordnod": [175, 176, 588], "recreat": [24, 26, 599, 607], "recurs": [0, 4, 48, 133, 134, 135, 599, 601, 603], "recursionerror": [599, 620], "red": [33, 37, 38, 39, 40, 223, 268, 599, 614, 621, 624, 625], "reduc": [50, 51, 178, 233, 276, 599, 610, 615, 620, 628], "ref": 20, "refactor": [599, 620], "refd_beam1": [24, 26], "refd_beam_sequ": [24, 26], "refer": [2, 8, 20, 26, 27, 40, 43, 51, 54, 94, 140, 144, 147, 148, 149, 150, 151, 152, 154, 155, 175, 216, 223, 225, 227, 228, 229, 230, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 256, 257, 258, 259, 260, 261, 266, 268, 270, 272, 273, 274, 275, 276, 279, 289, 292, 294, 549, 599, 602, 624, 628, 631, 636], "referenc": [24, 26, 27, 28, 43, 54, 169, 175, 176, 628], "referencedbeamsequ": [24, 26], "reflect": 252, "refus": 98, "reg": 20, "regard": 2, "regex": [471, 472], "regist": [16, 25, 26, 48, 129, 207, 523, 550, 560, 599, 615, 620, 626], "register_callback": [92, 132, 207, 210, 211], "register_error": [523, 560], "register_kwarg": [93, 132, 207, 210, 211], "register_transfer_syntax": [467, 599, 620], "registr": 174, "regress": [599, 613, 614, 624], "regular": [26, 27, 43, 523, 560, 599, 619], "reinstal": [26, 27], "rel": [68, 160, 162, 163, 179, 224, 234, 269, 277, 599, 620], "relat": [25, 26, 27, 38, 40, 44, 50, 52, 60, 133, 134, 135, 136, 187, 216, 219, 221, 222, 252, 278, 293, 584, 595, 599, 600, 620, 624, 628, 631, 636], "relationship": [37, 38, 39, 176, 625], "relative_to": 10, "releas": [23, 48, 588, 608, 612, 615, 620, 621], "relev": [45, 130, 185, 186, 187, 624], "reli": [46, 81], "reload": 43, "remain": [40, 149, 176, 523, 560, 599, 605, 625], "remaind": 553, "remainder_near": 553, "rememb": [43, 48, 50], "remind": 54, "remot": [624, 625], "remov": [10, 12, 17, 43, 44, 47, 92, 93, 99, 130, 133, 134, 135, 138, 139, 149, 150, 152, 157, 175, 176, 177, 187, 215, 233, 253, 262, 265, 267, 276, 278, 283, 288, 290, 293, 295, 523, 560, 585, 586, 608, 609, 610, 611, 614, 615, 616, 617, 618, 619, 621, 624, 626], "remove_plugin": [253, 262], "remove_private_tag": [17, 48, 133, 134, 135], "removeprefix": [523, 560], "removesuffix": [523, 560], "renam": [599, 600, 608, 614, 619, 620], "render": [224, 234, 269, 277], "reopen": 12, "reorgan": [599, 600, 602], "rep": 20, "repeat": [26, 27, 50, 119, 122, 126, 127, 176, 599, 610, 619, 626], "repetit": [2, 8, 20, 53], "replac": [17, 77, 78, 80, 110, 210, 523, 551, 555, 559, 560, 599, 611, 618], "replace_un_with_known_vr": [599, 614], "replic": [26, 27], "report": [599, 612, 623, 629], "repositori": [26, 27, 107, 599, 620, 630], "repr": [8, 101, 523, 560, 599, 614], "repr_valu": 8, "repres": [10, 35, 43, 51, 102, 129, 133, 134, 135, 149, 166, 187, 299, 551, 555, 556, 557, 558, 561, 624, 631, 634, 636], "represent": [2, 8, 20, 26, 28, 29, 32, 37, 39, 40, 42, 43, 62, 65, 76, 110, 112, 114, 124, 129, 133, 134, 135, 136, 144, 175, 176, 177, 225, 227, 232, 252, 253, 261, 265, 267, 270, 272, 278, 281, 288, 290, 293, 296, 299, 553, 554, 556, 557, 558, 560, 561, 578, 581, 588, 599, 615, 617, 620, 626, 627, 632, 634, 636], "reproduc": 624, "repval": [129, 133, 134, 135], "request": [25, 26, 28, 43, 299, 556, 599, 615, 617, 623], "requir": [2, 10, 12, 20, 26, 27, 29, 33, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 129, 132, 133, 134, 135, 140, 144, 145, 147, 148, 149, 150, 151, 166, 176, 185, 187, 200, 207, 215, 216, 217, 218, 219, 221, 222, 223, 224, 229, 230, 232, 234, 252, 253, 254, 262, 265, 267, 268, 269, 274, 275, 277, 279, 281, 282, 284, 288, 290, 292, 294, 300, 550, 561, 599, 602, 606, 610, 614, 615, 620, 621, 625, 626, 628, 630, 631, 632, 634, 636], "resampl": 219, "rescal": [20, 38, 47, 225, 227, 229, 230, 270, 272, 274, 275, 631, 634], "rescaleintercept": 634, "rescaleslop": 634, "reserv": [48, 523, 560], "reset": [78, 97, 99, 133, 134, 135, 151, 156], "reset_data_element_callback": 588, "reshap": [98, 133, 134, 135, 216, 221, 252, 253, 265, 267, 288, 290, 292], "reshape_overlay_arrai": 216, "reshape_pixel_arrai": [599, 620], "resiz": 50, "reslic": [4, 5, 622], "resolut": 37, "resolv": [0, 130, 185, 599, 605, 611, 620], "resort": [599, 618], "resourc": 624, "respect": [77, 94, 599, 609], "respiratori": 636, "respons": [166, 558, 627], "responsible_party_nam": 558, "responsible_party_name_ideograph": 558, "responsible_party_name_phonet": 558, "rest": [523, 560, 599, 618, 625], "restor": [599, 614], "restrict": [33, 38, 40, 631, 632], "restructuredtext": 625, "result": [10, 17, 24, 25, 26, 27, 37, 38, 39, 42, 44, 45, 53, 78, 80, 132, 133, 134, 135, 187, 209, 210, 211, 212, 232, 253, 254, 265, 267, 281, 282, 288, 290, 299, 523, 549, 553, 560, 599, 617, 620, 624, 625, 631, 632, 634], "result_load": 10, "ret": 129, "retain": [561, 599, 617], "retir": [40, 110, 117, 129, 133, 134, 135, 185, 186, 265, 267, 288, 290, 305, 523, 599, 615], "retri": 211, "retriev": [43, 113, 114, 115, 118, 119, 120, 121, 123, 124, 125, 128, 129, 133, 134, 135, 599, 612, 620, 626, 627], "return": [10, 11, 14, 29, 30, 32, 35, 40, 43, 48, 50, 51, 52, 54, 68, 70, 77, 78, 80, 81, 91, 92, 98, 103, 104, 105, 106, 107, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 149, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 199, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 252, 253, 254, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 523, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 599, 600, 601, 602, 603, 609, 610, 611, 612, 614, 615, 617, 618, 620, 621, 626, 627, 628, 632, 634, 636], "rev": 558, "revers": [37, 46, 177, 215, 295, 599, 612], "revert": [133, 134, 135, 599, 606], "review": [24, 26, 623, 624, 625], "revis": [20, 599, 603, 605, 606], "rewind": [14, 171, 181, 182, 183, 599, 606], "rewrit": [556, 557], "rfc": 631, "rfind": [523, 560], "rg1_unci": [599, 615], "rgb": [29, 30, 33, 34, 35, 37, 38, 39, 40, 51, 98, 133, 134, 135, 217, 218, 219, 220, 221, 222, 223, 224, 233, 252, 253, 254, 265, 267, 268, 269, 276, 278, 282, 288, 290, 293, 599, 609, 612, 617, 620, 631, 634], "rgb_color": [37, 38, 39, 70, 631], "rgba": [223, 268], "rhapsod": 20, "rhythm": 636, "rickard": [599, 607], "right": [20, 37, 133, 134, 135, 232, 281, 523, 553, 560, 631], "rightmost": 553, "rindex": [523, 560], "risk": [26, 27], "rjust": [523, 560], "rle": [36, 40, 42, 45, 46, 51, 133, 134, 135, 140, 142, 148, 221, 222, 232, 251, 260, 262, 263, 264, 281, 292, 474, 599, 610, 611, 617, 618, 620, 621, 630], "rle_encode_fram": [599, 617, 620], "rle_fix_gdcm_big_endian": 34, "rle_handl": [98, 599, 618, 620], "rle_segment_ord": [29, 222], "rlecompressedlosslesssyntax": [599, 615, 620], "rlelossless": [30, 35, 39, 45, 133, 134, 135, 232, 281, 624, 631], "rlelosslessdecod": 30, "rlelosslessencod": [34, 35, 39, 599, 617, 620], "rletransfersyntax": [599, 615, 620], "rn": 40, "robert": 558, "root": [0, 9, 10, 22, 26, 27, 98, 176, 177, 179, 460, 549, 553, 626, 628], "rotat": [20, 553], "roughli": 632, "round": [89, 266, 289, 553], "round_half_even": 553, "rout": 20, "routin": 183, "row": [0, 2, 8, 9, 20, 26, 28, 29, 30, 35, 38, 40, 50, 51, 133, 134, 135, 216, 219, 221, 222, 224, 231, 232, 233, 252, 253, 261, 262, 265, 266, 267, 269, 276, 278, 280, 281, 284, 285, 288, 289, 290, 292, 293, 631, 632, 634], "rowconfigur": 0, "rpartit": [523, 560], "rpcl": [42, 46, 241, 263], "rsplit": [523, 560], "rst": [624, 625], "rstrip": [523, 560], "rt": [26, 27, 28, 43, 70, 174, 176, 628], "rt_dose": [70, 628, 634], "rt_plan": [43, 70], "rt_ss": 70, "rtdose": 70, "rtplan": [6, 7, 13, 24, 26, 27, 28, 43, 70, 166, 622], "rtstruct": 70, "ruff": [599, 620], "rule": 198, "run": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 43, 44, 53, 110, 133, 134, 135, 558, 599, 602, 605, 615, 620, 625, 626, 629, 630], "runner": [30, 35, 252, 261, 631], "runtimeerror": [133, 134, 135, 221, 634], "s390x": [599, 621], "safe": [253, 262, 301], "sag_aspect": 4, "sagitt": [1, 5, 6, 599, 611, 622], "sai": [53, 624, 626], "sake": [266, 289], "same": [4, 30, 35, 43, 44, 50, 110, 133, 134, 135, 162, 163, 176, 215, 224, 253, 269, 523, 551, 553, 554, 555, 560, 599, 603, 605, 625, 626, 628, 631, 634], "same_quantum": 553, "sampl": [2, 8, 20, 29, 30, 33, 35, 37, 38, 39, 40, 42, 51, 52, 133, 134, 135, 224, 232, 252, 253, 261, 262, 265, 267, 269, 278, 281, 286, 288, 290, 292, 293, 584, 599, 620, 631, 632, 634, 636], "samples_per_pixel": [29, 30, 35, 231, 252, 261, 262, 280, 634], "samplesperpixel": [33, 37, 38, 39, 219, 221, 222, 284, 285, 292, 599, 605, 610, 631, 632], "sampling_fq": 3, "samplingfrequ": [3, 52, 636], "satisfi": [553, 554, 561], "satur": [224, 234, 269, 277], "save": [14, 16, 24, 26, 45, 50, 51, 599, 602, 605, 620, 625, 626, 627, 636], "save_a": [12, 16, 17, 24, 26, 32, 45, 50, 51, 133, 134, 135, 141, 143, 187, 232, 281, 599, 601, 614, 620, 626, 631, 636], "save_filenam": [24, 26], "savea": [599, 601], "savenam": [24, 26], "saw": 626, "sb": 584, "scale": 20, "scaleb": 553, "scan": [2, 8, 20, 26, 28, 174], "schaefer": [599, 606], "scheme": [37, 38, 39, 164, 296, 297, 298, 523, 560, 571, 572, 578, 581, 582, 596, 631, 634, 635, 636], "scheme_design": [296, 297, 596, 599, 620, 635], "scheme_vers": [296, 596, 635], "scientif": 561, "scope": 631, "scout": [4, 20], "scratch": [12, 18, 47, 133, 134, 135, 187, 599, 603, 604, 617, 624, 632, 634], "screen": [20, 24, 26], "script": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 24, 25, 26, 53, 599, 609, 621], "scroll": 624, "sct": [596, 599, 620, 635], "se": [2, 8, 20], "se000000": [10, 628], "se000001": [10, 628], "se000002": [10, 628], "search": [10, 107, 148, 176, 181, 182, 183, 523, 560, 599, 617, 626, 628], "sec": 20, "second": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 37, 38, 40, 44, 553, 555, 558, 559, 631, 632, 636], "secondari": [2, 8, 20], "secret": 549, "sect": 558, "sect_6": 54, "section": [2, 24, 25, 26, 27, 33, 37, 38, 39, 40, 43, 45, 48, 51, 53, 54, 57, 101, 129, 133, 134, 135, 136, 140, 144, 154, 200, 204, 216, 233, 253, 265, 266, 267, 276, 279, 288, 289, 290, 292, 294, 558, 624, 625], "secur": [599, 620, 621], "see": [23, 24, 26, 27, 28, 32, 35, 37, 38, 39, 43, 44, 45, 51, 53, 57, 129, 133, 134, 135, 136, 164, 167, 170, 174, 182, 183, 184, 187, 200, 204, 207, 228, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 262, 265, 267, 273, 281, 282, 288, 290, 553, 557, 558, 599, 602, 612, 613, 614, 617, 620, 624, 625, 626, 628, 630, 632, 635], "seek": [14, 68, 133, 134, 135, 145, 146, 147, 151, 155, 156, 160, 162, 163, 166, 187, 599, 601, 611, 620], "seekabl": 68, "seem": 624, "seen": [10, 25, 26, 90, 625, 636], "segment": [20, 29, 33, 222, 223, 268, 599, 610, 617, 631], "select": [43, 133, 134, 135, 148, 250, 631], "self": [14, 158, 299, 523, 551, 553, 554, 555, 556, 557, 559, 626, 631, 634], "semant": [10, 54, 176, 558, 628], "send": [200, 624, 625], "sens": [599, 602], "sensit": [24, 26, 52, 53, 133, 134, 135, 584, 636], "sent": [599, 620], "sep": [523, 555, 560], "separ": [38, 45, 101, 133, 134, 135, 140, 142, 210, 523, 555, 558, 560, 599, 602, 603, 631, 632, 634], "septemb": 23, "seq": [54, 626], "seq_idx": 0, "seq_item": 0, "sequenc": [0, 2, 3, 6, 8, 15, 19, 20, 24, 26, 27, 28, 32, 47, 52, 53, 54, 61, 78, 80, 90, 133, 134, 135, 144, 148, 149, 150, 167, 172, 173, 177, 180, 181, 203, 204, 225, 227, 228, 229, 270, 272, 273, 274, 558, 572, 584, 588, 599, 600, 601, 605, 606, 609, 611, 612, 613, 615, 616, 617, 618, 619, 620, 622, 628, 636], "sequence_element_format": [133, 134, 135], "sequence_item": 8, "seri": [2, 8, 10, 20, 54, 169, 174, 176, 599, 603, 625, 628], "serial": [2, 8, 20, 129, 133, 134, 135, 627], "series_uid": 10, "seriesinstanceuid": 10, "seriesnumb": [10, 43, 628], "server": 625, "servic": [20, 628], "session": [43, 44, 48, 133, 134, 135, 625], "set": [2, 6, 7, 12, 13, 18, 20, 25, 26, 27, 28, 32, 37, 40, 43, 44, 45, 47, 50, 51, 53, 55, 57, 70, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 92, 93, 94, 96, 97, 102, 103, 104, 110, 129, 132, 133, 134, 135, 149, 152, 158, 160, 162, 163, 166, 167, 168, 174, 175, 176, 178, 179, 184, 187, 199, 209, 210, 211, 232, 252, 254, 261, 278, 281, 282, 293, 523, 550, 553, 557, 558, 560, 561, 562, 588, 599, 600, 605, 608, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 622, 626, 627, 629, 630, 631, 632, 634, 636], "set_aspect": 4, "set_data": [632, 634], "set_decod": 252, "set_default": [25, 26], "set_encod": 261, "set_opt": [30, 35, 252, 261], "set_original_encod": [133, 134, 135], "set_pixel_data": [133, 134, 135, 588, 599, 620, 621], "set_private_encod": [523, 550, 599, 620], "set_sourc": [252, 261], "set_titl": [3, 634], "set_xlabel": 3, "set_ylabel": [3, 636], "setdefault": [133, 134, 135, 599, 611, 615], "setup": [25, 26, 27, 28, 599, 606, 607, 619], "setuptool": [25, 26, 599, 600, 607, 617], "sever": [49, 57, 599, 606, 608], "sex": [2, 8, 20], "sexxxxxx": 176, "sfov": 20, "sh": [2, 12, 16, 20, 26, 28, 32, 43, 48, 200, 581, 626], "sha512": 549, "shall": [98, 144, 148, 149, 152, 153, 154, 164, 187, 200], "shallow": [133, 134, 135], "shape": [2, 4, 38, 50, 51, 52, 133, 134, 135, 216, 217, 218, 221, 224, 232, 233, 253, 262, 265, 266, 267, 269, 276, 278, 281, 288, 289, 290, 292, 293, 584, 631, 632, 634, 636], "share": 628, "shift": [29, 553], "short": [32, 580, 624, 626], "should": [18, 25, 26, 27, 30, 32, 33, 35, 37, 38, 39, 40, 43, 44, 48, 50, 51, 53, 54, 129, 133, 134, 135, 145, 147, 148, 149, 150, 151, 152, 166, 171, 174, 176, 178, 185, 186, 200, 207, 209, 210, 211, 212, 215, 217, 218, 219, 220, 221, 222, 232, 233, 253, 262, 265, 266, 267, 276, 281, 288, 289, 290, 297, 549, 577, 599, 601, 602, 609, 610, 615, 624, 625, 626, 628, 629, 631, 632, 634, 636], "should_change_photometricinterpretation_to_rgb": [217, 218, 219, 220, 221, 222], "shouldn": 29, "show": [2, 3, 4, 6, 9, 10, 12, 17, 21, 24, 25, 27, 48, 53, 54, 110, 129, 599, 600, 604, 606, 617, 619, 622, 625, 626, 632, 634, 636], "show_charset_nam": [21, 22, 622], "show_dicomdir": [599, 607, 608], "show_file_meta": [588, 599, 614], "shown": [25, 26, 28, 43, 48, 53, 57, 292, 599, 600, 601, 614, 626, 628], "showvr": 129, "shrunk": 51, "shutil": 628, "sibl": 177, "side": 20, "sigma": 635, "sign": [29, 30, 32, 35, 37, 38, 40, 51, 81, 262, 299, 553, 556, 599, 615, 624, 625, 631, 634, 636], "signal": [30, 34, 35, 37, 133, 134, 135, 232, 281, 553, 631], "signal_to_noise_ratio": 34, "signatur": [30, 35, 132, 162, 163, 207, 599, 615], "signed": [29, 38, 133, 134, 135, 253, 265, 267, 288, 290], "signific": [29, 40, 44, 299, 556, 563, 574, 576, 599, 602], "silent": [599, 617], "similar": [26, 27, 54, 133, 134, 135, 204, 553, 599, 601, 605, 627, 632, 635], "similarli": [43, 552, 626], "simpl": [22, 43, 599, 600], "simpler": 626, "simplest": [44, 628, 630], "simpli": [26, 27], "simplifi": [160, 162, 599, 601, 605, 620, 631], "simul": [16, 133, 134, 135], "sin": 636, "sinc": [18, 40, 48, 92, 93, 99, 130, 133, 134, 135, 138, 139, 148, 149, 150, 152, 157, 187, 553, 585, 586, 599, 619, 624, 628, 636], "sine": 636, "singl": [25, 26, 30, 32, 33, 35, 37, 38, 39, 40, 54, 79, 109, 111, 129, 133, 134, 135, 140, 144, 149, 151, 152, 157, 173, 174, 176, 205, 206, 215, 216, 221, 252, 253, 261, 262, 265, 267, 278, 288, 290, 292, 293, 568, 577, 599, 600, 610, 618, 624, 627, 628, 631, 632, 634], "singleton": [57, 208, 599, 620], "site": 628, "size": [2, 8, 9, 20, 24, 26, 35, 37, 51, 53, 57, 68, 98, 129, 160, 162, 163, 167, 184, 217, 218, 523, 560, 599, 609, 615, 619, 630, 632], "size_in_byt": 588, "skip": [4, 18, 599, 618, 624, 634], "skipcount": 4, "sl": [20, 26, 28, 32, 584], "slice": [1, 2, 5, 6, 8, 9, 20, 26, 28, 133, 134, 135, 523, 560, 599, 608, 609, 611, 622, 634], "sliceloc": [4, 9, 26, 28], "slicethick": 4, "slight": 634, "slope": [20, 225, 227, 270, 272], "slow": [599, 606], "slower": [39, 42, 45, 279, 294], "slowest": [599, 618], "small": [599, 602, 608, 610, 623, 630], "smaller": [553, 627], "smallest": [2, 8, 20, 553], "smart": 20, "smptest211020uncompressedinterlacedactivevideo": [599, 620], "smptest211020uncompressedprogressiveactivevideo": [599, 620], "smptest211030pcmdigitalaudio": [599, 620], "sn": 20, "snan": 553, "snapshot": 630, "snip": 626, "snippet": [25, 26, 48], "snome": 297, "so": [3, 16, 26, 27, 30, 32, 35, 38, 40, 43, 44, 45, 50, 51, 53, 54, 94, 133, 134, 135, 176, 178, 187, 213, 297, 550, 552, 553, 599, 600, 603, 620, 624, 626, 627, 628, 631, 632, 636], "softwar": [2, 8, 20, 44, 630], "softwarevers": 43, "some": [9, 14, 16, 17, 26, 28, 43, 44, 48, 50, 51, 52, 53, 54, 57, 77, 90, 100, 133, 134, 170, 187, 553, 554, 561, 599, 600, 601, 603, 605, 608, 609, 619, 625, 626, 627, 628, 630, 635], "somenewtag": 48, "someth": [10, 14, 23, 25, 26, 30, 35, 50, 54, 133, 599, 620, 624, 632], "sometim": [44, 48, 599, 610, 620, 634], "somewher": 6, "son": 133, "sop": [2, 8, 9, 10, 12, 20, 26, 27, 28, 39, 43, 48, 51, 52, 70, 133, 134, 135, 137, 169, 174, 175, 176, 177, 187, 200, 223, 232, 254, 268, 278, 281, 282, 293, 588, 599, 608, 609, 615, 618, 619, 621, 626, 631, 632, 634], "sopclassuid": [9, 24, 26, 28, 175, 626, 636], "sopinstanceuid": [24, 26, 39, 175], "sorri": [599, 607], "sort": [4, 10, 133, 134, 135, 297, 628], "sort_kei": [133, 134, 135], "sourc": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 23, 26, 28, 29, 30, 35, 48, 53, 57, 68, 77, 78, 79, 80, 82, 83, 95, 97, 99, 100, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 407, 408, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 599, 607, 615, 617, 620, 623, 626, 629, 630, 636], "sourcetosurfacedist": 11, "space": [2, 8, 9, 20, 29, 30, 33, 35, 37, 38, 39, 40, 47, 54, 110, 133, 134, 135, 224, 233, 234, 252, 254, 262, 269, 276, 277, 282, 523, 558, 560, 563, 574, 576, 578, 599, 608, 620, 626, 628, 631, 634], "span": 148, "sparingli": 54, "special": [44, 61, 588, 599, 606], "specif": [10, 20, 24, 26, 27, 28, 29, 35, 36, 43, 45, 48, 50, 51, 53, 54, 77, 78, 79, 80, 133, 134, 135, 166, 167, 176, 181, 204, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 523, 553, 560, 583, 599, 600, 602, 608, 610, 611, 614, 615, 620, 624, 625, 626, 627, 628, 631, 632, 634], "specifi": [24, 25, 26, 27, 28, 37, 38, 40, 43, 110, 112, 129, 133, 134, 135, 151, 166, 167, 187, 199, 224, 232, 234, 253, 254, 262, 265, 267, 269, 277, 281, 282, 288, 290, 523, 551, 553, 555, 558, 559, 560, 584, 599, 612, 617, 621, 626, 628, 630, 631, 634], "specific_tag": [164, 166, 167, 170, 265, 267, 288, 290, 626], "specificcharacterset": 174, "spectroscopi": 174, "sped": 631, "speed": [20, 599, 602, 606, 610, 617, 619], "spell": [54, 77, 599, 610], "sphinx": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 54, 599, 603, 625], "spine": [10, 628], "split": [20, 523, 560, 583, 599, 600, 601], "splitlin": [523, 560], "spot": 20, "spread": [599, 620], "spring": [223, 268], "sq": [0, 8, 32, 57, 129, 133, 134, 135, 164, 572, 599, 605, 615, 618, 620, 626], "sqrt": 553, "squar": [43, 48, 553, 626], "sr": [174, 558, 588, 599, 617, 620, 635], "src": [9, 10, 29, 30, 34, 35, 38, 70, 98, 252, 253, 261, 262, 265, 267, 279, 283, 288, 290, 294, 628, 631], "srgb": [224, 234, 269, 277], "srt": [599, 620], "ss": [2, 4, 20, 26, 28, 32, 185, 186, 211, 555, 559, 584, 599, 601, 620, 636], "ssd": 11, "st": 32, "st000000": [10, 628], "st000001": [10, 628], "st000002": 10, "st000003": 10, "st_mtime": 168, "stabl": 630, "stack": 636, "stackoverflow": 623, "stage": [10, 175, 176, 624, 625], "stamp": 20, "stand": 77, "standard": [12, 20, 22, 32, 33, 37, 38, 39, 40, 44, 45, 48, 51, 52, 54, 57, 129, 133, 134, 135, 136, 140, 144, 147, 148, 149, 150, 151, 152, 154, 155, 176, 187, 200, 204, 216, 219, 223, 225, 227, 228, 229, 230, 233, 266, 268, 270, 272, 273, 274, 275, 276, 279, 289, 292, 294, 300, 549, 553, 554, 557, 558, 599, 601, 604, 605, 607, 608, 615, 617, 620, 621, 627, 628, 630, 631, 632, 636], "start": [0, 6, 17, 18, 20, 24, 26, 27, 28, 38, 50, 53, 68, 129, 131, 133, 134, 135, 136, 146, 147, 149, 151, 152, 155, 156, 165, 171, 177, 178, 183, 185, 186, 215, 252, 253, 267, 290, 295, 296, 523, 549, 560, 572, 580, 599, 609, 619, 620, 624, 625, 626, 627, 631, 635], "startswith": [523, 560], "stat": [20, 168], "state": [193, 599, 620, 627], "statement": [599, 603], "static": [26, 28, 135, 523, 560], "station": [2, 8, 20], "statu": [20, 117, 129], "stdin": [86, 626, 628, 631, 634], "stdlib": 49, "stdout": [24, 26], "step": [54, 599, 606, 617, 628, 635, 636], "stereometr": 174, "stick": 626, "sticki": 0, "still": [10, 45, 48, 599, 605, 606, 608, 609, 610, 612, 624, 626, 627, 628, 634], "stop": [131, 166, 170, 215, 295, 296, 523, 560, 599, 602], "stop_before_pixel": [166, 599, 602, 634], "stop_when": [164, 167, 170], "storag": [2, 9, 12, 14, 20, 26, 27, 28, 43, 48, 51, 70, 137, 198, 200, 588, 599, 602, 603, 608, 618, 626, 628, 636], "store": [2, 8, 10, 17, 20, 29, 32, 35, 38, 39, 40, 42, 43, 48, 51, 107, 129, 132, 133, 134, 135, 166, 201, 209, 210, 211, 212, 225, 227, 232, 252, 261, 262, 270, 272, 278, 281, 283, 293, 551, 553, 554, 555, 556, 557, 559, 599, 602, 617, 620, 621, 626, 627, 628, 631, 632, 634, 636], "store_data_and_return_uri": 627, "str": [0, 11, 14, 20, 29, 30, 32, 35, 43, 77, 78, 79, 80, 89, 93, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 145, 146, 147, 151, 155, 156, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 187, 188, 194, 198, 199, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 222, 223, 224, 231, 232, 233, 234, 252, 253, 254, 261, 262, 263, 264, 265, 267, 268, 269, 276, 277, 278, 280, 281, 282, 284, 285, 286, 288, 290, 293, 296, 297, 298, 299, 300, 523, 549, 550, 551, 552, 553, 554, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 599, 609, 614, 617, 626, 630, 632, 634], "straightforward": [51, 631], "stream": [68, 149, 157, 160, 162, 163, 599, 620, 624, 631, 634], "streamhandl": 95, "streamlin": [599, 606], "strftime": [12, 551, 555, 559], "strict": [0, 44, 523, 557, 560, 599, 612, 619], "strictli": 44, "string": [16, 17, 20, 25, 26, 32, 43, 57, 78, 79, 80, 110, 129, 133, 134, 135, 136, 166, 177, 188, 197, 199, 201, 205, 206, 215, 253, 262, 297, 299, 523, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 566, 568, 577, 578, 579, 583, 599, 602, 604, 605, 609, 610, 615, 617, 627], "strip": [523, 553, 560, 632], "strongli": [140, 176, 628], "strptime": 555, "struct": [20, 202, 577], "struct_format": [202, 563, 564, 565, 566, 567, 568, 569, 570, 573, 574, 575, 576, 577, 579], "structur": [10, 26, 27, 43, 70, 174, 176, 177, 599, 612, 619, 620, 626, 628, 629], "studi": [2, 8, 9, 10, 20, 26, 27, 28, 43, 174, 176, 628], "study1": [26, 28], "study_uid": 10, "studyd": [9, 10, 24, 26, 27, 28, 628], "studydescript": [10, 26, 28, 176, 628], "studyid": [26, 28], "studyinstanceuid": 10, "studytim": [10, 24, 26, 28, 628], "stuff": 14, "stxxxxxx": 176, "style": [0, 23, 551, 555, 559, 599, 601, 604], "sub": [25, 26, 37, 133, 134, 135, 253, 265, 267, 288, 290, 523, 560, 588], "subclass": [523, 599, 609, 620], "subcommand": [25, 26, 27, 599, 617], "subcommandnam": [25, 26], "subdirectori": [599, 607], "subject": [54, 627, 635], "submit": [26, 28, 599, 605, 623, 624, 625], "submodul": [599, 620], "subnorm": 553, "subpars": [25, 26], "subplot": [3, 4, 634, 636], "subsampl": [233, 276, 283], "subsequ": 166, "subset": [10, 24, 26], "substanti": [599, 602], "substitut": [523, 560], "substr": [523, 560], "success": [133, 134, 135, 253, 254, 265, 267, 282, 288, 290, 625, 630, 634], "successfulli": [30, 35, 151], "suever": [599, 606], "suffici": [145, 147, 151, 253, 262, 632], "suffix": [12, 178, 523, 549, 558, 560, 599, 620], "suggest": [44, 599, 621, 623, 624, 625], "suit": [20, 48, 599, 619, 631], "suitabl": [176, 223, 252, 254, 268, 279, 282, 291, 294, 523, 560, 630, 632], "summar": [11, 628], "summari": [10, 25, 26, 624], "summer": [223, 268], "sundai": [551, 555], "super": 135, "supp": [599, 602], "supplement": [223, 268], "suppli": [0, 14, 53, 80, 145, 147, 151, 166, 176, 223, 224, 234, 253, 262, 268, 269, 277, 549, 558, 626, 628, 634], "support": [30, 35, 37, 42, 44, 47, 71, 72, 81, 98, 133, 134, 135, 162, 163, 176, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 232, 233, 234, 253, 262, 263, 268, 269, 276, 277, 279, 281, 291, 292, 294, 295, 299, 556, 584, 599, 600, 608, 609, 610, 611, 612, 614, 615, 617, 618, 619, 620, 621, 628, 629, 630, 631, 635], "supports_transfer_syntax": [98, 217, 218, 219, 220, 221, 222], "suppos": 222, "suppress": [599, 617], "suppress_invalid_tag": [133, 134, 135, 599, 619], "sure": [9, 38, 46, 53, 599, 621, 624, 626, 630], "surfac": 174, "surround": 626, "sv": [32, 584, 599, 612], "sv1": [42, 46, 263, 292, 599, 614], "swap": [193, 253, 570], "swapcas": [523, 560], "swig": [599, 621], "switch": [53, 90, 599, 603, 605, 607, 612, 614, 617, 619, 624, 625], "sy": [0, 4, 14, 299, 556, 636], "symmetr": 627, "synchronis": [52, 636], "synonym": [599, 600], "syntax": [2, 12, 16, 20, 24, 26, 27, 28, 29, 30, 32, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 53, 98, 133, 134, 135, 137, 140, 142, 148, 149, 167, 175, 176, 184, 187, 200, 217, 218, 219, 220, 221, 222, 232, 252, 253, 254, 261, 262, 263, 264, 265, 267, 278, 281, 282, 288, 290, 292, 293, 305, 401, 406, 409, 413, 437, 467, 474, 523, 526, 550, 588, 599, 602, 603, 608, 610, 611, 612, 614, 615, 619, 620, 621, 626, 630, 631, 636], "system": [20, 24, 26, 27, 28, 29, 34, 44, 160, 162, 163, 176, 299, 556, 599, 620, 621, 626, 628, 630, 636], "t": [4, 8, 10, 18, 20, 26, 27, 28, 29, 32, 37, 38, 40, 43, 46, 48, 50, 53, 54, 85, 133, 134, 135, 145, 147, 148, 151, 167, 176, 187, 215, 216, 219, 222, 233, 252, 253, 262, 265, 267, 276, 278, 288, 290, 291, 293, 295, 523, 549, 555, 560, 599, 611, 614, 615, 620, 621, 624, 625, 626, 627, 628, 630, 631, 632, 634], "t1": 43, "t2": 43, "t3": 43, "t4": 43, "tab": [523, 560, 625], "tabl": [20, 23, 32, 33, 37, 38, 39, 42, 45, 51, 68, 129, 133, 134, 135, 140, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 187, 200, 216, 219, 221, 222, 223, 225, 227, 228, 229, 232, 252, 261, 268, 270, 272, 273, 274, 281, 292, 523, 560, 584, 599, 612, 615, 620, 625, 626, 628, 630, 631, 634], "tabsiz": [523, 560], "tag": [16, 17, 26, 28, 29, 32, 47, 48, 50, 51, 57, 61, 68, 86, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 146, 149, 152, 153, 154, 155, 156, 160, 162, 163, 164, 166, 168, 176, 184, 185, 189, 204, 216, 219, 221, 222, 265, 267, 284, 285, 288, 290, 291, 292, 580, 584, 588, 599, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 620, 621, 626, 627, 634], "tag_in_except": 61, "tagtyp": [133, 134, 135], "take": [2, 24, 25, 26, 30, 35, 40, 53, 54, 133, 134, 135, 164, 174, 215, 599, 606, 620, 624, 625, 626, 628], "taken": [40, 133, 134, 135, 145, 147, 151, 231, 280, 292], "target": [26, 27, 54], "target_vr": [207, 210, 211], "tarou": 22, "task": [625, 631], "tb": 158, "tdir": 10, "teardown": [599, 619], "technic": [54, 55], "techniqu": 40, "tell": [68, 133, 134, 135, 145, 146, 147, 151, 155, 156, 160, 162, 163, 166, 187, 599, 601, 620, 625, 628], "temp": [50, 51], "tempfil": [10, 12, 17, 628], "temporari": [175, 599, 620, 628], "temporarili": 44, "temporarydirectori": [10, 628], "ten": 553, "tend": [50, 630], "term": [20, 51, 216, 252, 261, 284, 299, 553, 555, 556, 559, 631], "termin": [20, 26, 27, 28, 44, 149, 167, 180], "test": [2, 12, 16, 24, 26, 27, 28, 43, 90, 109, 110, 111, 133, 134, 135, 523, 553, 560, 562, 599, 600, 606, 608, 612, 615, 617, 619, 621, 631], "test_fil": [9, 10, 24, 26, 43, 70, 625, 626, 628], "test_new_uid": 624, "test_uid": 624, "teston": [109, 110], "testtwo": [109, 110], "text": [0, 20, 22, 32, 43, 48, 129, 166, 203, 204, 206, 209, 210, 211, 523, 560, 572, 578, 579, 581, 582, 599, 601, 610, 624, 625, 626], "tggc": [20, 26, 28], "thai": [599, 608], "than": [24, 25, 26, 27, 28, 29, 32, 37, 39, 40, 42, 45, 46, 50, 53, 54, 57, 129, 133, 134, 135, 144, 145, 146, 147, 148, 149, 151, 152, 160, 162, 163, 166, 170, 176, 179, 188, 202, 215, 231, 232, 266, 278, 280, 281, 289, 292, 293, 549, 553, 599, 600, 601, 602, 607, 608, 609, 612, 614, 617, 620, 621, 626, 627, 631, 632], "thank": [599, 602, 605], "thei": [4, 29, 37, 43, 48, 50, 51, 54, 77, 89, 98, 133, 134, 135, 137, 187, 200, 226, 232, 271, 281, 523, 560, 599, 617, 620, 624, 625, 626, 628, 630, 631, 632, 634], "them": [4, 8, 24, 26, 27, 28, 30, 35, 43, 46, 48, 50, 53, 54, 55, 133, 134, 135, 160, 162, 163, 566, 568, 599, 607, 611, 615, 625, 626, 628, 634], "theme_us": 0, "theoret": [599, 620], "therefor": [29, 38, 215, 283, 631], "theta": 20, "thi": [2, 3, 4, 8, 9, 10, 12, 14, 16, 17, 18, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 35, 38, 40, 43, 44, 48, 50, 51, 53, 54, 55, 70, 77, 82, 83, 84, 87, 88, 90, 97, 98, 110, 129, 132, 133, 134, 135, 138, 139, 140, 145, 146, 147, 148, 149, 150, 151, 152, 157, 164, 166, 169, 175, 176, 187, 193, 204, 207, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 228, 229, 230, 232, 234, 252, 253, 254, 261, 262, 265, 267, 268, 269, 273, 274, 275, 277, 281, 282, 283, 288, 290, 299, 523, 551, 552, 553, 554, 555, 557, 558, 560, 561, 562, 588, 606, 608, 611, 612, 617, 620, 624, 625, 626, 627, 628, 630, 631, 632, 634, 635, 636], "thick": [2, 8, 20], "thing": [43, 50, 625, 626, 634], "think": [25, 26], "third": [38, 47, 523, 553, 558, 560, 630], "third_party_compression_func": [45, 631], "thoroughli": 631, "those": [26, 28, 29, 30, 35, 41, 44, 48, 599, 602, 605, 615, 626, 628, 634], "though": [38, 628, 631], "thread": [253, 262, 553], "three": [16, 30, 35, 38, 54, 111, 523, 558, 560, 626, 628, 634], "threshold": [133, 134, 135], "through": [8, 17, 30, 35, 43, 48, 51, 54, 133, 134, 135, 169, 183, 185, 186, 253, 265, 288, 553, 599, 600, 601, 620, 624, 625, 626, 630, 634, 635], "throughput": [46, 239, 240, 241], "thrown": [599, 608], "thu": [48, 599, 600], "tick": 54, "tight_layout": 3, "tile": 37, "tilt": 20, "time": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 26, 27, 28, 32, 43, 44, 48, 53, 70, 92, 94, 110, 134, 147, 168, 181, 184, 279, 294, 551, 552, 555, 559, 599, 602, 608, 617, 623, 624, 625, 626, 628, 636], "timelin": [599, 611], "timespec": [555, 559], "timestamp": [134, 168, 551, 555], "timetupl": [551, 555], "timetz": 555, "timezon": [2, 8, 20, 555], "titl": [0, 2, 20, 26, 28, 48, 54, 200, 523, 558, 560, 624, 625, 626], "titlecas": [523, 560], "tix": [599, 600], "tk": [0, 22], "tkinter": [0, 22, 49, 599, 600, 602], "tm": [2, 12, 20, 26, 27, 28, 32, 43, 61, 66, 94, 573, 579, 599, 608, 617, 626], "tmp": [10, 12, 628], "tmp0aalrzir": 628, "tmphg619_sz": 12, "tmpkdcmh92f": 10, "tmpsqz8rhgb": 628, "tmpu068kdwp": 628, "to_byt": [299, 556], "to_eng_str": 553, "to_integr": 553, "to_integral_exact": 553, "to_integral_valu": 553, "to_json": [129, 133, 134, 135, 599, 613, 627], "to_json_dict": [129, 133, 134, 135, 599, 613, 619, 620, 627], "tobyt": [2, 51, 632, 636], "toctre": 625, "todai": [551, 555], "togeth": [139, 140, 188, 632], "toi": 18, "toler": [599, 601, 612], "toml": [26, 27, 44, 599, 619], "too": [45, 133, 134, 135, 136, 232, 281, 523, 560, 580, 599, 609, 611, 612, 623], "tool": [53, 599, 620], "toordin": [551, 555], "top": [20, 26, 27, 28, 50, 54, 133, 134, 135, 167, 176, 599, 620, 625, 626], "top_nod": 176, "toshiba": [2, 8, 20], "toshiba_mec": [2, 8, 20], "total": [2, 3, 5, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 38, 68, 140, 142, 216, 252, 261, 284, 553, 622], "toward": [24, 26], "traceback": [86, 302, 626, 628, 631, 634], "track": 38, "tracker": [623, 624], "tract": 174, "trail": [2, 8, 20, 26, 28, 144, 216, 252, 261, 284, 523, 553, 560, 563, 574, 576, 578, 599, 608, 626, 632], "train": [2, 8, 20], "trait_nam": [133, 134, 135, 297], "transfer": [2, 12, 16, 20, 26, 27, 28, 29, 30, 32, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 98, 133, 134, 135, 137, 140, 142, 148, 149, 167, 175, 176, 184, 187, 200, 217, 218, 219, 220, 221, 222, 232, 252, 253, 254, 261, 262, 263, 264, 265, 267, 278, 281, 282, 288, 290, 292, 293, 305, 401, 406, 409, 413, 437, 467, 474, 523, 526, 550, 588, 599, 603, 608, 610, 611, 612, 614, 615, 619, 620, 621, 626, 630, 631, 636], "transfer_syntax": [98, 217, 218, 219, 220, 222, 252, 261], "transfer_syntax_uid": [30, 35, 133, 134, 135, 232, 281], "transfersyntaxuid": [12, 32, 45, 46, 141, 142, 143, 175, 599, 601, 608, 626, 631, 632, 634], "transform": [37, 40, 51, 224, 234, 269, 277, 631], "translat": [24, 26, 43, 523, 560, 599, 608], "transvers": 596, "travisci": [599, 608], "treat": [174, 252, 628, 631], "treatment": [26, 28], "tree": [6, 21, 177, 599, 606, 622, 626], "tree_item": 0, "tree_seq_item": 0, "treeview": 0, "tri": [133, 134, 135, 160, 162, 163, 232, 253, 254, 262, 265, 267, 281, 282, 288, 290, 599, 620, 634], "tricki": 53, "trigger": [20, 26, 28], "troubl": 624, "true": [0, 10, 12, 16, 29, 30, 32, 34, 35, 43, 44, 45, 48, 52, 54, 57, 68, 70, 81, 82, 83, 89, 90, 94, 95, 97, 98, 101, 107, 116, 117, 126, 127, 129, 131, 133, 134, 135, 137, 140, 141, 149, 152, 158, 160, 162, 163, 164, 166, 167, 171, 175, 176, 177, 178, 179, 181, 182, 183, 184, 187, 200, 213, 216, 217, 218, 219, 220, 221, 222, 229, 232, 233, 252, 253, 254, 261, 262, 265, 266, 267, 274, 276, 278, 279, 281, 282, 287, 288, 289, 290, 291, 293, 294, 297, 299, 523, 550, 553, 554, 557, 560, 562, 563, 564, 565, 566, 567, 568, 572, 573, 574, 576, 577, 579, 580, 584, 599, 603, 605, 615, 617, 619, 620, 626, 628, 631, 632, 634, 636], "truli": 53, "truncat": [523, 560, 561, 599, 601], "truthi": [599, 612], "try": [54, 98, 133, 134, 135, 185, 186, 211, 252, 523, 560, 599, 603, 611, 620, 626, 628, 632], "tsyntax": [221, 252, 261, 634], "ttk": 0, "tube": 20, "tupl": [30, 35, 43, 45, 48, 86, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 129, 133, 134, 135, 136, 142, 143, 145, 147, 148, 151, 152, 156, 160, 162, 163, 166, 210, 211, 215, 252, 253, 261, 262, 295, 300, 301, 523, 551, 553, 555, 558, 560, 599, 602, 611, 631, 632, 634], "tupletag": [61, 599, 602], "turkish": [599, 608], "turn": [44, 95, 167, 599, 615], "tut": 625, "tutori": [35, 53, 54, 599, 612, 623, 624, 625, 626, 628, 631, 632, 634, 636], "two": [16, 20, 25, 26, 28, 40, 43, 44, 48, 54, 90, 109, 110, 111, 133, 134, 135, 144, 176, 283, 299, 523, 553, 556, 558, 560, 599, 606, 620, 626, 627, 631, 632, 636], "txt": [44, 626], "type": [2, 3, 8, 17, 18, 20, 25, 26, 27, 28, 29, 30, 33, 35, 40, 41, 43, 45, 48, 51, 55, 68, 70, 77, 78, 80, 83, 100, 105, 106, 107, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 151, 152, 153, 155, 156, 157, 160, 162, 163, 166, 167, 168, 170, 171, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 187, 199, 200, 202, 207, 209, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 252, 253, 254, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 294, 297, 300, 523, 549, 550, 553, 558, 561, 562, 563, 564, 565, 566, 567, 568, 571, 572, 573, 574, 576, 578, 579, 580, 581, 582, 583, 584, 599, 602, 603, 605, 616, 617, 619, 620, 625, 626, 628, 632, 636], "type_constructor": [215, 626], "typeerror": [135, 166, 215, 217, 218, 599, 609, 615, 626], "typeofpatientid": 626, "typic": [29, 40, 97, 138, 634], "typo": 623, "tz": 555, "tzinfo": [555, 559], "tzname": [555, 559], "u": [2, 20, 26, 28, 32, 70, 111, 132, 133, 134, 135, 160, 162, 163, 185, 186, 211, 523, 560, 584, 599, 601, 627, 628, 630, 631, 632, 634, 636], "u1": 634, "ub": 584, "uc": [32, 581, 599, 608], "ucum": 635, "ui": [2, 12, 16, 20, 26, 27, 28, 32, 43, 48, 196, 200, 574, 599, 602, 612, 626], "uid": [2, 8, 10, 12, 20, 26, 27, 28, 30, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 48, 51, 53, 98, 133, 134, 135, 137, 140, 141, 142, 143, 175, 176, 187, 200, 217, 218, 219, 220, 221, 222, 223, 232, 252, 253, 254, 261, 262, 263, 264, 268, 278, 281, 282, 292, 293, 574, 583, 588, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 619, 620, 621, 624, 626, 628, 630, 631, 632, 634], "uid_dictionari": [599, 600], "uint": [266, 289], "uint16": [133, 134, 135, 223, 225, 227, 228, 229, 233, 262, 268, 270, 272, 273, 274, 276, 278, 293, 632], "uint8": [50, 133, 134, 135, 223, 225, 227, 228, 229, 233, 268, 270, 272, 273, 274, 276, 278, 293, 631, 632], "ul": [2, 12, 16, 20, 26, 27, 28, 32, 43, 48, 109, 110, 111, 160, 162, 163, 200, 584, 626, 628], "ultrasound": 628, "uml": 635, "un": [16, 32, 57, 91, 164, 187, 197, 209, 575, 599, 600, 612, 614, 617, 618, 620, 626], "unabl": [133, 134, 135, 160, 162, 163, 187, 209, 286, 599, 620, 621, 626, 628, 634], "unaffect": 553, "unavail": [253, 262], "uncas": [523, 560], "unchang": [10, 77, 185, 186, 225, 226, 227, 228, 229, 230, 270, 271, 272, 273, 274, 275, 553, 631], "uncom": [599, 606], "uncommon": 557, "uncompress": [2, 8, 20, 29, 33, 35, 37, 38, 39, 42, 45, 46, 51, 133, 134, 135, 232, 254, 261, 262, 278, 281, 282, 283, 293, 526, 599, 610, 612, 617, 618, 631, 632, 634], "uncompressedpixeltransfersyntax": [599, 615, 620], "uncompressedtransfersyntax": [599, 615, 620], "unconvert": [133, 134, 135], "undecod": 131, "undefin": [45, 57, 129, 149, 164, 180, 599, 604, 615, 618], "undefinedlength": [599, 600], "under": [25, 26, 43, 140, 142, 599, 600, 602, 608, 624, 625, 630], "underflow": [20, 553], "undergon": 634, "underli": [33, 39], "underscor": 635, "understand": [43, 54, 253, 624, 631, 636], "undesir": 46, "undocu": 630, "unencapsul": 40, "unencod": [30, 35, 262], "unequ": 553, "unexpect": [599, 612], "unfamiliar": 54, "unicod": [6, 21, 32, 78, 80, 523, 558, 560, 599, 600, 602, 603, 619, 622], "unicodedecodeerror": 78, "unicodeencodeerror": [80, 523, 560], "uniqu": [20, 30, 32, 35, 40, 48, 176, 177, 178, 196, 253, 262, 599, 608, 619, 620, 626, 628], "unit": [34, 38, 51, 133, 134, 135, 166, 216, 252, 261, 284, 584, 624, 631, 634, 636], "unitless": [3, 51, 584, 636], "unittest": 624, "unknown": [16, 20, 32, 48, 86, 129, 133, 134, 135, 149, 197, 599, 604, 609, 611, 615, 617, 621, 626, 635], "unless": [54, 133, 134, 135, 170, 177, 232, 254, 281, 282, 523, 553, 560, 599, 603, 614, 628], "unlik": [133, 134, 135, 553], "unlimit": 32, "unlink": 12, "unneed": [599, 609], "unoffici": [599, 606], "unpack": [50, 133, 134, 135, 253, 265, 267, 279, 288, 290, 294, 577, 599, 610, 618], "unpack_bit": [588, 599, 618, 620], "unpickl": [599, 612], "unrealist": [133, 134, 135], "unrecover": 549, "unsign": [29, 30, 32, 35, 37, 38, 40, 51, 152, 262, 599, 615, 631, 636], "unspecifi": [160, 162, 163], "unsupport": [166, 217, 218, 219, 222], "until": [10, 160, 162, 163, 166, 167, 170, 181, 184, 599, 600, 605, 617, 620, 628], "untouch": [523, 560], "unus": [29, 599, 610, 620, 632], "up": [38, 50, 51, 68, 133, 134, 135, 160, 162, 163, 176, 177, 184, 187, 221, 233, 276, 549, 553, 558, 583, 599, 602, 606, 608, 621, 624, 625, 626, 629, 630, 631], "upcom": [44, 97], "updat": [2, 10, 18, 20, 26, 27, 50, 109, 110, 111, 112, 133, 134, 135, 174, 176, 185, 186, 200, 232, 233, 252, 254, 265, 267, 276, 278, 281, 282, 288, 290, 293, 599, 601, 602, 604, 605, 607, 608, 609, 610, 612, 614, 615, 617, 618, 619, 620, 621, 624, 625, 628, 630, 631, 634], "update_raw_el": [133, 134, 135, 599, 620], "upon": [133, 134, 135], "upper": [523, 553, 560, 599, 620], "uppercas": [54, 129, 523, 560], "ur": [32, 576], "uri": [32, 133, 134, 135, 599, 615, 627], "url": [32, 54], "urllib": [599, 617], "us": [1, 3, 5, 6, 7, 9, 10, 12, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 50, 51, 52, 54, 55, 57, 70, 78, 79, 80, 81, 85, 86, 89, 92, 93, 95, 96, 97, 98, 99, 102, 103, 107, 110, 112, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 162, 163, 164, 166, 167, 169, 170, 174, 176, 177, 178, 184, 185, 186, 187, 199, 202, 203, 204, 207, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 231, 232, 234, 252, 253, 254, 261, 262, 265, 266, 267, 268, 269, 270, 272, 277, 278, 279, 280, 281, 282, 283, 288, 289, 290, 291, 293, 294, 295, 297, 299, 302, 467, 523, 549, 550, 553, 555, 556, 557, 558, 560, 561, 563, 564, 565, 566, 567, 568, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 584, 585, 586, 592, 593, 599, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 631, 632, 634, 635, 636], "us1_rl": 45, "usabl": [253, 523, 560], "usag": [14, 24, 26, 27, 28, 30, 39, 43, 47, 233, 265, 267, 276, 288, 290, 523, 558, 588, 599, 612, 620, 628, 631, 632], "usb": 628, "use_bot": 68, "use_decimal_boolean": 82, "use_ds_decim": [32, 83, 566, 588, 599, 614], "use_ds_numpi": [82, 566, 588, 599, 614], "use_exist": [176, 628], "use_is_numpi": [568, 588, 599, 614], "use_mct": 34, "use_numpi": 83, "use_v2_backend": [133, 134, 135], "user": [20, 30, 35, 41, 43, 70, 80, 89, 133, 134, 135, 164, 169, 187, 232, 253, 281, 588, 599, 602, 605, 611, 612, 615, 620, 624, 626, 628], "userwarn": [10, 85], "usual": [25, 26, 27, 28, 39, 43, 48, 51, 110, 134, 146, 158, 164, 599, 602, 624, 626, 630, 631], "ut": 32, "utc": [2, 8, 20, 555], "utcfromtimestamp": 555, "utcnow": 555, "utcoffset": [555, 559], "utctimetupl": 555, "utf": [22, 523, 560], "util": [24, 26, 53, 64, 65, 66, 70, 71, 588, 591, 599, 600, 607, 608, 620, 634], "uuid": 549, "uuid4": 549, "uuu": [555, 559], "uv": [32, 584, 599, 612], "v": [599, 611], "v1": [599, 609, 610, 611, 636], "v2": [26, 27, 39, 599, 615, 620, 630, 636], "v3": [2, 8, 20, 33, 37, 38, 48, 599, 615, 617, 618, 620, 636], "v4": [92, 93, 99, 130, 133, 134, 135, 138, 139, 149, 150, 152, 157, 187, 585, 586, 599, 620, 636], "v5": 636, "v6": 636, "val": [129, 160, 162, 163, 188, 215, 295, 523, 552, 553, 554, 556, 557, 558, 561, 583, 626], "valid": [12, 47, 53, 57, 84, 87, 88, 90, 125, 129, 133, 134, 135, 137, 166, 179, 187, 200, 233, 252, 253, 261, 262, 276, 278, 293, 297, 471, 472, 523, 555, 559, 560, 561, 562, 566, 568, 577, 578, 581, 599, 617, 618, 619, 620, 631], "validate_dataset": 626, "validate_file_meta": [588, 599, 620, 626], "validate_valu": 129, "validation_mod": [129, 523, 552, 553, 554, 556, 557, 558], "valtyp": 583, "valu": [0, 2, 8, 9, 10, 12, 17, 20, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 43, 44, 48, 50, 51, 53, 54, 57, 61, 68, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 94, 97, 104, 110, 112, 113, 114, 123, 124, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 160, 162, 163, 165, 166, 168, 174, 176, 184, 185, 186, 187, 188, 197, 202, 203, 204, 207, 209, 210, 211, 215, 216, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 250, 252, 253, 254, 261, 262, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 285, 287, 289, 291, 292, 293, 295, 296, 299, 523, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 584, 588, 596, 599, 600, 601, 604, 605, 606, 608, 609, 610, 611, 612, 614, 615, 617, 618, 619, 620, 621, 624, 625, 626, 627, 628, 630, 631, 632, 634, 635, 636], "value_kei": 129, "value_tel": 131, "valueerror": [82, 83, 85, 86, 107, 108, 109, 110, 111, 112, 131, 133, 134, 135, 136, 137, 149, 152, 168, 176, 187, 200, 215, 216, 219, 222, 266, 279, 289, 294, 295, 296, 523, 549, 553, 554, 557, 560, 561, 566, 568, 580, 599, 620, 628, 631], "valuerep": [16, 22, 61, 565, 567, 571, 573, 588], "valuesview": [133, 134, 135], "vari": 626, "variabl": [26, 27, 43, 44, 54, 55, 70, 599, 611, 615, 619, 630], "variant": [2, 8, 20], "variat": 634, "varieti": [51, 631, 632], "variou": [25, 26, 48, 599, 600, 634], "ve": [45, 599, 607, 624, 625, 628, 631, 632, 634, 636], "verbos": [599, 620], "veri": [22, 32, 38, 42, 599, 602, 624, 628, 631, 632, 634], "verif": [599, 609], "verifi": [46, 599, 605], "versa": [39, 187, 223, 233, 268, 276], "version": [2, 8, 12, 20, 24, 26, 27, 28, 40, 43, 47, 48, 54, 57, 68, 81, 83, 85, 86, 90, 92, 93, 97, 99, 100, 101, 103, 104, 107, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 178, 185, 186, 187, 200, 207, 208, 209, 210, 211, 212, 213, 221, 224, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 286, 288, 289, 290, 292, 293, 294, 296, 297, 298, 299, 523, 549, 553, 560, 566, 568, 584, 585, 586, 624, 625, 626, 627, 631, 635], "versionad": [54, 296], "versionchang": 54, "veterinari": 558, "via": [29, 42, 45, 57, 129, 132, 133, 134, 135, 221, 523, 551, 560, 596, 599, 608, 610, 615, 617, 618, 620, 627, 628, 631, 634], "vice": [39, 187, 223, 233, 268, 276], "videan42": [599, 607], "view": [4, 10, 20, 29, 39, 43, 47, 51, 133, 134, 135, 228, 229, 230, 252, 273, 274, 275, 599, 600, 602, 620, 625, 628, 636], "view_onli": [29, 133, 134, 135, 253, 265, 267, 288, 290], "viewer": [0, 49], "virtual": [44, 630], "virtualenv": 625, "visibl": 625, "visit": [133, 134, 135, 624, 625], "vm": [16, 32, 43, 63, 109, 110, 111, 112, 113, 119, 120, 123, 129, 599, 603, 611, 614, 620, 626], "vma": 20, "voi": [47, 226, 228, 229, 230, 271, 273, 274, 275, 599, 612, 615], "voic": 52, "volum": [217, 634], "voxel": 2, "vr": [0, 2, 8, 12, 16, 17, 20, 26, 27, 28, 40, 41, 43, 45, 46, 48, 55, 57, 61, 66, 83, 90, 91, 94, 102, 103, 109, 110, 111, 112, 114, 119, 120, 124, 129, 130, 131, 132, 133, 134, 135, 136, 144, 160, 162, 163, 164, 165, 167, 168, 176, 185, 186, 187, 192, 193, 196, 200, 201, 207, 209, 210, 211, 212, 219, 235, 237, 238, 242, 253, 254, 263, 278, 282, 293, 305, 523, 550, 551, 553, 554, 555, 556, 557, 558, 559, 563, 572, 574, 576, 577, 578, 579, 581, 582, 599, 600, 601, 602, 603, 605, 606, 608, 609, 610, 611, 612, 614, 615, 617, 618, 619, 620, 621, 626, 627, 631, 632, 634], "w": 626, "wa": [24, 25, 26, 40, 54, 129, 133, 134, 135, 151, 176, 181, 185, 186, 566, 568, 599, 602, 609, 612, 617, 620, 624, 625, 628, 631], "wado": [129, 133, 134, 135, 627], "wai": [38, 43, 44, 50, 51, 133, 134, 135, 599, 605, 620, 623, 626, 627, 628, 630, 635], "walk": [17, 133, 134, 135], "wallac": [599, 603], "wang": 22, "want": [9, 10, 14, 24, 25, 26, 38, 44, 53, 178, 624, 625, 626, 627, 628, 630, 631, 634], "warn": [44, 53, 54, 57, 77, 78, 80, 85, 86, 287, 588, 599, 601, 605, 609, 610, 611, 612, 614, 617, 618, 620, 624, 625], "warn_and_log": 10, "water": [20, 558], "waveform": [1, 5, 6, 47, 55, 70, 133, 134, 135, 174, 588, 599, 615, 619, 622, 629], "waveform_arrai": [3, 47, 133, 134, 135, 599, 615, 636], "waveform_ecg": 70, "waveformbitsalloc": [584, 636], "waveformbitsstor": 636, "waveformdata": [52, 636], "waveformorigin": 636, "waveformsampleinterpret": [584, 636], "waveformsequ": [3, 52, 636], "wavelet": 37, "wb": 626, "we": [3, 10, 16, 17, 18, 24, 26, 28, 38, 39, 46, 94, 133, 134, 135, 623, 624, 625, 626, 628, 630, 631, 632, 636], "web": 625, "wedg": [26, 28], "week": [551, 555], "weekdai": [551, 555], "weight": [0, 2, 8, 20], "well": [42, 48, 51, 53, 70, 143, 176, 223, 233, 268, 276, 523, 560, 599, 602, 603, 605, 612, 620, 623, 624, 626, 630, 631], "were": [20, 26, 28, 133, 134, 135, 599, 605, 607, 624, 625, 632, 636], "weren": 631, "what": [10, 32, 40, 48, 50, 55, 176, 626, 628, 632, 634], "whatev": [231, 280, 631], "whatsoev": 253, "wheel": 630, "when": [10, 16, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 40, 42, 43, 45, 48, 50, 51, 53, 54, 57, 81, 85, 86, 90, 94, 95, 98, 133, 134, 135, 140, 142, 145, 147, 148, 150, 151, 152, 158, 160, 162, 163, 170, 176, 178, 185, 186, 187, 222, 224, 225, 227, 228, 229, 230, 232, 233, 253, 254, 262, 265, 267, 269, 270, 272, 273, 274, 275, 276, 279, 281, 282, 288, 290, 291, 292, 294, 300, 302, 523, 549, 550, 558, 560, 599, 601, 602, 603, 608, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 621, 624, 625, 626, 628, 630, 631, 632, 634, 636], "whenc": [68, 160, 162, 163], "whenev": [599, 615], "where": [10, 30, 35, 37, 38, 40, 43, 44, 50, 51, 52, 57, 109, 111, 132, 133, 134, 135, 136, 140, 168, 174, 176, 181, 182, 225, 227, 252, 253, 261, 262, 270, 272, 523, 553, 560, 599, 601, 610, 611, 612, 620, 624, 625, 626, 628, 631, 632, 634], "whether": [29, 40, 43, 83, 103, 129, 133, 134, 135, 152, 252, 299, 523, 553, 556, 560, 562, 599, 602, 605, 610, 612, 617, 621, 623, 624, 630, 634], "which": [1, 6, 20, 23, 24, 25, 26, 30, 35, 37, 38, 40, 43, 46, 48, 51, 52, 53, 54, 78, 79, 85, 110, 129, 133, 134, 135, 164, 167, 169, 174, 176, 187, 200, 209, 210, 211, 212, 222, 231, 232, 253, 262, 267, 279, 280, 281, 290, 294, 523, 549, 550, 552, 553, 560, 599, 600, 603, 605, 607, 615, 620, 624, 625, 626, 627, 628, 630, 631, 632, 634, 636], "whichev": 262, "while": [10, 26, 27, 38, 39, 40, 46, 51, 57, 129, 133, 134, 135, 187, 222, 253, 262, 265, 267, 288, 290, 561, 599, 611, 612, 617, 620, 624, 628, 630, 631, 634], "white": [33, 37, 38, 39, 599, 607], "whitespac": [523, 560], "whl": 630, "who": [30, 35, 253, 599, 605, 606], "whole": [24, 26, 164, 216, 252, 261, 284, 599, 620], "whose": [43, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 133, 134, 135, 252, 253, 261, 265, 267, 288, 290, 299, 523, 553, 554, 556, 557, 558, 560, 561, 624], "why": 39, "wide": 631, "widget": 0, "width": [2, 8, 20, 129, 228, 229, 230, 273, 274, 275, 523, 560, 626], "wikipedia": [233, 276], "window": [0, 2, 8, 20, 26, 27, 44, 47, 228, 229, 230, 273, 274, 275, 599, 600, 608, 612, 618, 624, 625, 626, 630, 634], "windowcent": 626, "windowwidth": 626, "winter": [223, 268], "wip": [624, 625], "wise": 553, "wish": [25, 26, 37, 44, 291], "with_traceback": 158, "within": [24, 26, 27, 28, 30, 35, 38, 81, 90, 133, 134, 135, 166, 167, 175, 176, 187, 302, 523, 560, 572, 599, 615, 628, 630, 631, 636], "without": [10, 37, 43, 46, 48, 52, 107, 133, 134, 135, 158, 169, 182, 279, 294, 553, 563, 574, 576, 577, 599, 601, 609, 611, 615, 618, 619, 620, 626, 628, 630, 631], "witten": [599, 602], "wo": [10, 628], "won": [624, 625, 626, 628], "word": [32, 53, 54, 110, 193, 523, 558, 560, 626], "work": [6, 15, 19, 21, 25, 26, 27, 30, 32, 35, 38, 43, 44, 47, 48, 53, 54, 176, 523, 560, 599, 600, 602, 603, 605, 606, 607, 609, 611, 615, 620, 622, 624, 625, 626, 630, 632, 635, 636], "workflow": [599, 617, 624, 625], "world": [16, 626], "worri": 631, "worth": [30, 252, 261], "would": [10, 24, 25, 26, 27, 29, 39, 44, 53, 57, 553, 624, 625, 628, 632, 636], "wrap": [43, 54, 160, 162, 163, 187], "wrapper": [160, 162, 163, 599, 614], "write": [6, 7, 10, 13, 14, 16, 17, 24, 26, 41, 44, 47, 48, 55, 57, 71, 95, 133, 134, 135, 141, 143, 160, 162, 163, 176, 187, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 553, 554, 588, 599, 601, 603, 608, 609, 611, 613, 614, 615, 617, 618, 620, 622, 625, 627, 628, 629, 632], "write_atvalu": 71, "write_da": 71, "write_data_el": 71, "write_dataset": [71, 599, 620], "write_dataset_to_byt": 14, "write_dt": 71, "write_fil": [599, 608, 617, 620], "write_file_meta_info": [71, 187], "write_like_origin": [133, 134, 135, 187, 599, 620], "write_new": [599, 604], "write_numb": 71, "write_number_str": 71, "write_obvalu": 71, "write_owvalu": 71, "write_pn": [71, 599, 609], "write_sequ": 71, "write_sequence_item": 71, "write_str": 71, "write_tag": [160, 162, 163], "write_text": 71, "write_tm": 71, "write_u": [160, 162, 163], "write_ui": 71, "write_ul": [160, 162, 163], "write_un": 71, "writeabl": [133, 134, 135, 187, 219, 253, 265, 267, 288, 290, 599, 620], "writeablebuff": [133, 134, 135, 160, 162, 163, 187], "writer": 90, "writing_validation_mod": [44, 57, 80, 129, 599, 618], "written": [12, 24, 26, 32, 44, 50, 51, 133, 134, 135, 160, 162, 163, 176, 187, 199, 200, 599, 611, 612, 620, 624, 626, 628, 634], "wrong": [599, 610, 611, 615, 619], "wrote": 53, "wxpython": [49, 599, 602], "x": [2, 3, 8, 9, 20, 26, 27, 28, 37, 54, 523, 549, 553, 560, 599, 611, 624, 626, 632, 634, 636], "x0": 632, "x00": [2, 8, 12, 16, 20, 26, 27, 28, 38, 43, 48, 50, 626, 632, 634], "x00t": 626, "x01": [2, 8, 12, 20, 26, 27, 28, 43, 48, 51, 626, 634], "x02": 51, "x03": 51, "x04": [8, 51], "x08": 626, "x18": 626, "x5e": 22, "x7f": 51, "x89": 51, "x8b": 22, "x8e": 22, "x8f": 22, "x94": 51, "x9d": 22, "x_unit": 3, "xa1": 22, "xab": 22, "xb0": 22, "xb1": 22, "xb6": 22, "xcb": 51, "xcd": 22, "xd0": 22, "xe0": 634, "xe5": 22, "xe6": 22, "xe7": 22, "xeb": 51, "xf5": 22, "xf9": 51, "xfb": 51, "xfe": [8, 634], "xff": [38, 634], "xffo": 634, "xffq": 634, "xiaodong": 22, "xl": 413, "xm": [20, 26, 28], "xmlcharrefreplac": [523, 560], "xr": [10, 628], "xraytubecurr": 625, "xxx": 53, "xxxxxx": 176, "xyb": 40, "y": [12, 54, 283, 523, 553, 560, 632], "y0": 632, "y_unit": 3, "yamada": 22, "yaroslav": [599, 607], "ybr": [39, 599, 617, 631, 634], "ybr_color": [70, 634], "ybr_full": [29, 30, 33, 35, 37, 38, 39, 40, 133, 134, 135, 219, 221, 233, 253, 262, 265, 267, 276, 278, 283, 288, 290, 293, 599, 612, 618, 631], "ybr_full_422": [29, 40, 133, 134, 135, 219, 221, 233, 253, 254, 265, 267, 276, 278, 282, 283, 288, 290, 293, 599, 612, 618, 634], "ybr_ict": [37, 40, 221, 631], "ybr_partial": [233, 276], "ybr_partial_420": [29, 40, 233, 276, 599, 621], "ybr_partial_422": [29, 233, 276, 599, 621], "ybr_rct": [37, 40, 221, 631], "ycbcr": [33, 37, 38, 39, 40, 51, 133, 134, 135, 217, 218, 219, 220, 221, 222, 233, 252, 253, 254, 265, 267, 276, 282, 288, 290, 599, 620, 631, 634], "year": [551, 555], "yet": [626, 635], "yield": [10, 43, 133, 134, 135, 144, 145, 146, 147, 148, 149, 150, 154, 164, 177, 178, 221, 252, 253, 254, 262, 265, 282, 288, 584, 599, 620, 626, 628, 634, 636], "you": [10, 12, 14, 16, 18, 23, 24, 25, 26, 27, 28, 30, 32, 33, 35, 37, 38, 39, 40, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 94, 140, 142, 166, 170, 174, 176, 178, 291, 523, 599, 612, 615, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 636], "your": [8, 10, 14, 23, 25, 26, 27, 30, 33, 35, 37, 38, 39, 40, 43, 46, 47, 48, 53, 97, 140, 142, 176, 623, 626, 627, 628, 630, 634, 636], "your_fil": [24, 26, 27, 28], "yourarg": [25, 26], "yourpackag": [25, 26], "yourplan": [24, 26, 27, 28], "yourself": [25, 26, 50, 51], "yourusernam": [624, 625], "yyyi": [23, 551, 555], "z": [20, 90, 178, 179, 599, 620], "zenodo": 23, "zero": [4, 20, 32, 51, 133, 134, 135, 184, 252, 297, 523, 553, 560, 599, 619, 626, 631, 632, 634], "zfill": [523, 560], "zip": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 599, 611, 636], "\u03bcv": 636, "\u5409\u6d1e": 558, "\u6d2a": 558, "\uae38\ub3d9": 558, "\ud64d": 558}, "titles": ["Show a dicom file using hierarchical tree", "Image processing", "Downsize MRI image using pydicom", "Decode and plot Waveform Data", "Load CT slices and plot axial, sagittal and coronal images", "Computation times", "General examples", "Input-output", "Format the output of the data set printing", "Read a Dataset and plot Pixel Data", "Read a DICOM File-set", "Read RTPLAN DICOM and list information", "Write DICOM data", "Computation times", "Show working with memory-based dataset", "Metadata processing", "Add items to the private DICOM dictionary", "Anonymize DICOM data", "Working with sequences", "Computation times", "Analyse differences between DICOM files", "Computation times", "Display unicode person names", "Frequently asked questions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">codify</span></code> command", "Extending the CLI", "Command-line Interface Guide", "Introduction", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">show</span></code> command", "Pixel Data Decoder Options", "Pixel Data Decoder Plugins", "Pixel Data Decoding", "Element VRs and Python types", "Deflated Image Frame Compression", "Encoder Plugins Options", "Pixel Data Encoder Plugins", "Pixel Data Encoding", "JPEG 2000 Encoding", "JPEG-LS Encoding", "RLE Lossless Encoding", "Glossary", "Guides", "Plugins for Pixel Data Compression and Decompression", "Core elements in pydicom", "Best Practices", "Compressing <em>Pixel Data</em>", "Handling of compressed pixel data", "pydicom User Guide", "Private Data Elements", "Viewing Images", "Working with Overlay Data", "Working with Pixel Data", "Working with Waveform Data", "Writing DICOM Files", "Writing documentation", "pydicom documentation", "Character Encoding and Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.charset</span></code>)", "Configuration Options (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.config</span></code>)", "Getting Included Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.data</span></code>)", "Data Dictionary Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.datadict</span></code>)", "Representation of Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataset</span></code>)", "Representation of Data Elements", "Data Elements (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataelem</span></code>)", "Element Multi-value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.multival</span></code>)", "Sequence Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.sequence</span></code>)", "Element Tags (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.tag</span></code>)", "Specialized Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.valuerep</span></code>)", "Element Value Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.values</span></code>)", "Bulk Data Encapsulation Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.encaps</span></code>)", "Exceptions (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.errors</span></code>)", "Example Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.examples</span></code>)", "Dataset IO", "IO Base Classes (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filebase</span></code>)", "Dataset Reading (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filereader</span></code>)", "IO Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileutil</span></code>)", "Dataset Writing (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filewriter</span></code>)", "DICOM File-sets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileset</span></code>)", "pydicom.charset.convert_encodings", "pydicom.charset.decode_bytes", "pydicom.charset.decode_element", "pydicom.charset.encode_string", "pydicom.config.APPLY_J2K_CORRECTIONS", "pydicom.config.DS_decimal", "pydicom.config.DS_numpy", "pydicom.config.IGNORE", "pydicom.config.INVALID_KEYWORD_BEHAVIOR", "pydicom.config.INVALID_KEY_BEHAVIOR", "pydicom.config.RAISE", "pydicom.config.WARN", "pydicom.config.allow_DS_float", "pydicom.config.assume_implicit_vr_switch", "pydicom.config.convert_wrong_length_to_UN", "pydicom.config.data_element_callback", "pydicom.config.data_element_callback_kwargs", "pydicom.config.datetime_conversion", "pydicom.config.debug", "pydicom.config.enforce_valid_values", "pydicom.config.future_behavior", "pydicom.config.pixel_data_handlers", "pydicom.config.reset_data_element_callback", "pydicom.config.settings", "pydicom.config.show_file_meta", "pydicom.config.use_DS_decimal", "pydicom.config.use_DS_numpy", "pydicom.config.use_IS_numpy", "pydicom.data.get_charset_files", "pydicom.data.get_palette_files", "pydicom.data.get_testdata_file", "pydicom.data.get_testdata_files", "pydicom.datadict.add_dict_entries", "pydicom.datadict.add_dict_entry", "pydicom.datadict.add_private_dict_entries", "pydicom.datadict.add_private_dict_entry", "pydicom.datadict.dictionary_VM", "pydicom.datadict.dictionary_VR", "pydicom.datadict.dictionary_description", "pydicom.datadict.dictionary_has_tag", "pydicom.datadict.dictionary_is_retired", "pydicom.datadict.dictionary_keyword", "pydicom.datadict.get_entry", "pydicom.datadict.get_private_entry", "pydicom.datadict.keyword_for_tag", "pydicom.datadict.mask_match", "pydicom.datadict.private_dictionary_VM", "pydicom.datadict.private_dictionary_VR", "pydicom.datadict.private_dictionary_description", "pydicom.datadict.repeater_has_keyword", "pydicom.datadict.repeater_has_tag", "pydicom.datadict.tag_for_keyword", "pydicom.dataelem.DataElement", "pydicom.dataelem.DataElement_from_raw", "pydicom.dataelem.RawDataElement", "pydicom.dataelem.convert_raw_data_element", "pydicom.dataset.Dataset", "pydicom.dataset.FileDataset", "pydicom.dataset.FileMetaDataset", "pydicom.dataset.PrivateBlock", "pydicom.dataset.validate_file_meta", "pydicom.encaps.decode_data_sequence", "pydicom.encaps.defragment_data", "pydicom.encaps.encapsulate", "pydicom.encaps.encapsulate_buffer", "pydicom.encaps.encapsulate_extended", "pydicom.encaps.encapsulate_extended_buffer", "pydicom.encaps.fragment_frame", "pydicom.encaps.generate_fragmented_frames", "pydicom.encaps.generate_fragments", "pydicom.encaps.generate_frames", "pydicom.encaps.generate_pixel_data", "pydicom.encaps.generate_pixel_data_fragment", "pydicom.encaps.generate_pixel_data_frame", "pydicom.encaps.get_frame", "pydicom.encaps.get_frame_offsets", "pydicom.encaps.itemize_fragment", "pydicom.encaps.itemize_frame", "pydicom.encaps.parse_basic_offsets", "pydicom.encaps.parse_fragments", "pydicom.encaps.read_item", "pydicom.errors.InvalidDicomError", "pydicom.examples.get_path", "pydicom.filebase.DicomBytesIO", "pydicom.filebase.DicomFile", "pydicom.filebase.DicomFileLike", "pydicom.filebase.DicomIO", "pydicom.filereader.data_element_generator", "pydicom.filereader.data_element_offset_to_value", "pydicom.filereader.dcmread", "pydicom.filereader.read_dataset", "pydicom.filereader.read_deferred_data_element", "pydicom.filereader.read_file_meta_info", "pydicom.filereader.read_partial", "pydicom.filereader.read_preamble", "pydicom.filereader.read_sequence", "pydicom.filereader.read_sequence_item", "pydicom.fileset.DIRECTORY_RECORDERS", "pydicom.fileset.FileInstance", "pydicom.fileset.FileSet", "pydicom.fileset.RecordNode", "pydicom.fileset.generate_filename", "pydicom.fileset.is_conformant_file_id", "pydicom.fileutil.absorb_delimiter_item", "pydicom.fileutil.find_bytes", "pydicom.fileutil.find_delimiter", "pydicom.fileutil.length_of_undefined_length", "pydicom.fileutil.read_undefined_length_value", "pydicom.filewriter.correct_ambiguous_vr", "pydicom.filewriter.correct_ambiguous_vr_element", "pydicom.filewriter.dcmwrite", "pydicom.filewriter.multi_string", "pydicom.filewriter.write_ATvalue", "pydicom.filewriter.write_DA", "pydicom.filewriter.write_DT", "pydicom.filewriter.write_OBvalue", "pydicom.filewriter.write_OWvalue", "pydicom.filewriter.write_PN", "pydicom.filewriter.write_TM", "pydicom.filewriter.write_UI", "pydicom.filewriter.write_UN", "pydicom.filewriter.write_data_element", "pydicom.filewriter.write_dataset", "pydicom.filewriter.write_file_meta_info", "pydicom.filewriter.write_number_string", "pydicom.filewriter.write_numbers", "pydicom.filewriter.write_sequence", "pydicom.filewriter.write_sequence_item", "pydicom.filewriter.write_string", "pydicom.filewriter.write_text", "pydicom.hooks.Hooks", "pydicom.hooks.hooks", "pydicom.hooks.raw_element_value", "pydicom.hooks.raw_element_value_fix_separator", "pydicom.hooks.raw_element_value_retry", "pydicom.hooks.raw_element_vr", "pydicom.misc.is_dicom", "pydicom.misc.size_in_bytes", "pydicom.multival.MultiValue", "pydicom.overlays.numpy_handler", "pydicom.pixel_data_handlers.gdcm_handler", "pydicom.pixel_data_handlers.jpeg_ls_handler", "pydicom.pixel_data_handlers.numpy_handler", "pydicom.pixel_data_handlers.pillow_handler", "pydicom.pixel_data_handlers.pylibjpeg_handler", "pydicom.pixel_data_handlers.rle_handler", "pydicom.pixels.apply_color_lut", "pydicom.pixels.apply_icc_profile", "pydicom.pixels.apply_modality_lut", "pydicom.pixels.apply_presentation_lut", "pydicom.pixels.apply_rescale", "pydicom.pixels.apply_voi", "pydicom.pixels.apply_voi_lut", "pydicom.pixels.apply_windowing", "pydicom.pixels.as_pixel_options", "pydicom.pixels.compress", "pydicom.pixels.convert_color_space", "pydicom.pixels.create_icc_transform", "pydicom.pixels.decoders.DeflatedExplicitVRLittleEndianDecoder", "pydicom.pixels.decoders.DeflatedImageFrameCompressionDecoder", "pydicom.pixels.decoders.ExplicitVRBigEndianDecoder", "pydicom.pixels.decoders.ExplicitVRLittleEndianDecoder", "pydicom.pixels.decoders.HTJ2KDecoder", "pydicom.pixels.decoders.HTJ2KLosslessDecoder", "pydicom.pixels.decoders.HTJ2KLosslessRPCLDecoder", "pydicom.pixels.decoders.ImplicitVRLittleEndianDecoder", "pydicom.pixels.decoders.JPEG2000Decoder", "pydicom.pixels.decoders.JPEG2000LosslessDecoder", "pydicom.pixels.decoders.JPEGBaseline8BitDecoder", "pydicom.pixels.decoders.JPEGExtended12BitDecoder", "pydicom.pixels.decoders.JPEGLSLosslessDecoder", "pydicom.pixels.decoders.JPEGLSNearLosslessDecoder", "pydicom.pixels.decoders.JPEGLosslessDecoder", "pydicom.pixels.decoders.JPEGLosslessSV1Decoder", "pydicom.pixels.decoders.RLELosslessDecoder", "pydicom.pixels.decoders.base.DecodeRunner", "pydicom.pixels.decoders.base.Decoder", "pydicom.pixels.decompress", "pydicom.pixels.encoders.DeflatedImageFrameCompressionEncoder", "pydicom.pixels.encoders.JPEG2000Encoder", "pydicom.pixels.encoders.JPEG2000LosslessEncoder", "pydicom.pixels.encoders.JPEGLSLosslessEncoder", "pydicom.pixels.encoders.JPEGLSNearLosslessEncoder", "pydicom.pixels.encoders.RLELosslessEncoder", "pydicom.pixels.encoders.base.EncodeRunner", "pydicom.pixels.encoders.base.Encoder", "pydicom.pixels.get_decoder", "pydicom.pixels.get_encoder", "pydicom.pixels.iter_pixels", "pydicom.pixels.pack_bits", "pydicom.pixels.pixel_array", "pydicom.pixels.processing.apply_color_lut", "pydicom.pixels.processing.apply_icc_profile", "pydicom.pixels.processing.apply_modality_lut", "pydicom.pixels.processing.apply_presentation_lut", "pydicom.pixels.processing.apply_rescale", "pydicom.pixels.processing.apply_voi", "pydicom.pixels.processing.apply_voi_lut", "pydicom.pixels.processing.apply_windowing", "pydicom.pixels.processing.convert_color_space", "pydicom.pixels.processing.create_icc_transform", "pydicom.pixels.set_pixel_data", "pydicom.pixels.unpack_bits", "pydicom.pixels.utils.as_pixel_options", "pydicom.pixels.utils.compress", "pydicom.pixels.utils.decompress", "pydicom.pixels.utils.expand_ybr422", "pydicom.pixels.utils.get_expected_length", "pydicom.pixels.utils.get_image_pixel_ids", "pydicom.pixels.utils.get_j2k_parameters", "pydicom.pixels.utils.get_nr_frames", "pydicom.pixels.utils.iter_pixels", "pydicom.pixels.utils.pack_bits", "pydicom.pixels.utils.pixel_array", "pydicom.pixels.utils.pixel_dtype", "pydicom.pixels.utils.reshape_pixel_array", "pydicom.pixels.utils.set_pixel_data", "pydicom.pixels.utils.unpack_bits", "pydicom.sequence.Sequence", "pydicom.sr.Code", "pydicom.sr.Collection", "pydicom.sr.Concepts", "pydicom.tag.BaseTag", "pydicom.tag.Tag", "pydicom.tag.TupleTag", "pydicom.tag.tag_in_exception", "pydicom.uid.AcquisitionContextSRStorage", "pydicom.uid.AdvancedBlendingPresentationStateStorage", "pydicom.uid.AllTransferSyntaxes", "pydicom.uid.AmbulatoryECGWaveformStorage", "pydicom.uid.ArterialPulseWaveformStorage", "pydicom.uid.AutorefractionMeasurementsStorage", "pydicom.uid.BasicStructuredDisplayStorage", "pydicom.uid.BasicTextSRStorage", "pydicom.uid.BasicVoiceAudioWaveformStorage", "pydicom.uid.BlendingSoftcopyPresentationStateStorage", "pydicom.uid.BodyPositionWaveformStorage", "pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "pydicom.uid.BreastTomosynthesisImageStorage", "pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "pydicom.uid.CArmPhotonElectronRadiationStorage", "pydicom.uid.CTDefinedProcedureProtocolStorage", "pydicom.uid.CTImageStorage", "pydicom.uid.CTPerformedProcedureProtocolStorage", "pydicom.uid.CardiacElectrophysiologyWaveformStorage", "pydicom.uid.ChestCADSRStorage", "pydicom.uid.ColonCADSRStorage", "pydicom.uid.ColorPaletteStorage", "pydicom.uid.ColorSoftcopyPresentationStateStorage", "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.Comprehensive3DSRStorage", "pydicom.uid.ComprehensiveSRStorage", "pydicom.uid.ComputedRadiographyImageStorage", "pydicom.uid.ConfocalMicroscopyImageStorage", "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage", "pydicom.uid.ContentAssessmentResultsStorage", "pydicom.uid.CornealTopographyMapStorage", "pydicom.uid.DICOS2DAITStorage", "pydicom.uid.DICOS3DAITStorage", "pydicom.uid.DICOSCTImageStorage", "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "pydicom.uid.DICOSQuadrupoleResonanceStorage", "pydicom.uid.DICOSThreatDetectionReportStorage", "pydicom.uid.DeflatedExplicitVRLittleEndian", "pydicom.uid.DeflatedImageFrameCompression", "pydicom.uid.DeformableSpatialRegistrationStorage", "pydicom.uid.DermoscopicPhotographyImageStorage", "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "pydicom.uid.DigitalXRayImageStorageForPresentation", "pydicom.uid.DigitalXRayImageStorageForProcessing", "pydicom.uid.EddyCurrentImageStorage", "pydicom.uid.EddyCurrentMultiFrameImageStorage", "pydicom.uid.ElectromyogramWaveformStorage", "pydicom.uid.ElectrooculogramWaveformStorage", "pydicom.uid.EncapsulatedCDAStorage", "pydicom.uid.EncapsulatedMTLStorage", "pydicom.uid.EncapsulatedOBJStorage", "pydicom.uid.EncapsulatedPDFStorage", "pydicom.uid.EncapsulatedSTLStorage", "pydicom.uid.EnhancedCTImageStorage", "pydicom.uid.EnhancedContinuousRTImageStorage", "pydicom.uid.EnhancedMRColorImageStorage", "pydicom.uid.EnhancedMRImageStorage", "pydicom.uid.EnhancedPETImageStorage", "pydicom.uid.EnhancedRTImageStorage", "pydicom.uid.EnhancedSRStorage", "pydicom.uid.EnhancedUSVolumeStorage", "pydicom.uid.EnhancedXAImageStorage", "pydicom.uid.EnhancedXRFImageStorage", "pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "pydicom.uid.ExplicitVRBigEndian", "pydicom.uid.ExplicitVRLittleEndian", "pydicom.uid.ExtensibleSRStorage", "pydicom.uid.General32bitECGWaveformStorage", "pydicom.uid.GeneralAudioWaveformStorage", "pydicom.uid.GeneralECGWaveformStorage", "pydicom.uid.GenericImplantTemplateStorage", "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.HEVCM10P51", "pydicom.uid.HEVCMP51", "pydicom.uid.HTJ2K", "pydicom.uid.HTJ2KLossless", "pydicom.uid.HTJ2KLosslessRPCL", "pydicom.uid.HangingProtocolStorage", "pydicom.uid.HeightMapSegmentationStorage", "pydicom.uid.HemodynamicWaveformStorage", "pydicom.uid.ImplantAssemblyTemplateStorage", "pydicom.uid.ImplantTemplateGroupStorage", "pydicom.uid.ImplantationPlanSRStorage", "pydicom.uid.ImplicitVRLittleEndian", "pydicom.uid.IntraocularLensCalculationsStorage", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "pydicom.uid.InventoryStorage", "pydicom.uid.JPEG2000", "pydicom.uid.JPEG2000Lossless", "pydicom.uid.JPEG2000MC", "pydicom.uid.JPEG2000MCLossless", "pydicom.uid.JPEG2000TransferSyntaxes", "pydicom.uid.JPEGBaseline8Bit", "pydicom.uid.JPEGExtended12Bit", "pydicom.uid.JPEGLSLossless", "pydicom.uid.JPEGLSNearLossless", "pydicom.uid.JPEGLSTransferSyntaxes", "pydicom.uid.JPEGLossless", "pydicom.uid.JPEGLosslessSV1", "pydicom.uid.JPEGTransferSyntaxes", "pydicom.uid.JPEGXL", "pydicom.uid.JPEGXLJPEGRecompression", "pydicom.uid.JPEGXLLossless", "pydicom.uid.JPEGXLTransferSyntaxes", "pydicom.uid.JPIPHTJ2KReferenced", "pydicom.uid.JPIPHTJ2KReferencedDeflate", "pydicom.uid.KeratometryMeasurementsStorage", "pydicom.uid.KeyObjectSelectionDocumentStorage", "pydicom.uid.LabelMapSegmentationStorage", "pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "pydicom.uid.LensometryMeasurementsStorage", "pydicom.uid.MPEG2MPHL", "pydicom.uid.MPEG2MPHLF", "pydicom.uid.MPEG2MPML", "pydicom.uid.MPEG2MPMLF", "pydicom.uid.MPEG4HP41", "pydicom.uid.MPEG4HP41BD", "pydicom.uid.MPEG4HP41BDF", "pydicom.uid.MPEG4HP41F", "pydicom.uid.MPEG4HP422D", "pydicom.uid.MPEG4HP422DF", "pydicom.uid.MPEG4HP423D", "pydicom.uid.MPEG4HP423DF", "pydicom.uid.MPEG4HP42STEREO", "pydicom.uid.MPEG4HP42STEREOF", "pydicom.uid.MPEGTransferSyntaxes", "pydicom.uid.MRImageStorage", "pydicom.uid.MRSpectroscopyStorage", "pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "pydicom.uid.MammographyCADSRStorage", "pydicom.uid.MediaStorageDirectoryStorage", "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "pydicom.uid.MultichannelRespiratoryWaveformStorage", "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.NuclearMedicineImageStorage", "pydicom.uid.OphthalmicAxialMeasurementsStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "pydicom.uid.OphthalmicPhotography16BitImageStorage", "pydicom.uid.OphthalmicPhotography8BitImageStorage", "pydicom.uid.OphthalmicThicknessMapStorage", "pydicom.uid.OphthalmicTomographyImageStorage", "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "pydicom.uid.PYDICOM_ROOT_UID", "pydicom.uid.ParametricMapStorage", "pydicom.uid.PatientRadiationDoseSRStorage", "pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "pydicom.uid.PhotoacousticImageStorage", "pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "pydicom.uid.PositronEmissionTomographyImageStorage", "pydicom.uid.PrivateTransferSyntaxes", "pydicom.uid.ProcedureLogStorage", "pydicom.uid.ProtocolApprovalStorage", "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "pydicom.uid.RE_VALID_UID", "pydicom.uid.RE_VALID_UID_PREFIX", "pydicom.uid.RLELossless", "pydicom.uid.RLETransferSyntaxes", "pydicom.uid.RTBeamsDeliveryInstructionStorage", "pydicom.uid.RTBeamsTreatmentRecordStorage", "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "pydicom.uid.RTBrachyTreatmentRecordStorage", "pydicom.uid.RTDoseStorage", "pydicom.uid.RTImageStorage", "pydicom.uid.RTIonBeamsTreatmentRecordStorage", "pydicom.uid.RTIonPlanStorage", "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage", "pydicom.uid.RTPhysicianIntentStorage", "pydicom.uid.RTPlanStorage", "pydicom.uid.RTRadiationRecordSetStorage", "pydicom.uid.RTRadiationSalvageRecordStorage", "pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "pydicom.uid.RTRadiationSetStorage", "pydicom.uid.RTSegmentAnnotationStorage", "pydicom.uid.RTStructureSetStorage", "pydicom.uid.RTTreatmentPreparationStorage", "pydicom.uid.RTTreatmentSummaryRecordStorage", "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "pydicom.uid.RawDataStorage", "pydicom.uid.RealWorldValueMappingStorage", "pydicom.uid.RespiratoryWaveformStorage", "pydicom.uid.RoboticArmRadiationStorage", "pydicom.uid.RoboticRadiationRecordStorage", "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", "pydicom.uid.SMPTEST211030PCMDigitalAudio", "pydicom.uid.SecondaryCaptureImageStorage", "pydicom.uid.SegmentationStorage", "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.SimplifiedAdultEchoSRStorage", "pydicom.uid.SleepElectroencephalogramWaveformStorage", "pydicom.uid.SpatialFiducialsStorage", "pydicom.uid.SpatialRegistrationStorage", "pydicom.uid.SpectaclePrescriptionReportStorage", "pydicom.uid.StereometricRelationshipStorage", "pydicom.uid.SubjectiveRefractionMeasurementsStorage", "pydicom.uid.SurfaceScanMeshStorage", "pydicom.uid.SurfaceScanPointCloudStorage", "pydicom.uid.SurfaceSegmentationStorage", "pydicom.uid.ThermographyImageStorage", "pydicom.uid.ThermographyMultiFrameImageStorage", "pydicom.uid.TomotherapeuticRadiationRecordStorage", "pydicom.uid.TomotherapeuticRadiationStorage", "pydicom.uid.TractographyResultsStorage", "pydicom.uid.TwelveLeadECGWaveformStorage", "pydicom.uid.UID", "pydicom.uid.UltrasoundImageStorage", "pydicom.uid.UltrasoundMultiFrameImageStorage", "pydicom.uid.UncompressedTransferSyntaxes", "pydicom.uid.VLEndoscopicImageStorage", "pydicom.uid.VLMicroscopicImageStorage", "pydicom.uid.VLPhotographicImageStorage", "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "pydicom.uid.VLWholeSlideMicroscopyImageStorage", "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage", "pydicom.uid.VideoEndoscopicImageStorage", "pydicom.uid.VideoMicroscopicImageStorage", "pydicom.uid.VideoPhotographicImageStorage", "pydicom.uid.VisualAcuityMeasurementsStorage", "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.WaveformAnnotationSRStorage", "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "pydicom.uid.XADefinedProcedureProtocolStorage", "pydicom.uid.XAPerformedProcedureProtocolStorage", "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.XRay3DAngiographicImageStorage", "pydicom.uid.XRay3DCraniofacialImageStorage", "pydicom.uid.XRayAngiographicImageStorage", "pydicom.uid.XRayRadiationDoseSRStorage", "pydicom.uid.XRayRadiofluoroscopicImageStorage", "pydicom.uid.generate_uid", "pydicom.uid.register_transfer_syntax", "pydicom.valuerep.DA", "pydicom.valuerep.DS", "pydicom.valuerep.DSdecimal", "pydicom.valuerep.DSfloat", "pydicom.valuerep.DT", "pydicom.valuerep.IS", "pydicom.valuerep.ISfloat", "pydicom.valuerep.PersonName", "pydicom.valuerep.TM", "pydicom.valuerep.VR", "pydicom.valuerep.format_number_as_ds", "pydicom.valuerep.is_valid_ds", "pydicom.values.convert_AE_string", "pydicom.values.convert_ATvalue", "pydicom.values.convert_DA_string", "pydicom.values.convert_DS_string", "pydicom.values.convert_DT_string", "pydicom.values.convert_IS_string", "pydicom.values.convert_OBvalue", "pydicom.values.convert_OWvalue", "pydicom.values.convert_PN", "pydicom.values.convert_SQ", "pydicom.values.convert_TM_string", "pydicom.values.convert_UI", "pydicom.values.convert_UN", "pydicom.values.convert_UR_string", "pydicom.values.convert_numbers", "pydicom.values.convert_single_string", "pydicom.values.convert_string", "pydicom.values.convert_tag", "pydicom.values.convert_text", "pydicom.values.convert_value", "pydicom.values.multi_string", "pydicom.waveforms.numpy_handler", "Bulk Data Handlers", "Pixel Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixel_data_handlers</span></code>)", "User Hooks (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.hooks</span></code>)", "API Reference", "Miscellaneous (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.misc</span></code>)", "Overlay Data Handling (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.overlays</span></code>)", "Pixel Data (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels</span></code>)", "Pixel Data Decoders (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels.decoders</span></code>)", "Pixel Data Encoders (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels.encoders</span></code>)", "Pixel Data Processing (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels.processing</span></code>)", "Pixel Data Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels.utils</span></code>)", "Concepts and Context Groups (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.sr</span></code>)", "UID Definitions and Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.uid</span></code>)", "Waveform Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.waveforms</span></code>)", "Release notes", "Version 0.9.2", "Version 0.9.3", "Version 0.9.4", "Version 0.9.5", "Version 0.9.6", "Version 0.9.7", "Version 0.9.8", "Version 0.9.9", "Version 1.0.0", "Version 1.1.0", "Version 1.2.0", "Version 1.3.0", "Version 1.4.0", "Version 1.4.1", "Version 2.0.0", "Version 2.1.0", "Version 2.1.1", "Version 2.2.0", "Version 2.3.0", "Version 2.4.0", "Version 3.0.0", "Version 3.1.0", "Computation times", "Contributing to pydicom", "Contributing a source code change", "Contributing a documentation change", "Dataset basics: read, access, modify, write", "Introduction to JSON support", "DICOM File-sets and DICOMDIR", "Tutorials", "How to install pydicom", "<em>Pixel Data</em> - Part 3: Compression and decompression", "<em>Pixel Data</em> - Part 2: Creation of pixel data", "<em>Pixel Data</em>", "<em>Pixel Data</em> - Part 1: Introduction and accessing", "Structured Reporting", "Waveforms"], "titleterms": {"": 23, "0": [599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 619, 620, 621], "1": [599, 608, 609, 610, 611, 612, 613, 615, 616, 621, 634], "12": 632, "2": [599, 600, 610, 614, 615, 616, 617, 618, 619, 632], "2000": [37, 631], "3": [599, 601, 611, 618, 620, 621, 631], "4": [599, 602, 612, 613, 619], "5": [599, 603], "6": [599, 604], "7": [599, 605], "8": [599, 606, 632], "9": [599, 600, 601, 602, 603, 604, 605, 606, 607], "A": [24, 26], "Near": 38, "The": 628, "absorb_delimiter_item": 180, "access": [626, 634], "acquisitioncontextsrstorag": 303, "ad": [30, 35, 48, 626, 628], "add": 16, "add_dict_entri": [109, 110], "add_private_dict_entri": [111, 112], "addit": [599, 602, 630], "advancedblendingpresentationstatestorag": 304, "all": 48, "allow_ds_float": 89, "alltransfersyntax": 305, "ambulatoryecgwaveformstorag": 306, "an": [35, 634], "analys": 20, "ani": 626, "anonym": 17, "api": [55, 588], "appli": 628, "apply_color_lut": [223, 268], "apply_icc_profil": [224, 269], "apply_j2k_correct": 81, "apply_modality_lut": [225, 270], "apply_presentation_lut": [226, 271], "apply_rescal": [227, 272], "apply_voi": [228, 273], "apply_voi_lut": [229, 274], "apply_window": [230, 275], "ar": 23, "arterialpulsewaveformstorag": 307, "as_pixel_opt": [231, 280], "ask": 23, "assume_implicit_vr_switch": 90, "autorefractionmeasurementsstorag": 308, "avail": [33, 37, 38, 39], "axial": 4, "base": [14, 72, 252, 253, 261, 262], "basetag": 299, "basic": 626, "basicstructureddisplaystorag": 309, "basictextsrstorag": 310, "basicvoiceaudiowaveformstorag": 311, "best": 44, "between": 20, "binari": 627, "bit": [37, 632], "blendingsoftcopypresentationstatestorag": 312, "bodypositionwaveformstorag": 313, "branch": [624, 625], "breastprojectionxrayimagestorageforpresent": 314, "breastprojectionxrayimagestorageforprocess": 315, "breasttomosynthesisimagestorag": 316, "buffer": 32, "bug": [599, 600, 601, 602, 604, 605, 606], "build": 625, "bulk": [68, 585], "can": 23, "cardiacelectrophysiologywaveformstorag": 322, "carmphotonelectronradiationrecordstorag": 317, "carmphotonelectronradiationstorag": 318, "categori": 626, "chang": [599, 600, 601, 602, 604, 605, 606, 607, 608, 610, 611, 612, 613, 615, 617, 618, 619, 620, 621, 624, 625, 628], "changelog": [599, 614], "charact": 56, "charset": [56, 77, 78, 79, 80], "chestcadsrstorag": 323, "cite": 23, "class": [72, 597], "cli": [25, 26, 27], "code": [44, 296, 624], "codifi": [24, 26, 53], "collect": 297, "coloncadsrstorag": 324, "color": 51, "colorpalettestorag": 325, "colorsoftcopypresentationstatestorag": 326, "combin": [26, 27], "command": [24, 26, 28], "commit": [624, 625], "compositingplanarmprvolumetricpresentationstatestorag": 327, "comprehensive3dsrstorag": 328, "comprehensivesrstorag": 329, "compress": [33, 42, 45, 46, 232, 281, 631, 634], "comput": [5, 13, 19, 21, 622], "computedradiographyimagestorag": 330, "concept": [298, 596], "conclus": [628, 631, 632, 634], "conda": 630, "config": [57, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "configur": [38, 57], "confocalmicroscopyimagestorag": 331, "confocalmicroscopytiledpyramidalimagestorag": 332, "contentassessmentresultsstorag": 333, "context": 596, "contrib": [599, 603, 606, 607], "contribut": [623, 624, 625], "contributor": [599, 607], "control": 634, "convert": [627, 634], "convert_ae_str": 563, "convert_atvalu": 564, "convert_color_spac": [233, 276], "convert_da_str": 565, "convert_ds_str": 566, "convert_dt_str": 567, "convert_encod": 77, "convert_is_str": 568, "convert_numb": 577, "convert_obvalu": 569, "convert_owvalu": 570, "convert_pn": 571, "convert_raw_data_el": 132, "convert_single_str": 578, "convert_sq": 572, "convert_str": 579, "convert_tag": 580, "convert_text": 581, "convert_tm_str": 573, "convert_ui": 574, "convert_un": 575, "convert_ur_str": 576, "convert_valu": 582, "convert_wrong_length_to_un": 91, "core": 43, "cornealtopographymapstorag": 334, "coron": 4, "correct_ambiguous_vr": 185, "correct_ambiguous_vr_el": 186, "creat": [68, 624, 625, 627, 628, 632], "create_icc_transform": [234, 277], "creation": 632, "ct": 4, "ctdefinedprocedureprotocolstorag": 319, "ctimagestorag": 320, "ctperformedprocedureprotocolstorag": 321, "current": 624, "d": 552, "da": 551, "data": [3, 8, 9, 12, 17, 29, 30, 31, 35, 36, 42, 45, 46, 48, 50, 51, 52, 58, 59, 61, 62, 68, 105, 106, 107, 108, 585, 586, 590, 591, 592, 593, 594, 595, 598, 627, 631, 632, 633, 634, 636], "data_element_callback": 92, "data_element_callback_kwarg": 93, "data_element_gener": 164, "data_element_offset_to_valu": 165, "datadict": [59, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "datael": [43, 129], "dataelem": [62, 129, 130, 131, 132], "dataelement_from_raw": 130, "dataset": [9, 14, 43, 45, 50, 51, 52, 58, 60, 70, 71, 73, 75, 133, 134, 135, 136, 137, 626, 627, 631], "datetime_convers": 94, "dcmread": 166, "dcmwrite": 187, "debug": 95, "decod": [3, 29, 30, 31, 56, 67, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 592, 634, 636], "decode_byt": 78, "decode_data_sequ": 138, "decode_el": 79, "decoderunn": 252, "decompress": [42, 254, 282, 631], "definit": 597, "deflat": [33, 631], "deflatedexplicitvrlittleendian": 342, "deflatedexplicitvrlittleendiandecod": 235, "deflatedimageframecompress": 343, "deflatedimageframecompressiondecod": 236, "deflatedimageframecompressionencod": 255, "deformablespatialregistrationstorag": 344, "defragment_data": 139, "delet": 626, "deprec": [599, 620], "dermoscopicphotographyimagestorag": 345, "develop": 630, "dicom": [0, 10, 11, 12, 16, 17, 20, 24, 26, 44, 48, 53, 59, 76, 628, 630, 636], "dicombytesio": 160, "dicomdir": 628, "dicomfil": 161, "dicomfilelik": 162, "dicomio": 163, "dicos2daitstorag": 335, "dicos3daitstorag": 336, "dicosctimagestorag": 337, "dicosdigitalxrayimagestorageforpresent": 338, "dicosdigitalxrayimagestorageforprocess": 339, "dicosquadrupoleresonancestorag": 340, "dicosthreatdetectionreportstorag": 341, "dictionari": [16, 48, 59], "dictionary_descript": 115, "dictionary_has_tag": 116, "dictionary_is_retir": 117, "dictionary_keyword": 118, "dictionary_vm": 113, "dictionary_vr": 114, "differ": 20, "digitalintraoralxrayimagestorageforpresent": 346, "digitalintraoralxrayimagestorageforprocess": 347, "digitalmammographyxrayimagestorageforpresent": 348, "digitalmammographyxrayimagestorageforprocess": 349, "digitalxrayimagestorageforpresent": 350, "digitalxrayimagestorageforprocess": 351, "directory_record": 174, "displai": [22, 48], "do": 23, "document": [54, 55, 599, 611, 624, 625], "doe": 23, "doubl": 632, "download": [624, 625, 630], "downsiz": 2, "ds_decim": 82, "ds_numpi": 83, "dsdecim": 553, "dsfloat": 554, "dt": 555, "eddycurrentimagestorag": 352, "eddycurrentmultiframeimagestorag": 353, "electromyogramwaveformstorag": 354, "electrooculogramwaveformstorag": 355, "element": [32, 43, 48, 61, 62, 63, 64, 65, 66, 67, 626], "encap": [68, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "encapsul": [68, 140, 631], "encapsulate_buff": 141, "encapsulate_extend": 142, "encapsulate_extended_buff": 143, "encapsulatedcdastorag": 356, "encapsulatedmtlstorag": 357, "encapsulatedobjstorag": 358, "encapsulatedpdfstorag": 359, "encapsulatedstlstorag": 360, "encod": [34, 35, 36, 37, 38, 39, 56, 255, 256, 257, 258, 259, 260, 261, 262, 593, 636], "encode_str": 80, "encoderunn": 261, "enforc": 44, "enforce_valid_valu": 96, "enhanc": [599, 600, 601, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 619, 620, 621], "enhancedcontinuousrtimagestorag": 362, "enhancedctimagestorag": 361, "enhancedmrcolorimagestorag": 363, "enhancedmrimagestorag": 364, "enhancedpetimagestorag": 365, "enhancedrtimagestorag": 366, "enhancedsrstorag": 367, "enhancedusvolumestorag": 368, "enhancedxaimagestorag": 369, "enhancedxrayradiationdosesrstorag": 371, "enhancedxrfimagestorag": 370, "entri": 48, "error": [69, 158], "exampl": [6, 24, 26, 33, 37, 38, 39, 55, 70, 159, 626, 630], "except": 69, "exist": 628, "expand_ybr422": 283, "explicitvrbigendian": 372, "explicitvrbigendiandecod": 237, "explicitvrlittleendian": 373, "explicitvrlittleendiandecod": 238, "extend": [25, 26], "extensiblesrstorag": 374, "file": [0, 10, 17, 20, 24, 26, 40, 53, 76, 599, 603, 606, 607, 628, 630], "file_meta": 626, "filebas": [72, 160, 161, 162, 163], "filedataset": 134, "fileinst": 175, "filemetadataset": 135, "fileread": [73, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "fileset": [76, 174, 175, 176, 177, 178, 179, 628], "fileutil": [74, 180, 181, 182, 183, 184], "filewrit": [75, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "find_byt": 181, "find_delimit": 182, "fix": [599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621], "float": 632, "format": [8, 627], "format_number_as_d": 561, "fragment_fram": 144, "frame": [33, 631, 632], "frequent": 23, "from": [53, 627], "futur": 44, "future_behavior": 97, "gdcm": [29, 34, 42, 630], "gdcm_handler": 217, "gener": [6, 23, 54], "general32bitecgwaveformstorag": 375, "generalaudiowaveformstorag": 376, "generalecgwaveformstorag": 377, "generate_filenam": 178, "generate_frag": 146, "generate_fragmented_fram": 145, "generate_fram": 147, "generate_pixel_data": 148, "generate_pixel_data_frag": 149, "generate_pixel_data_fram": 150, "generate_uid": 549, "genericimplanttemplatestorag": 378, "get": [55, 58, 626], "get_charset_fil": 105, "get_decod": 263, "get_encod": 264, "get_entri": 119, "get_expected_length": 284, "get_fram": 151, "get_frame_offset": 152, "get_image_pixel_id": 285, "get_j2k_paramet": 286, "get_nr_fram": 287, "get_palette_fil": 106, "get_path": 159, "get_private_entri": 120, "get_testdata_fil": [107, 108], "glossari": 40, "grayscal": 632, "grayscaleplanarmprvolumetricpresentationstatestorag": 379, "grayscalesoftcopypresentationstatestorag": 380, "group": 596, "guid": [26, 41, 47, 55], "guidelin": 54, "handl": [46, 590], "handler": [585, 586, 598], "hangingprotocolstorag": 386, "happen": [624, 625], "heightmapsegmentationstorag": 387, "hemodynamicwaveformstorag": 388, "hevcm10p51": 381, "hevcmp51": 382, "hierarch": 0, "hint": 630, "hook": [207, 208, 209, 210, 211, 212, 587], "how": [23, 630], "htj2k": 383, "htj2kdecod": 239, "htj2klossless": 384, "htj2klosslessdecod": 240, "htj2klosslessrpcl": 385, "htj2klosslessrpcldecod": 241, "i": [23, 556], "ignor": 84, "imag": [1, 2, 4, 6, 29, 33, 37, 38, 39, 40, 49, 631], "implantassemblytemplatestorag": 389, "implantationplansrstorag": 391, "implanttemplategroupstorag": 390, "implicitvrlittleendian": 392, "implicitvrlittleendiandecod": 242, "includ": 58, "inform": [11, 40], "infrastructur": [599, 608], "input": [6, 7], "instal": [23, 26, 27, 624, 630], "instanc": 628, "integ": 632, "interfac": 26, "intern": [599, 619, 620], "interpret": [37, 38], "intraocularlenscalculationsstorag": 393, "intravascularopticalcoherencetomographyimagestorageforpresent": 394, "intravascularopticalcoherencetomographyimagestorageforprocess": 395, "introduct": [26, 27, 44, 48, 49, 50, 51, 52, 53, 627, 634], "invalid_key_behavior": 86, "invalid_keyword_behavior": 85, "invaliddicomerror": 158, "inventorystorag": 396, "io": [71, 72, 74], "is_conformant_file_id": 179, "is_dicom": 213, "is_valid_d": 562, "isfloat": 557, "item": 16, "itemize_frag": 153, "itemize_fram": 154, "iter_pixel": [265, 288], "jpeg": [37, 38, 631], "jpeg2000": 397, "jpeg2000decod": 243, "jpeg2000encod": 256, "jpeg2000lossless": 398, "jpeg2000losslessdecod": 244, "jpeg2000losslessencod": 257, "jpeg2000mc": 399, "jpeg2000mclossless": 400, "jpeg2000transfersyntax": 401, "jpeg_ls_handl": 218, "jpegbaseline8bit": 402, "jpegbaseline8bitdecod": 245, "jpegextended12bit": 403, "jpegextended12bitdecod": 246, "jpeglossless": 407, "jpeglosslessdecod": 249, "jpeglosslesssv1": 408, "jpeglosslesssv1decod": 250, "jpeglslossless": 404, "jpeglslosslessdecod": 247, "jpeglslosslessencod": 258, "jpeglsnearlossless": 405, "jpeglsnearlosslessdecod": 248, "jpeglsnearlosslessencod": 259, "jpeglstransfersyntax": 406, "jpegtransfersyntax": 409, "jpegxl": 410, "jpegxljpegrecompress": 411, "jpegxllossless": 412, "jpegxltransfersyntax": 413, "jpiphtj2kreferenc": 414, "jpiphtj2kreferenceddefl": 415, "json": 627, "keratometrymeasurementsstorag": 416, "keyobjectselectiondocumentstorag": 417, "keyword_for_tag": 121, "l": [38, 631], "labelmapsegmentationstorag": 418, "larg": 627, "legacyconvertedenhancedctimagestorag": 419, "legacyconvertedenhancedmrimagestorag": 420, "legacyconvertedenhancedpetimagestorag": 421, "length_of_undefined_length": 183, "lensometrymeasurementsstorag": 422, "librari": [624, 630], "licens": 23, "limit": 44, "line": 26, "list": [11, 597], "load": [4, 628], "lossless": [29, 37, 38, 39, 631], "lut": 51, "maculargridthicknessandvolumereportstorag": 440, "major": [44, 599, 600, 601, 602, 603, 604, 605, 606, 608], "make": [624, 625], "mammographycadsrstorag": 441, "mask_match": 122, "matplotlib": 49, "mediastoragedirectorystorag": 442, "memori": [14, 634], "meta": 40, "metadata": [6, 15, 634], "microscopybulksimpleannotationsstorag": 443, "minim": 634, "misc": [213, 214, 589], "miscellan": [29, 589], "modal": 51, "modifi": [626, 628], "modul": [40, 591], "mpeg2mphl": 423, "mpeg2mphlf": 424, "mpeg2mpml": 425, "mpeg2mpmlf": 426, "mpeg4hp41": 427, "mpeg4hp41bd": 428, "mpeg4hp41bdf": 429, "mpeg4hp41f": 430, "mpeg4hp422d": 431, "mpeg4hp422df": 432, "mpeg4hp423d": 433, "mpeg4hp423df": 434, "mpeg4hp42stereo": 435, "mpeg4hp42stereof": 436, "mpegtransfersyntax": 437, "mri": 2, "mrimagestorag": 438, "mrspectroscopystorag": 439, "multi": [63, 632], "multi_str": [188, 583], "multichannelrespiratorywaveformstorag": 448, "multiframegrayscalebytesecondarycaptureimagestorag": 444, "multiframegrayscalewordsecondarycaptureimagestorag": 445, "multiframesinglebitsecondarycaptureimagestorag": 446, "multiframetruecolorsecondarycaptureimagestorag": 447, "multiplevolumerenderingvolumetricpresentationstatestorag": 449, "multiv": [63, 215], "multivalu": 215, "name": 22, "ndarrai": 634, "new": [48, 599, 603, 624, 625, 628], "next": [624, 625, 626, 632, 634], "note": 599, "nuclearmedicineimagestorag": 450, "numpy_handl": [216, 219, 584], "o": 32, "offici": 630, "oper": 51, "ophthalmicaxialmeasurementsstorag": 451, "ophthalmicopticalcoherencetomographybscanvolumeanalysisstorag": 452, "ophthalmicopticalcoherencetomographyenfaceimagestorag": 453, "ophthalmicphotography16bitimagestorag": 454, "ophthalmicphotography8bitimagestorag": 455, "ophthalmicthicknessmapstorag": 456, "ophthalmictomographyimagestorag": 457, "ophthalmicvisualfieldstaticperimetrymeasurementsstorag": 458, "option": [23, 24, 26, 29, 34, 57, 624, 630], "other": [26, 27, 599, 600, 601, 602, 603, 604, 605, 607, 608, 609], "output": [6, 7, 8], "overlai": [50, 216, 590], "overlay_arrai": 50, "pack_bit": [266, 289], "packag": [44, 45, 631], "palett": 51, "paramet": [33, 37, 38, 39], "parametricmapstorag": 461, "pars": 68, "parse_basic_offset": 155, "parse_frag": 156, "part": [24, 26, 631, 632, 634], "parti": [45, 631], "path": 626, "patientradiationdosesrstorag": 462, "performedimagingagentadministrationsrstorag": 463, "person": 22, "personnam": 558, "photoacousticimagestorag": 464, "photometr": [37, 38], "pillow": [42, 630], "pillow_handl": 220, "pip": 630, "pixel": [9, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 42, 45, 46, 51, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 586, 591, 592, 593, 594, 595, 631, 632, 633, 634], "pixel_arrai": [51, 267, 290], "pixel_data_handl": [98, 217, 218, 219, 220, 221, 222, 586], "pixel_dtyp": 291, "planar": 38, "plannedimagingagentadministrationsrstorag": 465, "plot": [3, 4, 9], "plugin": [29, 30, 33, 34, 35, 37, 38, 39, 42], "positronemissiontomographyimagestorag": 466, "practic": 44, "prerequisit": [23, 46], "preview": [624, 625], "print": 8, "privat": [16, 48, 59], "private_dictionary_descript": 125, "private_dictionary_vm": 123, "private_dictionary_vr": 124, "privateblock": 136, "privatetransfersyntax": 467, "procedurelogstorag": 468, "process": [1, 6, 15, 29, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 594], "proof": 44, "protocolapprovalstorag": 469, "pseudocolorsoftcopypresentationstatestorag": 470, "pull": [624, 625], "pydicom": [2, 23, 24, 26, 27, 28, 34, 42, 43, 44, 45, 47, 48, 49, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 586, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 619, 620, 623, 630], "pydicom_implementation_uid": 459, "pydicom_root_uid": 460, "pyjpegl": [34, 42, 630], "pylibjpeg": [34, 37, 42, 630], "pylibjpeg_handl": 221, "pytest": 624, "python": [23, 32], "question": 23, "radiopharmaceuticalradiationdosesrstorag": 494, "rais": 87, "raw_element_valu": 209, "raw_element_value_fix_separ": 210, "raw_element_value_retri": 211, "raw_element_vr": 212, "rawdatael": 131, "rawdatastorag": 495, "re_valid_uid": 471, "re_valid_uid_prefix": 472, "read": [9, 10, 11, 73, 626], "read_dataset": 167, "read_deferred_data_el": 168, "read_file_meta_info": 169, "read_item": 157, "read_parti": 170, "read_preambl": 171, "read_sequ": 172, "read_sequence_item": 173, "read_undefined_length_valu": 184, "realworldvaluemappingstorag": 496, "recordnod": 177, "refer": [55, 588], "register_transfer_syntax": 550, "releas": [599, 603, 630], "remov": [48, 599, 620, 628], "repeater_has_keyword": 126, "repeater_has_tag": 127, "report": 635, "represent": [38, 60, 61, 63, 64, 66], "request": [624, 625], "requir": [23, 30, 35, 624], "rescal": 51, "reset_data_element_callback": 99, "reshape_pixel_arrai": 292, "respiratorywaveformstorag": 497, "restructuredtext": 54, "rgb": 632, "rle": [29, 39, 631], "rle_handl": 222, "rlelossless": 473, "rlelosslessdecod": 251, "rlelosslessencod": 260, "rletransfersyntax": 474, "roboticarmradiationstorag": 498, "roboticradiationrecordstorag": 499, "routinescalpelectroencephalogramwaveformstorag": 500, "rtbeamsdeliveryinstructionstorag": 475, "rtbeamstreatmentrecordstorag": 476, "rtbrachyapplicationsetupdeliveryinstructionstorag": 477, "rtbrachytreatmentrecordstorag": 478, "rtdosestorag": 479, "rtimagestorag": 480, "rtionbeamstreatmentrecordstorag": 481, "rtionplanstorag": 482, "rtpatientpositionacquisitioninstructionstorag": 483, "rtphysicianintentstorag": 484, "rtplan": 11, "rtplanstorag": 485, "rtradiationrecordsetstorag": 486, "rtradiationsalvagerecordstorag": 487, "rtradiationsetdeliveryinstructionstorag": 488, "rtradiationsetstorag": 489, "rtsegmentannotationstorag": 490, "rtstructuresetstorag": 491, "rttreatmentpreparationstorag": 492, "rttreatmentsummaryrecordstorag": 493, "run": 624, "sagitt": 4, "scratch": 53, "secondarycaptureimagestorag": 504, "segmentationstorag": 505, "segmentedvolumerenderingvolumetricpresentationstatestorag": 506, "sequenc": [18, 43, 64, 295, 626], "set": [8, 10, 48, 76, 100, 628], "set_pixel_data": [278, 293], "show": [0, 14, 26, 28], "show_file_meta": 101, "sign": 632, "simpl": [24, 26], "simplifiedadultechosrstorag": 507, "singl": 17, "size_in_byt": 214, "sleepelectroencephalogramwaveformstorag": 508, "slice": 4, "smptest211020uncompressedinterlacedactivevideo": 501, "smptest211020uncompressedprogressiveactivevideo": 502, "smptest211030pcmdigitalaudio": 503, "sop": [597, 628], "sourc": 624, "space": 51, "spatialfiducialsstorag": 509, "spatialregistrationstorag": 510, "special": 66, "spectacleprescriptionreportstorag": 511, "sr": [296, 297, 298, 596], "stage": 628, "standard": 626, "start": 55, "step": [626, 632, 634], "stereometricrelationshipstorag": 512, "storag": 597, "store": 37, "structur": 635, "style": 54, "sub": 591, "subjectiverefractionmeasurementsstorag": 513, "suit": 624, "support": [45, 46, 627], "surfacescanmeshstorag": 514, "surfacescanpointcloudstorag": 515, "surfacesegmentationstorag": 516, "syntax": [45, 46, 597, 634], "tag": [43, 65, 299, 300, 301, 302], "tag_for_keyword": 128, "tag_in_except": 302, "test": [624, 630], "thermographyimagestorag": 517, "thermographymultiframeimagestorag": 518, "thi": [599, 602, 603], "third": [45, 631], "time": [5, 13, 19, 21, 622], "tm": 559, "tomotherapeuticradiationrecordstorag": 519, "tomotherapeuticradiationstorag": 520, "tractographyresultsstorag": 521, "transfer": [45, 46, 597, 634], "tree": 0, "tupletag": 301, "tutori": 629, "twelveleadecgwaveformstorag": 522, "type": [32, 54, 630], "uid": [303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 597], "ultrasoundimagestorag": 524, "ultrasoundmultiframeimagestorag": 525, "uncompressedtransfersyntax": 526, "unicod": 22, "unpack_bit": [279, 294], "unsign": 632, "us": [0, 2, 23, 45, 49, 53, 630], "usag": [46, 70, 596, 634], "use_ds_decim": 102, "use_ds_numpi": 103, "use_is_numpi": 104, "user": [47, 55, 587], "util": [59, 68, 74, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 595, 597], "valid": [33, 37, 38, 39, 44], "validate_file_meta": 137, "valu": [63, 64, 66, 67, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583], "valuerep": [66, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562], "variablemodalitylutsoftcopypresentationstatestorag": 532, "version": [23, 44, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 630], "videoendoscopicimagestorag": 533, "videomicroscopicimagestorag": 534, "videophotographicimagestorag": 535, "view": [49, 626], "visualacuitymeasurementsstorag": 536, "vlendoscopicimagestorag": 527, "vlmicroscopicimagestorag": 528, "vlphotographicimagestorag": 529, "vlslidecoordinatesmicroscopicimagestorag": 530, "vlwholeslidemicroscopyimagestorag": 531, "voi": 51, "volumerenderingvolumetricpresentationstatestorag": 537, "vr": [32, 560], "warn": 88, "waveform": [3, 52, 584, 598, 636], "waveform_arrai": 52, "waveformannotationsrstorag": 538, "what": [23, 624, 625], "widefieldophthalmicphotography3dcoordinatesimagestorag": 539, "widefieldophthalmicphotographystereographicprojectionimagestorag": 540, "window": 51, "work": [14, 18, 50, 51, 52, 627], "write": [12, 53, 54, 75, 624, 626], "write_atvalu": 189, "write_da": 190, "write_data_el": 198, "write_dataset": 199, "write_dt": 191, "write_file_meta_info": 200, "write_numb": 202, "write_number_str": 201, "write_obvalu": 192, "write_owvalu": 193, "write_pn": 194, "write_sequ": 203, "write_sequence_item": 204, "write_str": 205, "write_text": 206, "write_tm": 195, "write_ui": 196, "write_un": 197, "xadefinedprocedureprotocolstorag": 541, "xaperformedprocedureprotocolstorag": 542, "xaxrfgrayscalesoftcopypresentationstatestorag": 543, "xray3dangiographicimagestorag": 544, "xray3dcraniofacialimagestorag": 545, "xrayangiographicimagestorag": 546, "xrayradiationdosesrstorag": 547, "xrayradiofluoroscopicimagestorag": 548, "your": [44, 624, 625]}})