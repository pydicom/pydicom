environment:
  # There is no need to run the build for all the Python version /
  # architectures combo as the generated nilearn wheel is the same on all
  # platforms (universal wheel).
  # We run the tests on 2 different target platforms for testing purpose only.
  # We use miniconda versions of Python provided by appveyor windows images
  matrix:
    - PYTHON: "C:\\Miniconda-x64"
      PYTHON_VERSION: "2.7.x"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Miniconda34-x64"
      PYTHON_VERSION: "3.4.x"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Miniconda35-x64"
      PYTHON_VERSION: "3.5.x"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Miniconda36-x64"
      PYTHON_VERSION: "3.6.x"
      PYTHON_ARCH: "64"

install:
  # Prepend miniconda installed Python to the PATH of this build
  # Add Library/bin directory to fix issue
  # https://github.com/conda/conda/issues/1753
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PYTHON%\\Library\\bin;%PATH%"


  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Installed prebuilt dependencies from conda
  - "conda install -y -q setuptools"
  - "conda --version"

  # the free channel is only needed for conda 4.7 and Python 2.7
  # Miniconda 34 and 35 use an earlier version of conda (4.3)
  - "IF '%PYTHON_VERSION%'=='2.7.x' conda config --set restore_free_channel true"
  - "conda install pip numpy nose wheel pytest matplotlib -y -q"
  - "pip install nose-timer nose-exclude"

  # Install other pydicom dependencies
  - "python setup.py bdist_wheel"
  - ps: "ls dist"

  # Install the generated wheel package to test it
  - "pip install --pre --no-index --find-links dist/ pydicom"

# Not a .NET project, we build in the install step instead
build: false

test_script:
  - powershell ./build_tools/appveyor/test.ps1

artifacts:
  # Archive the generated packages in the ci.appveyor.com build report.
  - path: dist\*
